2024-04-07 12:26:24,992 - INFO - Tests performed with ollama + llama2.
2024-04-07 12:26:24,995 - INFO - Model name: llama2
2024-04-07 12:26:24,995 - INFO - Using backend: ollama
2024-04-07 12:26:25,001 - DEBUG - Starting new HTTPS connection (1): api.smith.langchain.com:443
2024-04-07 12:26:25,017 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-07 12:26:25,385 - DEBUG - https://api.smith.langchain.com:443 "GET /info HTTP/1.1" 200 209
2024-04-07 12:26:25,639 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 12:26:27,054 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-07 12:26:40,937 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 12:26:40,942 - DEBUG - Closing Client.session
2024-04-07 12:28:41,259 - INFO - Tests performed with ollama + llama2.
2024-04-07 12:28:41,262 - INFO - Model name: llama2
2024-04-07 12:28:41,262 - INFO - Using backend: ollama
2024-04-07 12:28:41,268 - DEBUG - Starting new HTTPS connection (1): api.smith.langchain.com:443
2024-04-07 12:28:41,287 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-07 12:28:41,472 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-07 12:28:41,599 - DEBUG - https://api.smith.langchain.com:443 "GET /info HTTP/1.1" 200 209
2024-04-07 12:28:41,838 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 12:28:54,641 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 12:28:54,645 - DEBUG - Closing Client.session
2024-04-07 14:26:36,072 - INFO - Tests performed with ollama + llama2.
2024-04-07 14:26:36,074 - INFO - Model name: llama2
2024-04-07 14:26:36,074 - INFO - Using backend: ollama
2024-04-07 14:26:36,089 - DEBUG - Starting new HTTPS connection (1): api.smith.langchain.com:443
2024-04-07 14:26:36,099 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-07 14:26:36,449 - DEBUG - https://api.smith.langchain.com:443 "GET /info HTTP/1.1" 200 209
2024-04-07 14:26:36,691 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 14:26:54,444 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-07 14:27:10,262 - INFO - fake_useragent not found, using default user agent.To get a realistic header for requests, `pip install fake_useragent`.
2024-04-07 14:27:10,376 - DEBUG - Starting new HTTPS connection (1): docs.smith.langchain.com:443
2024-04-07 14:27:10,701 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 14:27:10,702 - DEBUG - https://docs.smith.langchain.com:443 "GET /user_guide HTTP/1.1" 200 59674
2024-04-07 14:27:10,802 - DEBUG - Encoding detection: utf_8 is most likely the one.
2024-04-07 14:27:10,822 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-07 14:27:10,823 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-07 14:27:10,873 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-07 14:27:10,874 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-07 14:27:10,932 - DEBUG - Starting new HTTPS connection (1): openaipublic.blob.core.windows.net:443
2024-04-07 14:27:11,830 - DEBUG - https://openaipublic.blob.core.windows.net:443 "GET /encodings/cl100k_base.tiktoken HTTP/1.1" 200 1681126
2024-04-07 14:27:13,892 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7f1168959c60>, 'json_data': {'input': [[27317, 42985, 2724, 13002, 765, 11410, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985], [36234, 311, 1925, 2262, 9468, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985, 61791, 27317, 19368, 13325, 61791, 27317, 19368, 12438, 14, 10155, 61791, 27317, 42985, 5446, 61791, 6014, 11087, 311, 1883, 25310, 5256, 1502, 13002, 47, 39906, 12363, 12, 86021, 1305, 4628, 83463, 46067, 51803, 612, 20319, 811, 55715, 27636, 16617, 59482, 2239, 1502, 13002, 1966, 420, 2199, 27317, 42985, 2724, 13002, 27317, 42985, 374, 264, 5452, 369, 445, 11237, 3851, 4500, 11, 16967, 11, 323, 7649, 13, 763, 420, 8641, 11, 584, 4805, 11415, 279, 58321, 315, 88568, 23272, 42985, 11815, 323, 1268, 814, 5052, 1139, 1855, 6566, 315, 279, 3851, 4500, 48608, 13, 1226, 3987, 420, 690, 6179, 3932, 1268, 311, 1888, 29166, 420, 8147, 5452, 477, 3041, 1124, 2555, 311, 2980, 422, 814, 3207, 1120, 6041, 872, 11879, 43925, 67247, 16067, 12705, 67247, 445, 11237, 8522, 3629, 18065, 4062, 66196, 1990, 52032, 11, 1646, 4595, 11, 57470, 8446, 323, 1023, 5137, 627, 791, 5845, 311, 19019, 3619, 1268, 279, 1646, 374, 16785, 2001, 323, 7542, 1405, 433, 374, 22109, 2001, 374, 17235, 3062, 369, 420, 10474, 20967, 3252, 16067, 4599, 11469, 502, 445, 11237, 8522, 11, 584, 4284, 3515, 23272, 42985, 46515, 9147, 555, 1670, 627, 46, 728, 92455, 11, 433, 4536, 1431, 5995, 311, 1427, 520, 1475, 3254, 11917, 13, 4452, 11, 994, 2574, 733, 5076, 320, 276, 16907, 842, 1121, 11, 24746, 8479, 6471, 11, 29493, 1109, 3685, 11572, 11, 5190, 1109, 3685, 4037, 10648, 705, 433, 753, 9193, 11190, 311, 7542, 555, 3411, 1555, 279, 3851, 35483, 13, 23272, 42985, 6835, 2867, 24035, 323, 28803, 2038, 520, 1855, 3094, 315, 459, 445, 11237, 8668, 11, 3339, 433, 1790, 8831, 311, 10765, 323, 3789, 12, 1593, 4819, 627, 1687, 3493, 10068, 21568, 315, 6369, 6743, 11, 5865, 11, 323, 17622, 9477, 34032, 3475, 2638, 16067, 8142, 1690, 13707, 2103, 8448, 459, 2926, 2373, 315, 872, 3851, 3196, 389, 1054, 85, 24459, 12621, 9520, 584, 4070, 3970, 459, 7859, 1396, 315, 15009, 7411, 1212, 311, 11142, 264, 810, 1296, 16625, 5603, 13, 23272, 42985, 6276, 13707, 311, 1893, 30525, 11, 902, 527, 15661, 315, 11374, 323, 5905, 16674, 11, 323, 1005, 1521, 311, 1629, 7177, 389, 872, 445, 11237, 8522, 627, 9673, 1296, 5157, 649, 387, 23700, 304, 20155, 11, 3549, 389, 279, 11722, 11, 477, 35990, 505, 3851, 35483, 13, 23272, 42985, 1101, 3727, 433, 4228, 311, 1629, 2587, 56181, 320, 21704, 445, 11237, 323, 67709, 3196, 8, 311, 5573, 1296, 3135, 3034, 36642, 2806, 16067, 4599, 1760, 67247, 2204, 11028, 315, 701, 8522, 323, 3339, 4442, 11, 433, 753, 3062, 311, 1518, 3508, 477, 539, 499, 4070, 1239, 14715, 449, 5201, 311, 701, 2926, 1296, 5157, 627, 46, 728, 92455, 11, 4442, 304, 279, 10137, 11, 57470, 8446, 11, 477, 1646, 5873, 649, 617, 6908, 25127, 304, 14847, 9124, 555, 701, 3851, 627, 644, 2015, 311, 636, 264, 5647, 369, 902, 11678, 374, 16785, 2731, 11, 433, 753, 5505, 311, 387, 3025, 311, 1684, 3135, 369, 2204, 33483, 389, 279, 1890, 62823, 14737, 3185, 14656, 25034, 13, 1226, 4070, 29091, 17345, 304, 264, 1217, 22658, 12593, 1684, 369, 1296, 8640, 311, 3839, 323, 58681, 70880, 919, 304, 1296, 12483, 4028, 5361, 54862, 315, 701, 3851, 25469, 1993, 16067, 27317, 42985, 5825, 264, 42715, 4676, 369, 11295, 20140, 323, 66196, 627, 2028, 6276, 499, 311, 6288, 1296, 704, 2204, 52032, 323, 4211, 13, 1472, 649, 1825, 279, 42715, 505, 904, 10137, 477, 1646, 1629, 304, 701, 11917, 13], [11769, 42715, 1629, 374, 14042, 304, 279, 1887, 323, 649, 387, 1511, 311, 1893, 1296, 5157, 477, 9616, 449, 1023, 8640, 1823, 1955, 27866, 16067, 65911, 7649, 6276, 13707, 311, 6667, 810, 828, 389, 1268, 872, 445, 11237, 8522, 527, 16785, 304, 1972, 31184, 26350, 13, 763, 420, 10474, 11, 433, 753, 3062, 311, 2274, 459, 8830, 369, 279, 4595, 315, 11374, 279, 917, 374, 16785, 1664, 477, 31555, 389, 323, 1268, 7041, 433, 753, 15061, 1523, 304, 1884, 5157, 13, 11995, 11302, 4526, 323, 1629, 21917, 527, 9200, 369, 420, 29388, 13, 1115, 690, 1520, 304, 272, 2060, 315, 1296, 5157, 430, 649, 1520, 3839, 70880, 919, 73124, 782, 12760, 323, 4500, 315, 17392, 56181, 732, 2756, 1711, 37957, 16067, 4599, 28818, 701, 3851, 311, 459, 2926, 743, 315, 3932, 11, 433, 753, 3062, 311, 9762, 3823, 11302, 389, 279, 14847, 433, 753, 17843, 13, 1115, 8779, 4128, 6666, 311, 279, 1455, 7185, 8640, 323, 11415, 6964, 5157, 430, 527, 14718, 36033, 14847, 13, 23272, 42985, 6276, 499, 311, 15866, 11302, 12483, 311, 14042, 35483, 320, 14450, 92455, 11, 420, 374, 43770, 709, 311, 264, 11302, 3215, 304, 701, 917, 705, 1243, 4141, 389, 35483, 430, 617, 264, 3230, 11302, 4877, 323, 5573, 13, 362, 4279, 29388, 374, 311, 4141, 389, 35483, 430, 5371, 264, 8009, 1217, 11302, 5573, 11, 1243, 31646, 1523, 1139, 36033, 3585, 1701, 279, 11944, 11917, 1684, 8794, 1962, 1113, 1183, 2492, 16067, 27317, 42985, 1101, 11815, 11889, 8640, 311, 21917, 49194, 11, 902, 2187, 37142, 3046, 311, 15499, 25052, 7185, 35483, 323, 89498, 1124, 449, 5201, 311, 2204, 13186, 13, 1556, 1962, 3046, 649, 387, 5975, 82, 11, 25175, 11, 477, 1524, 3917, 5030, 11909, 13, 1115, 6276, 3932, 311, 2339, 70880, 919, 4028, 3062, 16865, 13186, 1943, 287, 51090, 311, 264, 40283, 16067, 2170, 701, 3851, 68711, 1555, 279, 13746, 7649, 10474, 11, 433, 596, 7718, 311, 3136, 26984, 828, 311, 46464, 323, 7417, 1202, 5178, 13, 23272, 42985, 20682, 499, 311, 923, 8640, 439, 10507, 311, 30525, 320, 1527, 2225, 279, 2447, 2199, 323, 2949, 459, 21917, 7325, 705, 24050, 701, 1296, 10401, 389, 1972, 31184, 26350, 13, 1115, 374, 264, 1401, 8935, 304, 3515, 701, 8558, 1887, 323, 701, 16865, 29901, 1887, 304, 279, 1890, 5452, 1087, 17158, 16067, 34, 2353, 989, 25052, 287, 1401, 828, 3585, 11, 7982, 29531, 287, 30525, 11, 37142, 1113, 35483, 11, 323, 39662, 1523, 1139, 3062, 828, 304, 11917, 1684, 527, 88568, 499, 4805, 1101, 1390, 311, 656, 3131, 701, 917, 13280, 5788, 67103, 2099, 11, 5423, 520, 279, 5788, 6566, 11, 433, 753, 16996, 311, 636, 264, 1579, 11852, 24131, 315, 3851, 5178, 449, 5201, 311, 40370, 11, 2853, 11, 323, 11302, 12483, 13, 1115, 26420, 430, 433, 596, 24944, 35946, 3135, 520, 5569, 8231, 1074, 56181, 323, 5113, 811, 2187, 499, 311, 1920, 323, 5573, 5788, 35483, 304, 3221, 1972, 7394, 1943, 17868, 11, 14906, 3493, 264, 47970, 1648, 311, 1912, 35483, 505, 264, 3254, 10652, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 701, 3851, 4028, 5361, 10800, 1345, 31414, 287, 323, 362, 16675, 27866, 16067, 27317, 42985, 5825, 16967, 27223, 430, 2187, 499, 311, 3839, 1401, 17150, 927, 892, 13, 1472, 649, 9407, 311, 1684, 17150, 369, 264, 2728, 4261, 323, 31646, 1523, 1139, 264, 3230, 828, 1486, 311, 636, 264, 11917, 2007, 369, 430, 892, 4261, 2001, 420, 374, 5423, 26222, 369, 28803, 5788, 4819, 79016, 42985, 1101, 6276, 369, 4877, 323, 11408, 50284, 11, 902, 6276, 3932, 311, 1906, 2204, 11028, 315, 872, 8522, 449, 2204, 48316, 323, 1684, 1268, 814, 527, 16785, 3185, 14656, 25034, 2949, 1855, 9676, 13, 1115, 374, 11190, 369, 362, 16675, 7649, 4442, 304, 10137, 11, 1646, 11, 477, 57470, 8446, 885, 59724, 811, 16067, 42172, 811, 527, 264, 8147, 4668, 304, 23272, 42985, 430, 2187, 499, 311, 2804, 6299, 389, 35483, 304, 3221, 1972, 7394, 13, 1115, 649, 387, 1511, 311, 9651, 5573, 35483, 11, 3708, 1124, 311, 21917, 49194, 11, 477, 3708, 1124, 311, 30525, 3354, 7124, 459, 33762, 11, 5042, 3493, 264, 4141, 3044, 11, 264, 25936, 4478, 11, 323, 459, 1957, 311, 2804, 13, 20319, 811, 527, 8104, 11190, 369, 8863, 35483, 520, 5788, 5569, 5221, 31458, 16067, 8607, 445, 11237, 8522, 527, 7447, 65051, 11, 7438, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311], [57865, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 323, 89498, 701, 3851, 4028, 5361, 10800, 1196, 300, 420, 2199, 11190, 30, 21994, 25310, 5256, 5971, 47, 39906, 12705, 67247, 65911, 27866, 46067, 34868, 24374, 541, 25904, 76715, 64207, 6247, 27317, 42985, 27721, 31380, 12830, 14, 10155, 7816, 97552, 27798, 13857, 7388, 220, 2366, 19, 23272, 19368, 11, 4953, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-07 14:27:13,901 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-04-07 14:27:13,998 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f116877fc50>
2024-04-07 14:27:13,998 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f11688af6e0> server_hostname='api.openai.com' timeout=None
2024-04-07 14:27:14,031 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f116877fc10>
2024-04-07 14:27:14,032 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-07 14:27:14,033 - DEBUG - send_request_headers.complete
2024-04-07 14:27:14,033 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-07 14:27:14,034 - DEBUG - send_request_body.complete
2024-04-07 14:27:14,034 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-07 14:27:14,436 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 07 Apr 2024 12:27:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'88'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'998580'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'85ms'), (b'x-request-id', b'req_1acf5e964ec6cbabba18930e5501dabb'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=0Y.zzDd5K07w6HTg_uOjmrLC3VdC4v5ZUiwojT3xBTI-1712492834-1.0.1.1-JZtF6xVCiQqfZ6q73dAwNR_NbWX54hdXyrMNeIhqClF_vlb7oask4_ws8g66biWpLAl5g7HyO1mFix5mF_xoWQ; path=/; expires=Sun, 07-Apr-24 12:57:14 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=1BGt4_i.M9vLWA5jawRrfRHVlisNhDJsJcH6wSO7hEc-1712492834532-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'870a02b58e4a2d89-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-07 14:27:14,439 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-07 14:27:14,440 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-07 14:27:14,571 - DEBUG - receive_response_body.complete
2024-04-07 14:27:14,571 - DEBUG - response_closed.started
2024-04-07 14:27:14,572 - DEBUG - response_closed.complete
2024-04-07 14:27:14,573 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-07 14:27:14,615 - DEBUG - Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU
2024-04-07 14:27:14,616 - INFO - Loading faiss with AVX2 support.
2024-04-07 14:27:14,686 - INFO - Successfully loaded faiss with AVX2 support.
2024-04-07 14:27:14,748 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7f11683344a0>, 'json_data': {'input': [[5269, 649, 8859, 34117, 1520, 449, 7649, 30]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-07 14:27:14,749 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-07 14:27:14,749 - DEBUG - send_request_headers.complete
2024-04-07 14:27:14,749 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-07 14:27:14,750 - DEBUG - send_request_body.complete
2024-04-07 14:27:14,750 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-07 14:27:14,987 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 14:27:14,999 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 07 Apr 2024 12:27:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'20'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999992'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_a6c7e3ece2b2fd57f9f055005b473c46'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'870a02b9eda82d89-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-07 14:27:15,000 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-07 14:27:15,001 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-07 14:27:15,003 - DEBUG - receive_response_body.complete
2024-04-07 14:27:15,003 - DEBUG - response_closed.started
2024-04-07 14:27:15,003 - DEBUG - response_closed.complete
2024-04-07 14:27:15,004 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-07 14:27:15,066 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-07 14:27:15,428 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 14:27:17,747 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-07 14:27:28,737 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 14:27:28,741 - DEBUG - Closing Client.session
2024-04-07 14:27:28,823 - DEBUG - close.started
2024-04-07 14:27:28,824 - DEBUG - close.complete
2024-04-07 15:13:31,376 - INFO - Tests performed with ollama + llama2.
2024-04-07 15:13:31,378 - INFO - Model name: llama2
2024-04-07 15:13:31,378 - INFO - Using backend: ollama
2024-04-07 15:13:31,379 - INFO - fake_useragent not found, using default user agent.To get a realistic header for requests, `pip install fake_useragent`.
2024-04-07 15:13:31,467 - DEBUG - Starting new HTTPS connection (1): docs.smith.langchain.com:443
2024-04-07 15:13:31,736 - DEBUG - https://docs.smith.langchain.com:443 "GET /user_guide HTTP/1.1" 200 59674
2024-04-07 15:13:31,814 - DEBUG - Encoding detection: utf_8 is most likely the one.
2024-04-07 15:13:31,832 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-07 15:13:31,833 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-07 15:13:31,883 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-07 15:13:31,884 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-07 15:13:32,200 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7fe160261e40>, 'json_data': {'input': [[27317, 42985, 2724, 13002, 765, 11410, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985], [36234, 311, 1925, 2262, 9468, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985, 61791, 27317, 19368, 13325, 61791, 27317, 19368, 12438, 14, 10155, 61791, 27317, 42985, 5446, 61791, 6014, 11087, 311, 1883, 25310, 5256, 1502, 13002, 47, 39906, 12363, 12, 86021, 1305, 4628, 83463, 46067, 51803, 612, 20319, 811, 55715, 27636, 16617, 59482, 2239, 1502, 13002, 1966, 420, 2199, 27317, 42985, 2724, 13002, 27317, 42985, 374, 264, 5452, 369, 445, 11237, 3851, 4500, 11, 16967, 11, 323, 7649, 13, 763, 420, 8641, 11, 584, 4805, 11415, 279, 58321, 315, 88568, 23272, 42985, 11815, 323, 1268, 814, 5052, 1139, 1855, 6566, 315, 279, 3851, 4500, 48608, 13, 1226, 3987, 420, 690, 6179, 3932, 1268, 311, 1888, 29166, 420, 8147, 5452, 477, 3041, 1124, 2555, 311, 2980, 422, 814, 3207, 1120, 6041, 872, 11879, 43925, 67247, 16067, 12705, 67247, 445, 11237, 8522, 3629, 18065, 4062, 66196, 1990, 52032, 11, 1646, 4595, 11, 57470, 8446, 323, 1023, 5137, 627, 791, 5845, 311, 19019, 3619, 1268, 279, 1646, 374, 16785, 2001, 323, 7542, 1405, 433, 374, 22109, 2001, 374, 17235, 3062, 369, 420, 10474, 20967, 3252, 16067, 4599, 11469, 502, 445, 11237, 8522, 11, 584, 4284, 3515, 23272, 42985, 46515, 9147, 555, 1670, 627, 46, 728, 92455, 11, 433, 4536, 1431, 5995, 311, 1427, 520, 1475, 3254, 11917, 13, 4452, 11, 994, 2574, 733, 5076, 320, 276, 16907, 842, 1121, 11, 24746, 8479, 6471, 11, 29493, 1109, 3685, 11572, 11, 5190, 1109, 3685, 4037, 10648, 705, 433, 753, 9193, 11190, 311, 7542, 555, 3411, 1555, 279, 3851, 35483, 13, 23272, 42985, 6835, 2867, 24035, 323, 28803, 2038, 520, 1855, 3094, 315, 459, 445, 11237, 8668, 11, 3339, 433, 1790, 8831, 311, 10765, 323, 3789, 12, 1593, 4819, 627, 1687, 3493, 10068, 21568, 315, 6369, 6743, 11, 5865, 11, 323, 17622, 9477, 34032, 3475, 2638, 16067, 8142, 1690, 13707, 2103, 8448, 459, 2926, 2373, 315, 872, 3851, 3196, 389, 1054, 85, 24459, 12621, 9520, 584, 4070, 3970, 459, 7859, 1396, 315, 15009, 7411, 1212, 311, 11142, 264, 810, 1296, 16625, 5603, 13, 23272, 42985, 6276, 13707, 311, 1893, 30525, 11, 902, 527, 15661, 315, 11374, 323, 5905, 16674, 11, 323, 1005, 1521, 311, 1629, 7177, 389, 872, 445, 11237, 8522, 627, 9673, 1296, 5157, 649, 387, 23700, 304, 20155, 11, 3549, 389, 279, 11722, 11, 477, 35990, 505, 3851, 35483, 13, 23272, 42985, 1101, 3727, 433, 4228, 311, 1629, 2587, 56181, 320, 21704, 445, 11237, 323, 67709, 3196, 8, 311, 5573, 1296, 3135, 3034, 36642, 2806, 16067, 4599, 1760, 67247, 2204, 11028, 315, 701, 8522, 323, 3339, 4442, 11, 433, 753, 3062, 311, 1518, 3508, 477, 539, 499, 4070, 1239, 14715, 449, 5201, 311, 701, 2926, 1296, 5157, 627, 46, 728, 92455, 11, 4442, 304, 279, 10137, 11, 57470, 8446, 11, 477, 1646, 5873, 649, 617, 6908, 25127, 304, 14847, 9124, 555, 701, 3851, 627, 644, 2015, 311, 636, 264, 5647, 369, 902, 11678, 374, 16785, 2731, 11, 433, 753, 5505, 311, 387, 3025, 311, 1684, 3135, 369, 2204, 33483, 389, 279, 1890, 62823, 14737, 3185, 14656, 25034, 13, 1226, 4070, 29091, 17345, 304, 264, 1217, 22658, 12593, 1684, 369, 1296, 8640, 311, 3839, 323, 58681, 70880, 919, 304, 1296, 12483, 4028, 5361, 54862, 315, 701, 3851, 25469, 1993, 16067, 27317, 42985, 5825, 264, 42715, 4676, 369, 11295, 20140, 323, 66196, 627, 2028, 6276, 499, 311, 6288, 1296, 704, 2204, 52032, 323, 4211, 13, 1472, 649, 1825, 279, 42715, 505, 904, 10137, 477, 1646, 1629, 304, 701, 11917, 13], [11769, 42715, 1629, 374, 14042, 304, 279, 1887, 323, 649, 387, 1511, 311, 1893, 1296, 5157, 477, 9616, 449, 1023, 8640, 1823, 1955, 27866, 16067, 65911, 7649, 6276, 13707, 311, 6667, 810, 828, 389, 1268, 872, 445, 11237, 8522, 527, 16785, 304, 1972, 31184, 26350, 13, 763, 420, 10474, 11, 433, 753, 3062, 311, 2274, 459, 8830, 369, 279, 4595, 315, 11374, 279, 917, 374, 16785, 1664, 477, 31555, 389, 323, 1268, 7041, 433, 753, 15061, 1523, 304, 1884, 5157, 13, 11995, 11302, 4526, 323, 1629, 21917, 527, 9200, 369, 420, 29388, 13, 1115, 690, 1520, 304, 272, 2060, 315, 1296, 5157, 430, 649, 1520, 3839, 70880, 919, 73124, 782, 12760, 323, 4500, 315, 17392, 56181, 732, 2756, 1711, 37957, 16067, 4599, 28818, 701, 3851, 311, 459, 2926, 743, 315, 3932, 11, 433, 753, 3062, 311, 9762, 3823, 11302, 389, 279, 14847, 433, 753, 17843, 13, 1115, 8779, 4128, 6666, 311, 279, 1455, 7185, 8640, 323, 11415, 6964, 5157, 430, 527, 14718, 36033, 14847, 13, 23272, 42985, 6276, 499, 311, 15866, 11302, 12483, 311, 14042, 35483, 320, 14450, 92455, 11, 420, 374, 43770, 709, 311, 264, 11302, 3215, 304, 701, 917, 705, 1243, 4141, 389, 35483, 430, 617, 264, 3230, 11302, 4877, 323, 5573, 13, 362, 4279, 29388, 374, 311, 4141, 389, 35483, 430, 5371, 264, 8009, 1217, 11302, 5573, 11, 1243, 31646, 1523, 1139, 36033, 3585, 1701, 279, 11944, 11917, 1684, 8794, 1962, 1113, 1183, 2492, 16067, 27317, 42985, 1101, 11815, 11889, 8640, 311, 21917, 49194, 11, 902, 2187, 37142, 3046, 311, 15499, 25052, 7185, 35483, 323, 89498, 1124, 449, 5201, 311, 2204, 13186, 13, 1556, 1962, 3046, 649, 387, 5975, 82, 11, 25175, 11, 477, 1524, 3917, 5030, 11909, 13, 1115, 6276, 3932, 311, 2339, 70880, 919, 4028, 3062, 16865, 13186, 1943, 287, 51090, 311, 264, 40283, 16067, 2170, 701, 3851, 68711, 1555, 279, 13746, 7649, 10474, 11, 433, 596, 7718, 311, 3136, 26984, 828, 311, 46464, 323, 7417, 1202, 5178, 13, 23272, 42985, 20682, 499, 311, 923, 8640, 439, 10507, 311, 30525, 320, 1527, 2225, 279, 2447, 2199, 323, 2949, 459, 21917, 7325, 705, 24050, 701, 1296, 10401, 389, 1972, 31184, 26350, 13, 1115, 374, 264, 1401, 8935, 304, 3515, 701, 8558, 1887, 323, 701, 16865, 29901, 1887, 304, 279, 1890, 5452, 1087, 17158, 16067, 34, 2353, 989, 25052, 287, 1401, 828, 3585, 11, 7982, 29531, 287, 30525, 11, 37142, 1113, 35483, 11, 323, 39662, 1523, 1139, 3062, 828, 304, 11917, 1684, 527, 88568, 499, 4805, 1101, 1390, 311, 656, 3131, 701, 917, 13280, 5788, 67103, 2099, 11, 5423, 520, 279, 5788, 6566, 11, 433, 753, 16996, 311, 636, 264, 1579, 11852, 24131, 315, 3851, 5178, 449, 5201, 311, 40370, 11, 2853, 11, 323, 11302, 12483, 13, 1115, 26420, 430, 433, 596, 24944, 35946, 3135, 520, 5569, 8231, 1074, 56181, 323, 5113, 811, 2187, 499, 311, 1920, 323, 5573, 5788, 35483, 304, 3221, 1972, 7394, 1943, 17868, 11, 14906, 3493, 264, 47970, 1648, 311, 1912, 35483, 505, 264, 3254, 10652, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 701, 3851, 4028, 5361, 10800, 1345, 31414, 287, 323, 362, 16675, 27866, 16067, 27317, 42985, 5825, 16967, 27223, 430, 2187, 499, 311, 3839, 1401, 17150, 927, 892, 13, 1472, 649, 9407, 311, 1684, 17150, 369, 264, 2728, 4261, 323, 31646, 1523, 1139, 264, 3230, 828, 1486, 311, 636, 264, 11917, 2007, 369, 430, 892, 4261, 2001, 420, 374, 5423, 26222, 369, 28803, 5788, 4819, 79016, 42985, 1101, 6276, 369, 4877, 323, 11408, 50284, 11, 902, 6276, 3932, 311, 1906, 2204, 11028, 315, 872, 8522, 449, 2204, 48316, 323, 1684, 1268, 814, 527, 16785, 3185, 14656, 25034, 2949, 1855, 9676, 13, 1115, 374, 11190, 369, 362, 16675, 7649, 4442, 304, 10137, 11, 1646, 11, 477, 57470, 8446, 885, 59724, 811, 16067, 42172, 811, 527, 264, 8147, 4668, 304, 23272, 42985, 430, 2187, 499, 311, 2804, 6299, 389, 35483, 304, 3221, 1972, 7394, 13, 1115, 649, 387, 1511, 311, 9651, 5573, 35483, 11, 3708, 1124, 311, 21917, 49194, 11, 477, 3708, 1124, 311, 30525, 3354, 7124, 459, 33762, 11, 5042, 3493, 264, 4141, 3044, 11, 264, 25936, 4478, 11, 323, 459, 1957, 311, 2804, 13, 20319, 811, 527, 8104, 11190, 369, 8863, 35483, 520, 5788, 5569, 5221, 31458, 16067, 8607, 445, 11237, 8522, 527, 7447, 65051, 11, 7438, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311], [57865, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 323, 89498, 701, 3851, 4028, 5361, 10800, 1196, 300, 420, 2199, 11190, 30, 21994, 25310, 5256, 5971, 47, 39906, 12705, 67247, 65911, 27866, 46067, 34868, 24374, 541, 25904, 76715, 64207, 6247, 27317, 42985, 27721, 31380, 12830, 14, 10155, 7816, 97552, 27798, 13857, 7388, 220, 2366, 19, 23272, 19368, 11, 4953, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-07 15:13:32,207 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-04-07 15:13:32,327 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fe1600d9950>
2024-04-07 15:13:32,327 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7fe160397530> server_hostname='api.openai.com' timeout=None
2024-04-07 15:13:32,361 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fe1600d9bd0>
2024-04-07 15:13:32,362 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-07 15:13:32,363 - DEBUG - send_request_headers.complete
2024-04-07 15:13:32,363 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-07 15:13:32,364 - DEBUG - send_request_body.complete
2024-04-07 15:13:32,364 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-07 15:13:32,642 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 07 Apr 2024 13:13:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'39'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'998580'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'85ms'), (b'x-request-id', b'req_d405e18acc60e60a36280877e71e6c84'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=2UqKAfnfhIGpOFgoFhH9KkOjpyETc1mrVvW.jBXecuM-1712495612-1.0.1.1-3iaVvpR9mNCn70Z7I67rboCsLbtlfS9hEEcI9aqameGJMlCe3KIwJdF4jKWex8BHqIofztzO8fCR4gujO2NqzQ; path=/; expires=Sun, 07-Apr-24 13:43:32 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=0n1LQJCcarDdmNbYxKYUTP_1dCeO8UFdFyqsAGxMgYg-1712495612763-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'870a468a3cd20a3b-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-07 15:13:32,645 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-07 15:13:32,646 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-07 15:13:32,770 - DEBUG - receive_response_body.complete
2024-04-07 15:13:32,770 - DEBUG - response_closed.started
2024-04-07 15:13:32,770 - DEBUG - response_closed.complete
2024-04-07 15:13:32,771 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-07 15:13:32,808 - DEBUG - Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU
2024-04-07 15:13:32,808 - INFO - Loading faiss with AVX2 support.
2024-04-07 15:13:32,848 - INFO - Successfully loaded faiss with AVX2 support.
2024-04-07 15:13:32,864 - DEBUG - Starting new HTTPS connection (1): api.smith.langchain.com:443
2024-04-07 15:13:32,913 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7fe15fed0220>, 'json_data': {'input': [[5269, 649, 8859, 34117, 1520, 449, 7649, 30]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-07 15:13:32,913 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-07 15:13:32,914 - DEBUG - send_request_headers.complete
2024-04-07 15:13:32,914 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-07 15:13:32,914 - DEBUG - send_request_body.complete
2024-04-07 15:13:32,914 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-07 15:13:33,189 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 07 Apr 2024 13:13:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'19'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999992'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_4df15006329ff3a10897e99238aaf86e'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'870a468d9af50a3b-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-07 15:13:33,190 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-07 15:13:33,190 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-07 15:13:33,192 - DEBUG - receive_response_body.complete
2024-04-07 15:13:33,192 - DEBUG - response_closed.started
2024-04-07 15:13:33,193 - DEBUG - response_closed.complete
2024-04-07 15:13:33,193 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-07 15:13:33,216 - DEBUG - https://api.smith.langchain.com:443 "GET /info HTTP/1.1" 200 209
2024-04-07 15:13:33,300 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-07 15:13:33,700 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 15:13:41,435 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-07 15:13:52,628 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 15:13:52,632 - DEBUG - Closing Client.session
2024-04-07 15:13:52,706 - DEBUG - close.started
2024-04-07 15:13:52,706 - DEBUG - close.complete
