2024-04-07 12:26:24,992 - INFO - Tests performed with ollama + llama2.
2024-04-07 12:26:24,995 - INFO - Model name: llama2
2024-04-07 12:26:24,995 - INFO - Using backend: ollama
2024-04-07 12:26:25,001 - DEBUG - Starting new HTTPS connection (1): api.smith.langchain.com:443
2024-04-07 12:26:25,017 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-07 12:26:25,385 - DEBUG - https://api.smith.langchain.com:443 "GET /info HTTP/1.1" 200 209
2024-04-07 12:26:25,639 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 12:26:27,054 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-07 12:26:40,937 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 12:26:40,942 - DEBUG - Closing Client.session
2024-04-07 12:28:41,259 - INFO - Tests performed with ollama + llama2.
2024-04-07 12:28:41,262 - INFO - Model name: llama2
2024-04-07 12:28:41,262 - INFO - Using backend: ollama
2024-04-07 12:28:41,268 - DEBUG - Starting new HTTPS connection (1): api.smith.langchain.com:443
2024-04-07 12:28:41,287 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-07 12:28:41,472 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-07 12:28:41,599 - DEBUG - https://api.smith.langchain.com:443 "GET /info HTTP/1.1" 200 209
2024-04-07 12:28:41,838 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 12:28:54,641 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 12:28:54,645 - DEBUG - Closing Client.session
2024-04-07 14:26:36,072 - INFO - Tests performed with ollama + llama2.
2024-04-07 14:26:36,074 - INFO - Model name: llama2
2024-04-07 14:26:36,074 - INFO - Using backend: ollama
2024-04-07 14:26:36,089 - DEBUG - Starting new HTTPS connection (1): api.smith.langchain.com:443
2024-04-07 14:26:36,099 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-07 14:26:36,449 - DEBUG - https://api.smith.langchain.com:443 "GET /info HTTP/1.1" 200 209
2024-04-07 14:26:36,691 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 14:26:54,444 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-07 14:27:10,262 - INFO - fake_useragent not found, using default user agent.To get a realistic header for requests, `pip install fake_useragent`.
2024-04-07 14:27:10,376 - DEBUG - Starting new HTTPS connection (1): docs.smith.langchain.com:443
2024-04-07 14:27:10,701 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 14:27:10,702 - DEBUG - https://docs.smith.langchain.com:443 "GET /user_guide HTTP/1.1" 200 59674
2024-04-07 14:27:10,802 - DEBUG - Encoding detection: utf_8 is most likely the one.
2024-04-07 14:27:10,822 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-07 14:27:10,823 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-07 14:27:10,873 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-07 14:27:10,874 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-07 14:27:10,932 - DEBUG - Starting new HTTPS connection (1): openaipublic.blob.core.windows.net:443
2024-04-07 14:27:11,830 - DEBUG - https://openaipublic.blob.core.windows.net:443 "GET /encodings/cl100k_base.tiktoken HTTP/1.1" 200 1681126
2024-04-07 14:27:13,892 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7f1168959c60>, 'json_data': {'input': [[27317, 42985, 2724, 13002, 765, 11410, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985], [36234, 311, 1925, 2262, 9468, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985, 61791, 27317, 19368, 13325, 61791, 27317, 19368, 12438, 14, 10155, 61791, 27317, 42985, 5446, 61791, 6014, 11087, 311, 1883, 25310, 5256, 1502, 13002, 47, 39906, 12363, 12, 86021, 1305, 4628, 83463, 46067, 51803, 612, 20319, 811, 55715, 27636, 16617, 59482, 2239, 1502, 13002, 1966, 420, 2199, 27317, 42985, 2724, 13002, 27317, 42985, 374, 264, 5452, 369, 445, 11237, 3851, 4500, 11, 16967, 11, 323, 7649, 13, 763, 420, 8641, 11, 584, 4805, 11415, 279, 58321, 315, 88568, 23272, 42985, 11815, 323, 1268, 814, 5052, 1139, 1855, 6566, 315, 279, 3851, 4500, 48608, 13, 1226, 3987, 420, 690, 6179, 3932, 1268, 311, 1888, 29166, 420, 8147, 5452, 477, 3041, 1124, 2555, 311, 2980, 422, 814, 3207, 1120, 6041, 872, 11879, 43925, 67247, 16067, 12705, 67247, 445, 11237, 8522, 3629, 18065, 4062, 66196, 1990, 52032, 11, 1646, 4595, 11, 57470, 8446, 323, 1023, 5137, 627, 791, 5845, 311, 19019, 3619, 1268, 279, 1646, 374, 16785, 2001, 323, 7542, 1405, 433, 374, 22109, 2001, 374, 17235, 3062, 369, 420, 10474, 20967, 3252, 16067, 4599, 11469, 502, 445, 11237, 8522, 11, 584, 4284, 3515, 23272, 42985, 46515, 9147, 555, 1670, 627, 46, 728, 92455, 11, 433, 4536, 1431, 5995, 311, 1427, 520, 1475, 3254, 11917, 13, 4452, 11, 994, 2574, 733, 5076, 320, 276, 16907, 842, 1121, 11, 24746, 8479, 6471, 11, 29493, 1109, 3685, 11572, 11, 5190, 1109, 3685, 4037, 10648, 705, 433, 753, 9193, 11190, 311, 7542, 555, 3411, 1555, 279, 3851, 35483, 13, 23272, 42985, 6835, 2867, 24035, 323, 28803, 2038, 520, 1855, 3094, 315, 459, 445, 11237, 8668, 11, 3339, 433, 1790, 8831, 311, 10765, 323, 3789, 12, 1593, 4819, 627, 1687, 3493, 10068, 21568, 315, 6369, 6743, 11, 5865, 11, 323, 17622, 9477, 34032, 3475, 2638, 16067, 8142, 1690, 13707, 2103, 8448, 459, 2926, 2373, 315, 872, 3851, 3196, 389, 1054, 85, 24459, 12621, 9520, 584, 4070, 3970, 459, 7859, 1396, 315, 15009, 7411, 1212, 311, 11142, 264, 810, 1296, 16625, 5603, 13, 23272, 42985, 6276, 13707, 311, 1893, 30525, 11, 902, 527, 15661, 315, 11374, 323, 5905, 16674, 11, 323, 1005, 1521, 311, 1629, 7177, 389, 872, 445, 11237, 8522, 627, 9673, 1296, 5157, 649, 387, 23700, 304, 20155, 11, 3549, 389, 279, 11722, 11, 477, 35990, 505, 3851, 35483, 13, 23272, 42985, 1101, 3727, 433, 4228, 311, 1629, 2587, 56181, 320, 21704, 445, 11237, 323, 67709, 3196, 8, 311, 5573, 1296, 3135, 3034, 36642, 2806, 16067, 4599, 1760, 67247, 2204, 11028, 315, 701, 8522, 323, 3339, 4442, 11, 433, 753, 3062, 311, 1518, 3508, 477, 539, 499, 4070, 1239, 14715, 449, 5201, 311, 701, 2926, 1296, 5157, 627, 46, 728, 92455, 11, 4442, 304, 279, 10137, 11, 57470, 8446, 11, 477, 1646, 5873, 649, 617, 6908, 25127, 304, 14847, 9124, 555, 701, 3851, 627, 644, 2015, 311, 636, 264, 5647, 369, 902, 11678, 374, 16785, 2731, 11, 433, 753, 5505, 311, 387, 3025, 311, 1684, 3135, 369, 2204, 33483, 389, 279, 1890, 62823, 14737, 3185, 14656, 25034, 13, 1226, 4070, 29091, 17345, 304, 264, 1217, 22658, 12593, 1684, 369, 1296, 8640, 311, 3839, 323, 58681, 70880, 919, 304, 1296, 12483, 4028, 5361, 54862, 315, 701, 3851, 25469, 1993, 16067, 27317, 42985, 5825, 264, 42715, 4676, 369, 11295, 20140, 323, 66196, 627, 2028, 6276, 499, 311, 6288, 1296, 704, 2204, 52032, 323, 4211, 13, 1472, 649, 1825, 279, 42715, 505, 904, 10137, 477, 1646, 1629, 304, 701, 11917, 13], [11769, 42715, 1629, 374, 14042, 304, 279, 1887, 323, 649, 387, 1511, 311, 1893, 1296, 5157, 477, 9616, 449, 1023, 8640, 1823, 1955, 27866, 16067, 65911, 7649, 6276, 13707, 311, 6667, 810, 828, 389, 1268, 872, 445, 11237, 8522, 527, 16785, 304, 1972, 31184, 26350, 13, 763, 420, 10474, 11, 433, 753, 3062, 311, 2274, 459, 8830, 369, 279, 4595, 315, 11374, 279, 917, 374, 16785, 1664, 477, 31555, 389, 323, 1268, 7041, 433, 753, 15061, 1523, 304, 1884, 5157, 13, 11995, 11302, 4526, 323, 1629, 21917, 527, 9200, 369, 420, 29388, 13, 1115, 690, 1520, 304, 272, 2060, 315, 1296, 5157, 430, 649, 1520, 3839, 70880, 919, 73124, 782, 12760, 323, 4500, 315, 17392, 56181, 732, 2756, 1711, 37957, 16067, 4599, 28818, 701, 3851, 311, 459, 2926, 743, 315, 3932, 11, 433, 753, 3062, 311, 9762, 3823, 11302, 389, 279, 14847, 433, 753, 17843, 13, 1115, 8779, 4128, 6666, 311, 279, 1455, 7185, 8640, 323, 11415, 6964, 5157, 430, 527, 14718, 36033, 14847, 13, 23272, 42985, 6276, 499, 311, 15866, 11302, 12483, 311, 14042, 35483, 320, 14450, 92455, 11, 420, 374, 43770, 709, 311, 264, 11302, 3215, 304, 701, 917, 705, 1243, 4141, 389, 35483, 430, 617, 264, 3230, 11302, 4877, 323, 5573, 13, 362, 4279, 29388, 374, 311, 4141, 389, 35483, 430, 5371, 264, 8009, 1217, 11302, 5573, 11, 1243, 31646, 1523, 1139, 36033, 3585, 1701, 279, 11944, 11917, 1684, 8794, 1962, 1113, 1183, 2492, 16067, 27317, 42985, 1101, 11815, 11889, 8640, 311, 21917, 49194, 11, 902, 2187, 37142, 3046, 311, 15499, 25052, 7185, 35483, 323, 89498, 1124, 449, 5201, 311, 2204, 13186, 13, 1556, 1962, 3046, 649, 387, 5975, 82, 11, 25175, 11, 477, 1524, 3917, 5030, 11909, 13, 1115, 6276, 3932, 311, 2339, 70880, 919, 4028, 3062, 16865, 13186, 1943, 287, 51090, 311, 264, 40283, 16067, 2170, 701, 3851, 68711, 1555, 279, 13746, 7649, 10474, 11, 433, 596, 7718, 311, 3136, 26984, 828, 311, 46464, 323, 7417, 1202, 5178, 13, 23272, 42985, 20682, 499, 311, 923, 8640, 439, 10507, 311, 30525, 320, 1527, 2225, 279, 2447, 2199, 323, 2949, 459, 21917, 7325, 705, 24050, 701, 1296, 10401, 389, 1972, 31184, 26350, 13, 1115, 374, 264, 1401, 8935, 304, 3515, 701, 8558, 1887, 323, 701, 16865, 29901, 1887, 304, 279, 1890, 5452, 1087, 17158, 16067, 34, 2353, 989, 25052, 287, 1401, 828, 3585, 11, 7982, 29531, 287, 30525, 11, 37142, 1113, 35483, 11, 323, 39662, 1523, 1139, 3062, 828, 304, 11917, 1684, 527, 88568, 499, 4805, 1101, 1390, 311, 656, 3131, 701, 917, 13280, 5788, 67103, 2099, 11, 5423, 520, 279, 5788, 6566, 11, 433, 753, 16996, 311, 636, 264, 1579, 11852, 24131, 315, 3851, 5178, 449, 5201, 311, 40370, 11, 2853, 11, 323, 11302, 12483, 13, 1115, 26420, 430, 433, 596, 24944, 35946, 3135, 520, 5569, 8231, 1074, 56181, 323, 5113, 811, 2187, 499, 311, 1920, 323, 5573, 5788, 35483, 304, 3221, 1972, 7394, 1943, 17868, 11, 14906, 3493, 264, 47970, 1648, 311, 1912, 35483, 505, 264, 3254, 10652, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 701, 3851, 4028, 5361, 10800, 1345, 31414, 287, 323, 362, 16675, 27866, 16067, 27317, 42985, 5825, 16967, 27223, 430, 2187, 499, 311, 3839, 1401, 17150, 927, 892, 13, 1472, 649, 9407, 311, 1684, 17150, 369, 264, 2728, 4261, 323, 31646, 1523, 1139, 264, 3230, 828, 1486, 311, 636, 264, 11917, 2007, 369, 430, 892, 4261, 2001, 420, 374, 5423, 26222, 369, 28803, 5788, 4819, 79016, 42985, 1101, 6276, 369, 4877, 323, 11408, 50284, 11, 902, 6276, 3932, 311, 1906, 2204, 11028, 315, 872, 8522, 449, 2204, 48316, 323, 1684, 1268, 814, 527, 16785, 3185, 14656, 25034, 2949, 1855, 9676, 13, 1115, 374, 11190, 369, 362, 16675, 7649, 4442, 304, 10137, 11, 1646, 11, 477, 57470, 8446, 885, 59724, 811, 16067, 42172, 811, 527, 264, 8147, 4668, 304, 23272, 42985, 430, 2187, 499, 311, 2804, 6299, 389, 35483, 304, 3221, 1972, 7394, 13, 1115, 649, 387, 1511, 311, 9651, 5573, 35483, 11, 3708, 1124, 311, 21917, 49194, 11, 477, 3708, 1124, 311, 30525, 3354, 7124, 459, 33762, 11, 5042, 3493, 264, 4141, 3044, 11, 264, 25936, 4478, 11, 323, 459, 1957, 311, 2804, 13, 20319, 811, 527, 8104, 11190, 369, 8863, 35483, 520, 5788, 5569, 5221, 31458, 16067, 8607, 445, 11237, 8522, 527, 7447, 65051, 11, 7438, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311], [57865, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 323, 89498, 701, 3851, 4028, 5361, 10800, 1196, 300, 420, 2199, 11190, 30, 21994, 25310, 5256, 5971, 47, 39906, 12705, 67247, 65911, 27866, 46067, 34868, 24374, 541, 25904, 76715, 64207, 6247, 27317, 42985, 27721, 31380, 12830, 14, 10155, 7816, 97552, 27798, 13857, 7388, 220, 2366, 19, 23272, 19368, 11, 4953, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-07 14:27:13,901 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-04-07 14:27:13,998 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f116877fc50>
2024-04-07 14:27:13,998 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f11688af6e0> server_hostname='api.openai.com' timeout=None
2024-04-07 14:27:14,031 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f116877fc10>
2024-04-07 14:27:14,032 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-07 14:27:14,033 - DEBUG - send_request_headers.complete
2024-04-07 14:27:14,033 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-07 14:27:14,034 - DEBUG - send_request_body.complete
2024-04-07 14:27:14,034 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-07 14:27:14,436 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 07 Apr 2024 12:27:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'88'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'998580'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'85ms'), (b'x-request-id', b'req_1acf5e964ec6cbabba18930e5501dabb'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=0Y.zzDd5K07w6HTg_uOjmrLC3VdC4v5ZUiwojT3xBTI-1712492834-1.0.1.1-JZtF6xVCiQqfZ6q73dAwNR_NbWX54hdXyrMNeIhqClF_vlb7oask4_ws8g66biWpLAl5g7HyO1mFix5mF_xoWQ; path=/; expires=Sun, 07-Apr-24 12:57:14 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=1BGt4_i.M9vLWA5jawRrfRHVlisNhDJsJcH6wSO7hEc-1712492834532-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'870a02b58e4a2d89-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-07 14:27:14,439 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-07 14:27:14,440 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-07 14:27:14,571 - DEBUG - receive_response_body.complete
2024-04-07 14:27:14,571 - DEBUG - response_closed.started
2024-04-07 14:27:14,572 - DEBUG - response_closed.complete
2024-04-07 14:27:14,573 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-07 14:27:14,615 - DEBUG - Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU
2024-04-07 14:27:14,616 - INFO - Loading faiss with AVX2 support.
2024-04-07 14:27:14,686 - INFO - Successfully loaded faiss with AVX2 support.
2024-04-07 14:27:14,748 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7f11683344a0>, 'json_data': {'input': [[5269, 649, 8859, 34117, 1520, 449, 7649, 30]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-07 14:27:14,749 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-07 14:27:14,749 - DEBUG - send_request_headers.complete
2024-04-07 14:27:14,749 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-07 14:27:14,750 - DEBUG - send_request_body.complete
2024-04-07 14:27:14,750 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-07 14:27:14,987 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 14:27:14,999 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 07 Apr 2024 12:27:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'20'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999992'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_a6c7e3ece2b2fd57f9f055005b473c46'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'870a02b9eda82d89-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-07 14:27:15,000 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-07 14:27:15,001 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-07 14:27:15,003 - DEBUG - receive_response_body.complete
2024-04-07 14:27:15,003 - DEBUG - response_closed.started
2024-04-07 14:27:15,003 - DEBUG - response_closed.complete
2024-04-07 14:27:15,004 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-07 14:27:15,066 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-07 14:27:15,428 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 14:27:17,747 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-07 14:27:28,737 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 14:27:28,741 - DEBUG - Closing Client.session
2024-04-07 14:27:28,823 - DEBUG - close.started
2024-04-07 14:27:28,824 - DEBUG - close.complete
2024-04-07 15:13:31,376 - INFO - Tests performed with ollama + llama2.
2024-04-07 15:13:31,378 - INFO - Model name: llama2
2024-04-07 15:13:31,378 - INFO - Using backend: ollama
2024-04-07 15:13:31,379 - INFO - fake_useragent not found, using default user agent.To get a realistic header for requests, `pip install fake_useragent`.
2024-04-07 15:13:31,467 - DEBUG - Starting new HTTPS connection (1): docs.smith.langchain.com:443
2024-04-07 15:13:31,736 - DEBUG - https://docs.smith.langchain.com:443 "GET /user_guide HTTP/1.1" 200 59674
2024-04-07 15:13:31,814 - DEBUG - Encoding detection: utf_8 is most likely the one.
2024-04-07 15:13:31,832 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-07 15:13:31,833 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-07 15:13:31,883 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-07 15:13:31,884 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-07 15:13:32,200 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7fe160261e40>, 'json_data': {'input': [[27317, 42985, 2724, 13002, 765, 11410, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985], [36234, 311, 1925, 2262, 9468, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985, 61791, 27317, 19368, 13325, 61791, 27317, 19368, 12438, 14, 10155, 61791, 27317, 42985, 5446, 61791, 6014, 11087, 311, 1883, 25310, 5256, 1502, 13002, 47, 39906, 12363, 12, 86021, 1305, 4628, 83463, 46067, 51803, 612, 20319, 811, 55715, 27636, 16617, 59482, 2239, 1502, 13002, 1966, 420, 2199, 27317, 42985, 2724, 13002, 27317, 42985, 374, 264, 5452, 369, 445, 11237, 3851, 4500, 11, 16967, 11, 323, 7649, 13, 763, 420, 8641, 11, 584, 4805, 11415, 279, 58321, 315, 88568, 23272, 42985, 11815, 323, 1268, 814, 5052, 1139, 1855, 6566, 315, 279, 3851, 4500, 48608, 13, 1226, 3987, 420, 690, 6179, 3932, 1268, 311, 1888, 29166, 420, 8147, 5452, 477, 3041, 1124, 2555, 311, 2980, 422, 814, 3207, 1120, 6041, 872, 11879, 43925, 67247, 16067, 12705, 67247, 445, 11237, 8522, 3629, 18065, 4062, 66196, 1990, 52032, 11, 1646, 4595, 11, 57470, 8446, 323, 1023, 5137, 627, 791, 5845, 311, 19019, 3619, 1268, 279, 1646, 374, 16785, 2001, 323, 7542, 1405, 433, 374, 22109, 2001, 374, 17235, 3062, 369, 420, 10474, 20967, 3252, 16067, 4599, 11469, 502, 445, 11237, 8522, 11, 584, 4284, 3515, 23272, 42985, 46515, 9147, 555, 1670, 627, 46, 728, 92455, 11, 433, 4536, 1431, 5995, 311, 1427, 520, 1475, 3254, 11917, 13, 4452, 11, 994, 2574, 733, 5076, 320, 276, 16907, 842, 1121, 11, 24746, 8479, 6471, 11, 29493, 1109, 3685, 11572, 11, 5190, 1109, 3685, 4037, 10648, 705, 433, 753, 9193, 11190, 311, 7542, 555, 3411, 1555, 279, 3851, 35483, 13, 23272, 42985, 6835, 2867, 24035, 323, 28803, 2038, 520, 1855, 3094, 315, 459, 445, 11237, 8668, 11, 3339, 433, 1790, 8831, 311, 10765, 323, 3789, 12, 1593, 4819, 627, 1687, 3493, 10068, 21568, 315, 6369, 6743, 11, 5865, 11, 323, 17622, 9477, 34032, 3475, 2638, 16067, 8142, 1690, 13707, 2103, 8448, 459, 2926, 2373, 315, 872, 3851, 3196, 389, 1054, 85, 24459, 12621, 9520, 584, 4070, 3970, 459, 7859, 1396, 315, 15009, 7411, 1212, 311, 11142, 264, 810, 1296, 16625, 5603, 13, 23272, 42985, 6276, 13707, 311, 1893, 30525, 11, 902, 527, 15661, 315, 11374, 323, 5905, 16674, 11, 323, 1005, 1521, 311, 1629, 7177, 389, 872, 445, 11237, 8522, 627, 9673, 1296, 5157, 649, 387, 23700, 304, 20155, 11, 3549, 389, 279, 11722, 11, 477, 35990, 505, 3851, 35483, 13, 23272, 42985, 1101, 3727, 433, 4228, 311, 1629, 2587, 56181, 320, 21704, 445, 11237, 323, 67709, 3196, 8, 311, 5573, 1296, 3135, 3034, 36642, 2806, 16067, 4599, 1760, 67247, 2204, 11028, 315, 701, 8522, 323, 3339, 4442, 11, 433, 753, 3062, 311, 1518, 3508, 477, 539, 499, 4070, 1239, 14715, 449, 5201, 311, 701, 2926, 1296, 5157, 627, 46, 728, 92455, 11, 4442, 304, 279, 10137, 11, 57470, 8446, 11, 477, 1646, 5873, 649, 617, 6908, 25127, 304, 14847, 9124, 555, 701, 3851, 627, 644, 2015, 311, 636, 264, 5647, 369, 902, 11678, 374, 16785, 2731, 11, 433, 753, 5505, 311, 387, 3025, 311, 1684, 3135, 369, 2204, 33483, 389, 279, 1890, 62823, 14737, 3185, 14656, 25034, 13, 1226, 4070, 29091, 17345, 304, 264, 1217, 22658, 12593, 1684, 369, 1296, 8640, 311, 3839, 323, 58681, 70880, 919, 304, 1296, 12483, 4028, 5361, 54862, 315, 701, 3851, 25469, 1993, 16067, 27317, 42985, 5825, 264, 42715, 4676, 369, 11295, 20140, 323, 66196, 627, 2028, 6276, 499, 311, 6288, 1296, 704, 2204, 52032, 323, 4211, 13, 1472, 649, 1825, 279, 42715, 505, 904, 10137, 477, 1646, 1629, 304, 701, 11917, 13], [11769, 42715, 1629, 374, 14042, 304, 279, 1887, 323, 649, 387, 1511, 311, 1893, 1296, 5157, 477, 9616, 449, 1023, 8640, 1823, 1955, 27866, 16067, 65911, 7649, 6276, 13707, 311, 6667, 810, 828, 389, 1268, 872, 445, 11237, 8522, 527, 16785, 304, 1972, 31184, 26350, 13, 763, 420, 10474, 11, 433, 753, 3062, 311, 2274, 459, 8830, 369, 279, 4595, 315, 11374, 279, 917, 374, 16785, 1664, 477, 31555, 389, 323, 1268, 7041, 433, 753, 15061, 1523, 304, 1884, 5157, 13, 11995, 11302, 4526, 323, 1629, 21917, 527, 9200, 369, 420, 29388, 13, 1115, 690, 1520, 304, 272, 2060, 315, 1296, 5157, 430, 649, 1520, 3839, 70880, 919, 73124, 782, 12760, 323, 4500, 315, 17392, 56181, 732, 2756, 1711, 37957, 16067, 4599, 28818, 701, 3851, 311, 459, 2926, 743, 315, 3932, 11, 433, 753, 3062, 311, 9762, 3823, 11302, 389, 279, 14847, 433, 753, 17843, 13, 1115, 8779, 4128, 6666, 311, 279, 1455, 7185, 8640, 323, 11415, 6964, 5157, 430, 527, 14718, 36033, 14847, 13, 23272, 42985, 6276, 499, 311, 15866, 11302, 12483, 311, 14042, 35483, 320, 14450, 92455, 11, 420, 374, 43770, 709, 311, 264, 11302, 3215, 304, 701, 917, 705, 1243, 4141, 389, 35483, 430, 617, 264, 3230, 11302, 4877, 323, 5573, 13, 362, 4279, 29388, 374, 311, 4141, 389, 35483, 430, 5371, 264, 8009, 1217, 11302, 5573, 11, 1243, 31646, 1523, 1139, 36033, 3585, 1701, 279, 11944, 11917, 1684, 8794, 1962, 1113, 1183, 2492, 16067, 27317, 42985, 1101, 11815, 11889, 8640, 311, 21917, 49194, 11, 902, 2187, 37142, 3046, 311, 15499, 25052, 7185, 35483, 323, 89498, 1124, 449, 5201, 311, 2204, 13186, 13, 1556, 1962, 3046, 649, 387, 5975, 82, 11, 25175, 11, 477, 1524, 3917, 5030, 11909, 13, 1115, 6276, 3932, 311, 2339, 70880, 919, 4028, 3062, 16865, 13186, 1943, 287, 51090, 311, 264, 40283, 16067, 2170, 701, 3851, 68711, 1555, 279, 13746, 7649, 10474, 11, 433, 596, 7718, 311, 3136, 26984, 828, 311, 46464, 323, 7417, 1202, 5178, 13, 23272, 42985, 20682, 499, 311, 923, 8640, 439, 10507, 311, 30525, 320, 1527, 2225, 279, 2447, 2199, 323, 2949, 459, 21917, 7325, 705, 24050, 701, 1296, 10401, 389, 1972, 31184, 26350, 13, 1115, 374, 264, 1401, 8935, 304, 3515, 701, 8558, 1887, 323, 701, 16865, 29901, 1887, 304, 279, 1890, 5452, 1087, 17158, 16067, 34, 2353, 989, 25052, 287, 1401, 828, 3585, 11, 7982, 29531, 287, 30525, 11, 37142, 1113, 35483, 11, 323, 39662, 1523, 1139, 3062, 828, 304, 11917, 1684, 527, 88568, 499, 4805, 1101, 1390, 311, 656, 3131, 701, 917, 13280, 5788, 67103, 2099, 11, 5423, 520, 279, 5788, 6566, 11, 433, 753, 16996, 311, 636, 264, 1579, 11852, 24131, 315, 3851, 5178, 449, 5201, 311, 40370, 11, 2853, 11, 323, 11302, 12483, 13, 1115, 26420, 430, 433, 596, 24944, 35946, 3135, 520, 5569, 8231, 1074, 56181, 323, 5113, 811, 2187, 499, 311, 1920, 323, 5573, 5788, 35483, 304, 3221, 1972, 7394, 1943, 17868, 11, 14906, 3493, 264, 47970, 1648, 311, 1912, 35483, 505, 264, 3254, 10652, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 701, 3851, 4028, 5361, 10800, 1345, 31414, 287, 323, 362, 16675, 27866, 16067, 27317, 42985, 5825, 16967, 27223, 430, 2187, 499, 311, 3839, 1401, 17150, 927, 892, 13, 1472, 649, 9407, 311, 1684, 17150, 369, 264, 2728, 4261, 323, 31646, 1523, 1139, 264, 3230, 828, 1486, 311, 636, 264, 11917, 2007, 369, 430, 892, 4261, 2001, 420, 374, 5423, 26222, 369, 28803, 5788, 4819, 79016, 42985, 1101, 6276, 369, 4877, 323, 11408, 50284, 11, 902, 6276, 3932, 311, 1906, 2204, 11028, 315, 872, 8522, 449, 2204, 48316, 323, 1684, 1268, 814, 527, 16785, 3185, 14656, 25034, 2949, 1855, 9676, 13, 1115, 374, 11190, 369, 362, 16675, 7649, 4442, 304, 10137, 11, 1646, 11, 477, 57470, 8446, 885, 59724, 811, 16067, 42172, 811, 527, 264, 8147, 4668, 304, 23272, 42985, 430, 2187, 499, 311, 2804, 6299, 389, 35483, 304, 3221, 1972, 7394, 13, 1115, 649, 387, 1511, 311, 9651, 5573, 35483, 11, 3708, 1124, 311, 21917, 49194, 11, 477, 3708, 1124, 311, 30525, 3354, 7124, 459, 33762, 11, 5042, 3493, 264, 4141, 3044, 11, 264, 25936, 4478, 11, 323, 459, 1957, 311, 2804, 13, 20319, 811, 527, 8104, 11190, 369, 8863, 35483, 520, 5788, 5569, 5221, 31458, 16067, 8607, 445, 11237, 8522, 527, 7447, 65051, 11, 7438, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311], [57865, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 323, 89498, 701, 3851, 4028, 5361, 10800, 1196, 300, 420, 2199, 11190, 30, 21994, 25310, 5256, 5971, 47, 39906, 12705, 67247, 65911, 27866, 46067, 34868, 24374, 541, 25904, 76715, 64207, 6247, 27317, 42985, 27721, 31380, 12830, 14, 10155, 7816, 97552, 27798, 13857, 7388, 220, 2366, 19, 23272, 19368, 11, 4953, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-07 15:13:32,207 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-04-07 15:13:32,327 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fe1600d9950>
2024-04-07 15:13:32,327 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7fe160397530> server_hostname='api.openai.com' timeout=None
2024-04-07 15:13:32,361 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fe1600d9bd0>
2024-04-07 15:13:32,362 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-07 15:13:32,363 - DEBUG - send_request_headers.complete
2024-04-07 15:13:32,363 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-07 15:13:32,364 - DEBUG - send_request_body.complete
2024-04-07 15:13:32,364 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-07 15:13:32,642 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 07 Apr 2024 13:13:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'39'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'998580'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'85ms'), (b'x-request-id', b'req_d405e18acc60e60a36280877e71e6c84'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=2UqKAfnfhIGpOFgoFhH9KkOjpyETc1mrVvW.jBXecuM-1712495612-1.0.1.1-3iaVvpR9mNCn70Z7I67rboCsLbtlfS9hEEcI9aqameGJMlCe3KIwJdF4jKWex8BHqIofztzO8fCR4gujO2NqzQ; path=/; expires=Sun, 07-Apr-24 13:43:32 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=0n1LQJCcarDdmNbYxKYUTP_1dCeO8UFdFyqsAGxMgYg-1712495612763-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'870a468a3cd20a3b-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-07 15:13:32,645 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-07 15:13:32,646 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-07 15:13:32,770 - DEBUG - receive_response_body.complete
2024-04-07 15:13:32,770 - DEBUG - response_closed.started
2024-04-07 15:13:32,770 - DEBUG - response_closed.complete
2024-04-07 15:13:32,771 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-07 15:13:32,808 - DEBUG - Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU
2024-04-07 15:13:32,808 - INFO - Loading faiss with AVX2 support.
2024-04-07 15:13:32,848 - INFO - Successfully loaded faiss with AVX2 support.
2024-04-07 15:13:32,864 - DEBUG - Starting new HTTPS connection (1): api.smith.langchain.com:443
2024-04-07 15:13:32,913 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7fe15fed0220>, 'json_data': {'input': [[5269, 649, 8859, 34117, 1520, 449, 7649, 30]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-07 15:13:32,913 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-07 15:13:32,914 - DEBUG - send_request_headers.complete
2024-04-07 15:13:32,914 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-07 15:13:32,914 - DEBUG - send_request_body.complete
2024-04-07 15:13:32,914 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-07 15:13:33,189 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 07 Apr 2024 13:13:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'19'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999992'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_4df15006329ff3a10897e99238aaf86e'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'870a468d9af50a3b-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-07 15:13:33,190 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-07 15:13:33,190 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-07 15:13:33,192 - DEBUG - receive_response_body.complete
2024-04-07 15:13:33,192 - DEBUG - response_closed.started
2024-04-07 15:13:33,193 - DEBUG - response_closed.complete
2024-04-07 15:13:33,193 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-07 15:13:33,216 - DEBUG - https://api.smith.langchain.com:443 "GET /info HTTP/1.1" 200 209
2024-04-07 15:13:33,300 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-07 15:13:33,700 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 15:13:41,435 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-07 15:13:52,628 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 15:13:52,632 - DEBUG - Closing Client.session
2024-04-07 15:13:52,706 - DEBUG - close.started
2024-04-07 15:13:52,706 - DEBUG - close.complete
2024-04-07 20:59:48,110 - INFO - Tests performed with ollama + llama2.
2024-04-07 20:59:48,115 - INFO - Model name: llama2
2024-04-07 20:59:48,115 - INFO - Using backend: ollama
2024-04-07 21:00:16,764 - INFO - Tests performed with ollama + llama2.
2024-04-07 21:00:16,766 - INFO - Model name: llama2
2024-04-07 21:00:16,766 - INFO - Using backend: ollama
2024-04-07 21:00:16,767 - INFO - fake_useragent not found, using default user agent.To get a realistic header for requests, `pip install fake_useragent`.
2024-04-07 21:00:16,864 - DEBUG - Starting new HTTPS connection (1): docs.smith.langchain.com:443
2024-04-07 21:00:17,113 - DEBUG - https://docs.smith.langchain.com:443 "GET /user_guide HTTP/1.1" 200 59674
2024-04-07 21:00:17,379 - DEBUG - Encoding detection: utf_8 is most likely the one.
2024-04-07 21:00:17,396 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-07 21:00:17,397 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-07 21:00:17,448 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-07 21:00:17,448 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-07 21:00:17,501 - DEBUG - Starting new HTTPS connection (1): openaipublic.blob.core.windows.net:443
2024-04-07 21:00:18,228 - DEBUG - https://openaipublic.blob.core.windows.net:443 "GET /encodings/cl100k_base.tiktoken HTTP/1.1" 200 1681126
2024-04-07 21:00:23,219 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7f17db216160>, 'json_data': {'input': [[27317, 42985, 2724, 13002, 765, 11410, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985], [36234, 311, 1925, 2262, 9468, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985, 61791, 27317, 19368, 13325, 61791, 27317, 19368, 12438, 14, 10155, 61791, 27317, 42985, 5446, 61791, 6014, 11087, 311, 1883, 25310, 5256, 1502, 13002, 47, 39906, 12363, 12, 86021, 1305, 4628, 83463, 46067, 51803, 612, 20319, 811, 55715, 27636, 16617, 59482, 2239, 1502, 13002, 1966, 420, 2199, 27317, 42985, 2724, 13002, 27317, 42985, 374, 264, 5452, 369, 445, 11237, 3851, 4500, 11, 16967, 11, 323, 7649, 13, 763, 420, 8641, 11, 584, 4805, 11415, 279, 58321, 315, 88568, 23272, 42985, 11815, 323, 1268, 814, 5052, 1139, 1855, 6566, 315, 279, 3851, 4500, 48608, 13, 1226, 3987, 420, 690, 6179, 3932, 1268, 311, 1888, 29166, 420, 8147, 5452, 477, 3041, 1124, 2555, 311, 2980, 422, 814, 3207, 1120, 6041, 872, 11879, 43925, 67247, 16067, 12705, 67247, 445, 11237, 8522, 3629, 18065, 4062, 66196, 1990, 52032, 11, 1646, 4595, 11, 57470, 8446, 323, 1023, 5137, 627, 791, 5845, 311, 19019, 3619, 1268, 279, 1646, 374, 16785, 2001, 323, 7542, 1405, 433, 374, 22109, 2001, 374, 17235, 3062, 369, 420, 10474, 20967, 3252, 16067, 4599, 11469, 502, 445, 11237, 8522, 11, 584, 4284, 3515, 23272, 42985, 46515, 9147, 555, 1670, 627, 46, 728, 92455, 11, 433, 4536, 1431, 5995, 311, 1427, 520, 1475, 3254, 11917, 13, 4452, 11, 994, 2574, 733, 5076, 320, 276, 16907, 842, 1121, 11, 24746, 8479, 6471, 11, 29493, 1109, 3685, 11572, 11, 5190, 1109, 3685, 4037, 10648, 705, 433, 753, 9193, 11190, 311, 7542, 555, 3411, 1555, 279, 3851, 35483, 13, 23272, 42985, 6835, 2867, 24035, 323, 28803, 2038, 520, 1855, 3094, 315, 459, 445, 11237, 8668, 11, 3339, 433, 1790, 8831, 311, 10765, 323, 3789, 12, 1593, 4819, 627, 1687, 3493, 10068, 21568, 315, 6369, 6743, 11, 5865, 11, 323, 17622, 9477, 34032, 3475, 2638, 16067, 8142, 1690, 13707, 2103, 8448, 459, 2926, 2373, 315, 872, 3851, 3196, 389, 1054, 85, 24459, 12621, 9520, 584, 4070, 3970, 459, 7859, 1396, 315, 15009, 7411, 1212, 311, 11142, 264, 810, 1296, 16625, 5603, 13, 23272, 42985, 6276, 13707, 311, 1893, 30525, 11, 902, 527, 15661, 315, 11374, 323, 5905, 16674, 11, 323, 1005, 1521, 311, 1629, 7177, 389, 872, 445, 11237, 8522, 627, 9673, 1296, 5157, 649, 387, 23700, 304, 20155, 11, 3549, 389, 279, 11722, 11, 477, 35990, 505, 3851, 35483, 13, 23272, 42985, 1101, 3727, 433, 4228, 311, 1629, 2587, 56181, 320, 21704, 445, 11237, 323, 67709, 3196, 8, 311, 5573, 1296, 3135, 3034, 36642, 2806, 16067, 4599, 1760, 67247, 2204, 11028, 315, 701, 8522, 323, 3339, 4442, 11, 433, 753, 3062, 311, 1518, 3508, 477, 539, 499, 4070, 1239, 14715, 449, 5201, 311, 701, 2926, 1296, 5157, 627, 46, 728, 92455, 11, 4442, 304, 279, 10137, 11, 57470, 8446, 11, 477, 1646, 5873, 649, 617, 6908, 25127, 304, 14847, 9124, 555, 701, 3851, 627, 644, 2015, 311, 636, 264, 5647, 369, 902, 11678, 374, 16785, 2731, 11, 433, 753, 5505, 311, 387, 3025, 311, 1684, 3135, 369, 2204, 33483, 389, 279, 1890, 62823, 14737, 3185, 14656, 25034, 13, 1226, 4070, 29091, 17345, 304, 264, 1217, 22658, 12593, 1684, 369, 1296, 8640, 311, 3839, 323, 58681, 70880, 919, 304, 1296, 12483, 4028, 5361, 54862, 315, 701, 3851, 25469, 1993, 16067, 27317, 42985, 5825, 264, 42715, 4676, 369, 11295, 20140, 323, 66196, 627, 2028, 6276, 499, 311, 6288, 1296, 704, 2204, 52032, 323, 4211, 13, 1472, 649, 1825, 279, 42715, 505, 904, 10137, 477, 1646, 1629, 304, 701, 11917, 13], [11769, 42715, 1629, 374, 14042, 304, 279, 1887, 323, 649, 387, 1511, 311, 1893, 1296, 5157, 477, 9616, 449, 1023, 8640, 1823, 1955, 27866, 16067, 65911, 7649, 6276, 13707, 311, 6667, 810, 828, 389, 1268, 872, 445, 11237, 8522, 527, 16785, 304, 1972, 31184, 26350, 13, 763, 420, 10474, 11, 433, 753, 3062, 311, 2274, 459, 8830, 369, 279, 4595, 315, 11374, 279, 917, 374, 16785, 1664, 477, 31555, 389, 323, 1268, 7041, 433, 753, 15061, 1523, 304, 1884, 5157, 13, 11995, 11302, 4526, 323, 1629, 21917, 527, 9200, 369, 420, 29388, 13, 1115, 690, 1520, 304, 272, 2060, 315, 1296, 5157, 430, 649, 1520, 3839, 70880, 919, 73124, 782, 12760, 323, 4500, 315, 17392, 56181, 732, 2756, 1711, 37957, 16067, 4599, 28818, 701, 3851, 311, 459, 2926, 743, 315, 3932, 11, 433, 753, 3062, 311, 9762, 3823, 11302, 389, 279, 14847, 433, 753, 17843, 13, 1115, 8779, 4128, 6666, 311, 279, 1455, 7185, 8640, 323, 11415, 6964, 5157, 430, 527, 14718, 36033, 14847, 13, 23272, 42985, 6276, 499, 311, 15866, 11302, 12483, 311, 14042, 35483, 320, 14450, 92455, 11, 420, 374, 43770, 709, 311, 264, 11302, 3215, 304, 701, 917, 705, 1243, 4141, 389, 35483, 430, 617, 264, 3230, 11302, 4877, 323, 5573, 13, 362, 4279, 29388, 374, 311, 4141, 389, 35483, 430, 5371, 264, 8009, 1217, 11302, 5573, 11, 1243, 31646, 1523, 1139, 36033, 3585, 1701, 279, 11944, 11917, 1684, 8794, 1962, 1113, 1183, 2492, 16067, 27317, 42985, 1101, 11815, 11889, 8640, 311, 21917, 49194, 11, 902, 2187, 37142, 3046, 311, 15499, 25052, 7185, 35483, 323, 89498, 1124, 449, 5201, 311, 2204, 13186, 13, 1556, 1962, 3046, 649, 387, 5975, 82, 11, 25175, 11, 477, 1524, 3917, 5030, 11909, 13, 1115, 6276, 3932, 311, 2339, 70880, 919, 4028, 3062, 16865, 13186, 1943, 287, 51090, 311, 264, 40283, 16067, 2170, 701, 3851, 68711, 1555, 279, 13746, 7649, 10474, 11, 433, 596, 7718, 311, 3136, 26984, 828, 311, 46464, 323, 7417, 1202, 5178, 13, 23272, 42985, 20682, 499, 311, 923, 8640, 439, 10507, 311, 30525, 320, 1527, 2225, 279, 2447, 2199, 323, 2949, 459, 21917, 7325, 705, 24050, 701, 1296, 10401, 389, 1972, 31184, 26350, 13, 1115, 374, 264, 1401, 8935, 304, 3515, 701, 8558, 1887, 323, 701, 16865, 29901, 1887, 304, 279, 1890, 5452, 1087, 17158, 16067, 34, 2353, 989, 25052, 287, 1401, 828, 3585, 11, 7982, 29531, 287, 30525, 11, 37142, 1113, 35483, 11, 323, 39662, 1523, 1139, 3062, 828, 304, 11917, 1684, 527, 88568, 499, 4805, 1101, 1390, 311, 656, 3131, 701, 917, 13280, 5788, 67103, 2099, 11, 5423, 520, 279, 5788, 6566, 11, 433, 753, 16996, 311, 636, 264, 1579, 11852, 24131, 315, 3851, 5178, 449, 5201, 311, 40370, 11, 2853, 11, 323, 11302, 12483, 13, 1115, 26420, 430, 433, 596, 24944, 35946, 3135, 520, 5569, 8231, 1074, 56181, 323, 5113, 811, 2187, 499, 311, 1920, 323, 5573, 5788, 35483, 304, 3221, 1972, 7394, 1943, 17868, 11, 14906, 3493, 264, 47970, 1648, 311, 1912, 35483, 505, 264, 3254, 10652, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 701, 3851, 4028, 5361, 10800, 1345, 31414, 287, 323, 362, 16675, 27866, 16067, 27317, 42985, 5825, 16967, 27223, 430, 2187, 499, 311, 3839, 1401, 17150, 927, 892, 13, 1472, 649, 9407, 311, 1684, 17150, 369, 264, 2728, 4261, 323, 31646, 1523, 1139, 264, 3230, 828, 1486, 311, 636, 264, 11917, 2007, 369, 430, 892, 4261, 2001, 420, 374, 5423, 26222, 369, 28803, 5788, 4819, 79016, 42985, 1101, 6276, 369, 4877, 323, 11408, 50284, 11, 902, 6276, 3932, 311, 1906, 2204, 11028, 315, 872, 8522, 449, 2204, 48316, 323, 1684, 1268, 814, 527, 16785, 3185, 14656, 25034, 2949, 1855, 9676, 13, 1115, 374, 11190, 369, 362, 16675, 7649, 4442, 304, 10137, 11, 1646, 11, 477, 57470, 8446, 885, 59724, 811, 16067, 42172, 811, 527, 264, 8147, 4668, 304, 23272, 42985, 430, 2187, 499, 311, 2804, 6299, 389, 35483, 304, 3221, 1972, 7394, 13, 1115, 649, 387, 1511, 311, 9651, 5573, 35483, 11, 3708, 1124, 311, 21917, 49194, 11, 477, 3708, 1124, 311, 30525, 3354, 7124, 459, 33762, 11, 5042, 3493, 264, 4141, 3044, 11, 264, 25936, 4478, 11, 323, 459, 1957, 311, 2804, 13, 20319, 811, 527, 8104, 11190, 369, 8863, 35483, 520, 5788, 5569, 5221, 31458, 16067, 8607, 445, 11237, 8522, 527, 7447, 65051, 11, 7438, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311], [57865, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 323, 89498, 701, 3851, 4028, 5361, 10800, 1196, 300, 420, 2199, 11190, 30, 21994, 25310, 5256, 5971, 47, 39906, 12705, 67247, 65911, 27866, 46067, 34868, 24374, 541, 25904, 76715, 64207, 6247, 27317, 42985, 27721, 31380, 12830, 14, 10155, 7816, 97552, 27798, 13857, 7388, 220, 2366, 19, 23272, 19368, 11, 4953, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-07 21:00:23,224 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-04-07 21:00:24,805 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f17db259b90>
2024-04-07 21:00:24,806 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f17db347530> server_hostname='api.openai.com' timeout=None
2024-04-07 21:00:24,838 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f17db2599d0>
2024-04-07 21:00:24,838 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-07 21:00:24,840 - DEBUG - send_request_headers.complete
2024-04-07 21:00:24,840 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-07 21:00:24,840 - DEBUG - send_request_body.complete
2024-04-07 21:00:24,841 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-07 21:00:25,120 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 07 Apr 2024 19:00:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'43'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'998580'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'85ms'), (b'x-request-id', b'req_a8ac2aadf45a331fc5b7880fb3117e33'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=APZVDkgNs1paoV7TEb.ADPTQLu79D6lAOULR9fS9DlM-1712516424-1.0.1.1-Uf2phbQ9K9..am3gnh8kGW1ZjgJOMuXulO.xtDDhcOYt9PHpynFiABCxSEZkCbdYHpMkr28ogwhSnNeYsCzxjw; path=/; expires=Sun, 07-Apr-24 19:30:24 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=.klRfp.VEfEmbT3unyAh.a3cNdiKzfTqu6At9Lv236E-1712516424970-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'870c42a65fcf82ac-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-07 21:00:25,123 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-07 21:00:25,124 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-07 21:00:25,330 - DEBUG - receive_response_body.complete
2024-04-07 21:00:25,331 - DEBUG - response_closed.started
2024-04-07 21:00:25,331 - DEBUG - response_closed.complete
2024-04-07 21:00:25,332 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-07 21:00:25,387 - DEBUG - Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU
2024-04-07 21:00:25,388 - INFO - Loading faiss with AVX2 support.
2024-04-07 21:00:25,495 - INFO - Successfully loaded faiss with AVX2 support.
2024-04-07 21:00:25,563 - DEBUG - Starting new HTTPS connection (1): api.smith.langchain.com:443
2024-04-07 21:00:25,748 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7f17daeb87c0>, 'json_data': {'input': [[5269, 649, 8859, 34117, 1520, 449, 7649, 30]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-07 21:00:25,750 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-07 21:00:25,751 - DEBUG - send_request_headers.complete
2024-04-07 21:00:25,752 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-07 21:00:25,752 - DEBUG - send_request_body.complete
2024-04-07 21:00:25,752 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-07 21:00:25,940 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 07 Apr 2024 19:00:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'16'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999992'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_53f9a0d6cf052cd6578d3cfa3b65ce0c'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'870c42ac0a4982ac-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-07 21:00:25,941 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-07 21:00:25,942 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-07 21:00:25,952 - DEBUG - receive_response_body.complete
2024-04-07 21:00:25,952 - DEBUG - response_closed.started
2024-04-07 21:00:25,952 - DEBUG - response_closed.complete
2024-04-07 21:00:25,952 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-07 21:00:25,989 - DEBUG - https://api.smith.langchain.com:443 "GET /info HTTP/1.1" 200 209
2024-04-07 21:00:26,002 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-07 21:00:26,662 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 21:00:37,843 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-07 21:00:46,112 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 21:00:46,119 - DEBUG - Closing Client.session
2024-04-07 21:00:46,229 - DEBUG - close.started
2024-04-07 21:00:46,229 - DEBUG - close.complete
2024-04-07 21:03:36,944 - INFO - Tests performed with ollama + llama2.
2024-04-07 21:03:36,945 - INFO - Model name: llama2
2024-04-07 21:03:36,946 - INFO - Using backend: ollama
2024-04-07 21:03:36,947 - INFO - fake_useragent not found, using default user agent.To get a realistic header for requests, `pip install fake_useragent`.
2024-04-07 21:03:37,032 - DEBUG - Starting new HTTPS connection (1): docs.smith.langchain.com:443
2024-04-07 21:03:37,191 - DEBUG - https://docs.smith.langchain.com:443 "GET /user_guide HTTP/1.1" 200 59674
2024-04-07 21:03:37,476 - DEBUG - Encoding detection: utf_8 is most likely the one.
2024-04-07 21:03:37,489 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-07 21:03:37,490 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-07 21:03:37,540 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-07 21:03:37,540 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-07 21:03:37,838 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7f04f0f3a160>, 'json_data': {'input': [[27317, 42985, 2724, 13002, 765, 11410, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985], [36234, 311, 1925, 2262, 9468, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985, 61791, 27317, 19368, 13325, 61791, 27317, 19368, 12438, 14, 10155, 61791, 27317, 42985, 5446, 61791, 6014, 11087, 311, 1883, 25310, 5256, 1502, 13002, 47, 39906, 12363, 12, 86021, 1305, 4628, 83463, 46067, 51803, 612, 20319, 811, 55715, 27636, 16617, 59482, 2239, 1502, 13002, 1966, 420, 2199, 27317, 42985, 2724, 13002, 27317, 42985, 374, 264, 5452, 369, 445, 11237, 3851, 4500, 11, 16967, 11, 323, 7649, 13, 763, 420, 8641, 11, 584, 4805, 11415, 279, 58321, 315, 88568, 23272, 42985, 11815, 323, 1268, 814, 5052, 1139, 1855, 6566, 315, 279, 3851, 4500, 48608, 13, 1226, 3987, 420, 690, 6179, 3932, 1268, 311, 1888, 29166, 420, 8147, 5452, 477, 3041, 1124, 2555, 311, 2980, 422, 814, 3207, 1120, 6041, 872, 11879, 43925, 67247, 16067, 12705, 67247, 445, 11237, 8522, 3629, 18065, 4062, 66196, 1990, 52032, 11, 1646, 4595, 11, 57470, 8446, 323, 1023, 5137, 627, 791, 5845, 311, 19019, 3619, 1268, 279, 1646, 374, 16785, 2001, 323, 7542, 1405, 433, 374, 22109, 2001, 374, 17235, 3062, 369, 420, 10474, 20967, 3252, 16067, 4599, 11469, 502, 445, 11237, 8522, 11, 584, 4284, 3515, 23272, 42985, 46515, 9147, 555, 1670, 627, 46, 728, 92455, 11, 433, 4536, 1431, 5995, 311, 1427, 520, 1475, 3254, 11917, 13, 4452, 11, 994, 2574, 733, 5076, 320, 276, 16907, 842, 1121, 11, 24746, 8479, 6471, 11, 29493, 1109, 3685, 11572, 11, 5190, 1109, 3685, 4037, 10648, 705, 433, 753, 9193, 11190, 311, 7542, 555, 3411, 1555, 279, 3851, 35483, 13, 23272, 42985, 6835, 2867, 24035, 323, 28803, 2038, 520, 1855, 3094, 315, 459, 445, 11237, 8668, 11, 3339, 433, 1790, 8831, 311, 10765, 323, 3789, 12, 1593, 4819, 627, 1687, 3493, 10068, 21568, 315, 6369, 6743, 11, 5865, 11, 323, 17622, 9477, 34032, 3475, 2638, 16067, 8142, 1690, 13707, 2103, 8448, 459, 2926, 2373, 315, 872, 3851, 3196, 389, 1054, 85, 24459, 12621, 9520, 584, 4070, 3970, 459, 7859, 1396, 315, 15009, 7411, 1212, 311, 11142, 264, 810, 1296, 16625, 5603, 13, 23272, 42985, 6276, 13707, 311, 1893, 30525, 11, 902, 527, 15661, 315, 11374, 323, 5905, 16674, 11, 323, 1005, 1521, 311, 1629, 7177, 389, 872, 445, 11237, 8522, 627, 9673, 1296, 5157, 649, 387, 23700, 304, 20155, 11, 3549, 389, 279, 11722, 11, 477, 35990, 505, 3851, 35483, 13, 23272, 42985, 1101, 3727, 433, 4228, 311, 1629, 2587, 56181, 320, 21704, 445, 11237, 323, 67709, 3196, 8, 311, 5573, 1296, 3135, 3034, 36642, 2806, 16067, 4599, 1760, 67247, 2204, 11028, 315, 701, 8522, 323, 3339, 4442, 11, 433, 753, 3062, 311, 1518, 3508, 477, 539, 499, 4070, 1239, 14715, 449, 5201, 311, 701, 2926, 1296, 5157, 627, 46, 728, 92455, 11, 4442, 304, 279, 10137, 11, 57470, 8446, 11, 477, 1646, 5873, 649, 617, 6908, 25127, 304, 14847, 9124, 555, 701, 3851, 627, 644, 2015, 311, 636, 264, 5647, 369, 902, 11678, 374, 16785, 2731, 11, 433, 753, 5505, 311, 387, 3025, 311, 1684, 3135, 369, 2204, 33483, 389, 279, 1890, 62823, 14737, 3185, 14656, 25034, 13, 1226, 4070, 29091, 17345, 304, 264, 1217, 22658, 12593, 1684, 369, 1296, 8640, 311, 3839, 323, 58681, 70880, 919, 304, 1296, 12483, 4028, 5361, 54862, 315, 701, 3851, 25469, 1993, 16067, 27317, 42985, 5825, 264, 42715, 4676, 369, 11295, 20140, 323, 66196, 627, 2028, 6276, 499, 311, 6288, 1296, 704, 2204, 52032, 323, 4211, 13, 1472, 649, 1825, 279, 42715, 505, 904, 10137, 477, 1646, 1629, 304, 701, 11917, 13], [11769, 42715, 1629, 374, 14042, 304, 279, 1887, 323, 649, 387, 1511, 311, 1893, 1296, 5157, 477, 9616, 449, 1023, 8640, 1823, 1955, 27866, 16067, 65911, 7649, 6276, 13707, 311, 6667, 810, 828, 389, 1268, 872, 445, 11237, 8522, 527, 16785, 304, 1972, 31184, 26350, 13, 763, 420, 10474, 11, 433, 753, 3062, 311, 2274, 459, 8830, 369, 279, 4595, 315, 11374, 279, 917, 374, 16785, 1664, 477, 31555, 389, 323, 1268, 7041, 433, 753, 15061, 1523, 304, 1884, 5157, 13, 11995, 11302, 4526, 323, 1629, 21917, 527, 9200, 369, 420, 29388, 13, 1115, 690, 1520, 304, 272, 2060, 315, 1296, 5157, 430, 649, 1520, 3839, 70880, 919, 73124, 782, 12760, 323, 4500, 315, 17392, 56181, 732, 2756, 1711, 37957, 16067, 4599, 28818, 701, 3851, 311, 459, 2926, 743, 315, 3932, 11, 433, 753, 3062, 311, 9762, 3823, 11302, 389, 279, 14847, 433, 753, 17843, 13, 1115, 8779, 4128, 6666, 311, 279, 1455, 7185, 8640, 323, 11415, 6964, 5157, 430, 527, 14718, 36033, 14847, 13, 23272, 42985, 6276, 499, 311, 15866, 11302, 12483, 311, 14042, 35483, 320, 14450, 92455, 11, 420, 374, 43770, 709, 311, 264, 11302, 3215, 304, 701, 917, 705, 1243, 4141, 389, 35483, 430, 617, 264, 3230, 11302, 4877, 323, 5573, 13, 362, 4279, 29388, 374, 311, 4141, 389, 35483, 430, 5371, 264, 8009, 1217, 11302, 5573, 11, 1243, 31646, 1523, 1139, 36033, 3585, 1701, 279, 11944, 11917, 1684, 8794, 1962, 1113, 1183, 2492, 16067, 27317, 42985, 1101, 11815, 11889, 8640, 311, 21917, 49194, 11, 902, 2187, 37142, 3046, 311, 15499, 25052, 7185, 35483, 323, 89498, 1124, 449, 5201, 311, 2204, 13186, 13, 1556, 1962, 3046, 649, 387, 5975, 82, 11, 25175, 11, 477, 1524, 3917, 5030, 11909, 13, 1115, 6276, 3932, 311, 2339, 70880, 919, 4028, 3062, 16865, 13186, 1943, 287, 51090, 311, 264, 40283, 16067, 2170, 701, 3851, 68711, 1555, 279, 13746, 7649, 10474, 11, 433, 596, 7718, 311, 3136, 26984, 828, 311, 46464, 323, 7417, 1202, 5178, 13, 23272, 42985, 20682, 499, 311, 923, 8640, 439, 10507, 311, 30525, 320, 1527, 2225, 279, 2447, 2199, 323, 2949, 459, 21917, 7325, 705, 24050, 701, 1296, 10401, 389, 1972, 31184, 26350, 13, 1115, 374, 264, 1401, 8935, 304, 3515, 701, 8558, 1887, 323, 701, 16865, 29901, 1887, 304, 279, 1890, 5452, 1087, 17158, 16067, 34, 2353, 989, 25052, 287, 1401, 828, 3585, 11, 7982, 29531, 287, 30525, 11, 37142, 1113, 35483, 11, 323, 39662, 1523, 1139, 3062, 828, 304, 11917, 1684, 527, 88568, 499, 4805, 1101, 1390, 311, 656, 3131, 701, 917, 13280, 5788, 67103, 2099, 11, 5423, 520, 279, 5788, 6566, 11, 433, 753, 16996, 311, 636, 264, 1579, 11852, 24131, 315, 3851, 5178, 449, 5201, 311, 40370, 11, 2853, 11, 323, 11302, 12483, 13, 1115, 26420, 430, 433, 596, 24944, 35946, 3135, 520, 5569, 8231, 1074, 56181, 323, 5113, 811, 2187, 499, 311, 1920, 323, 5573, 5788, 35483, 304, 3221, 1972, 7394, 1943, 17868, 11, 14906, 3493, 264, 47970, 1648, 311, 1912, 35483, 505, 264, 3254, 10652, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 701, 3851, 4028, 5361, 10800, 1345, 31414, 287, 323, 362, 16675, 27866, 16067, 27317, 42985, 5825, 16967, 27223, 430, 2187, 499, 311, 3839, 1401, 17150, 927, 892, 13, 1472, 649, 9407, 311, 1684, 17150, 369, 264, 2728, 4261, 323, 31646, 1523, 1139, 264, 3230, 828, 1486, 311, 636, 264, 11917, 2007, 369, 430, 892, 4261, 2001, 420, 374, 5423, 26222, 369, 28803, 5788, 4819, 79016, 42985, 1101, 6276, 369, 4877, 323, 11408, 50284, 11, 902, 6276, 3932, 311, 1906, 2204, 11028, 315, 872, 8522, 449, 2204, 48316, 323, 1684, 1268, 814, 527, 16785, 3185, 14656, 25034, 2949, 1855, 9676, 13, 1115, 374, 11190, 369, 362, 16675, 7649, 4442, 304, 10137, 11, 1646, 11, 477, 57470, 8446, 885, 59724, 811, 16067, 42172, 811, 527, 264, 8147, 4668, 304, 23272, 42985, 430, 2187, 499, 311, 2804, 6299, 389, 35483, 304, 3221, 1972, 7394, 13, 1115, 649, 387, 1511, 311, 9651, 5573, 35483, 11, 3708, 1124, 311, 21917, 49194, 11, 477, 3708, 1124, 311, 30525, 3354, 7124, 459, 33762, 11, 5042, 3493, 264, 4141, 3044, 11, 264, 25936, 4478, 11, 323, 459, 1957, 311, 2804, 13, 20319, 811, 527, 8104, 11190, 369, 8863, 35483, 520, 5788, 5569, 5221, 31458, 16067, 8607, 445, 11237, 8522, 527, 7447, 65051, 11, 7438, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311], [57865, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 323, 89498, 701, 3851, 4028, 5361, 10800, 1196, 300, 420, 2199, 11190, 30, 21994, 25310, 5256, 5971, 47, 39906, 12705, 67247, 65911, 27866, 46067, 34868, 24374, 541, 25904, 76715, 64207, 6247, 27317, 42985, 27721, 31380, 12830, 14, 10155, 7816, 97552, 27798, 13857, 7388, 220, 2366, 19, 23272, 19368, 11, 4953, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-07 21:03:37,843 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-04-07 21:03:37,861 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f04f0daf810>
2024-04-07 21:03:37,861 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f04f1067530> server_hostname='api.openai.com' timeout=None
2024-04-07 21:03:37,872 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f04f0daf750>
2024-04-07 21:03:37,872 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-07 21:03:37,872 - DEBUG - send_request_headers.complete
2024-04-07 21:03:37,872 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-07 21:03:37,873 - DEBUG - send_request_body.complete
2024-04-07 21:03:37,873 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-07 21:03:38,133 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 07 Apr 2024 19:03:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'48'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'998580'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'85ms'), (b'x-request-id', b'req_1d1cdbd03b5c8693d2ac7049b0756814'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=ypo8V95jiP5TUGdEFlOoKilWemAlU5zKXiInfpUI60A-1712516617-1.0.1.1-BsvOFXpxQhxv.BAsUvsN2OgPfcs0v5Ff0767CAvZu.4OqyT02.Xodckpz_4Dp8kDgOSdTvDuDe8BPBC1m5nHgg; path=/; expires=Sun, 07-Apr-24 19:33:37 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=fajVqr5O9XmpiKrKaK54Qgo19mYMr8hvKINHMpqkM18-1712516617978-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'870c475cd93a09a5-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-07 21:03:38,133 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-07 21:03:38,135 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-07 21:03:38,276 - DEBUG - receive_response_body.complete
2024-04-07 21:03:38,276 - DEBUG - response_closed.started
2024-04-07 21:03:38,276 - DEBUG - response_closed.complete
2024-04-07 21:03:38,277 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-07 21:03:38,312 - DEBUG - Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU
2024-04-07 21:03:38,313 - INFO - Loading faiss with AVX2 support.
2024-04-07 21:03:38,356 - INFO - Successfully loaded faiss with AVX2 support.
2024-04-07 21:03:38,374 - DEBUG - Starting new HTTPS connection (1): api.smith.langchain.com:443
2024-04-07 21:03:38,424 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7f04f0cf4720>, 'json_data': {'input': [[5269, 649, 8859, 34117, 1520, 449, 7649, 30]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-07 21:03:38,425 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-07 21:03:38,425 - DEBUG - send_request_headers.complete
2024-04-07 21:03:38,425 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-07 21:03:38,426 - DEBUG - send_request_body.complete
2024-04-07 21:03:38,426 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-07 21:03:38,605 - DEBUG - https://api.smith.langchain.com:443 "GET /info HTTP/1.1" 200 209
2024-04-07 21:03:38,691 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 07 Apr 2024 19:03:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'23'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999992'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_e3a9fcd5d31d6fa1229276abcded6627'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'870c47604ec609a5-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-07 21:03:38,693 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-07 21:03:38,694 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-07 21:03:38,709 - DEBUG - receive_response_body.complete
2024-04-07 21:03:38,709 - DEBUG - response_closed.started
2024-04-07 21:03:38,710 - DEBUG - response_closed.complete
2024-04-07 21:03:38,710 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-07 21:03:38,839 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-07 21:03:38,854 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 21:03:39,145 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-07 21:03:39,241 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 21:03:50,778 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-07 21:03:50,938 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-07 21:03:58,081 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7f04f0cf40e0>, 'json_data': {'input': [[198, 40914, 11, 358, 4265, 387, 6380, 311, 1520, 0, 5810, 527, 1063, 5627, 23272, 42985, 649, 7945, 449, 7649, 701, 445, 11237, 8522, 1473, 16, 13, 11688, 5008, 40388, 25, 23272, 42985, 649, 15806, 701, 445, 11237, 596, 5178, 389, 5370, 5933, 4221, 8863, 9256, 1778, 439, 1495, 24790, 11, 27065, 6492, 11, 7086, 5502, 18324, 11, 323, 810, 627, 17, 13, 5008, 16543, 25, 23272, 42985, 649, 1520, 499, 7060, 2442, 2957, 323, 5542, 701, 445, 11237, 311, 7417, 1202, 5178, 389, 3230, 9256, 477, 31576, 627, 18, 13, 2956, 46923, 25, 23272, 42985, 649, 7945, 304, 37142, 1113, 30525, 369, 4967, 323, 38663, 445, 11237, 82, 11, 902, 649, 1520, 7417, 279, 1646, 596, 5178, 627, 19, 13, 5008, 73177, 367, 25, 23272, 42985, 649, 3493, 26793, 1139, 1268, 459, 445, 11237, 374, 3339, 20492, 477, 24038, 1495, 11, 902, 649, 387, 5505, 369, 8830, 279, 1646, 596, 5597, 28846, 1920, 627, 20, 13, 8398, 323, 19406, 18825, 25, 23272, 42985, 649, 24564, 701, 445, 11237, 596, 18112, 323, 4967, 828, 311, 10765, 4754, 4868, 323, 12625, 15635, 11, 1778, 439, 50183, 477, 14675, 315, 16614, 2038, 382, 1271, 1505, 810, 2038, 389, 1268, 23272, 42985, 649, 7945, 449, 7649, 445, 11237, 8522, 11, 499, 649, 2778, 369, 9959, 9908, 11, 5117, 8158, 11, 477, 3495, 16064, 389, 279, 8712, 13, 5810, 374, 264, 6205, 2778, 3319, 430, 1253, 387, 11190, 1473, 63, 1, 4178, 44, 7649, 1, 2794, 330, 27317, 42985, 1, 2794, 330, 11789, 1646, 16865, 50062, 2028, 1288, 17622, 264, 1160, 315, 5070, 430, 4358, 1268, 311, 1296, 323, 15806, 445, 11237, 82, 11, 439, 1664, 439, 23272, 42985, 596, 17357, 304, 420, 3158, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-07 21:03:58,082 - DEBUG - close.started
2024-04-07 21:03:58,082 - DEBUG - close.complete
2024-04-07 21:03:58,082 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-04-07 21:04:00,261 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f04f0d7f3d0>
2024-04-07 21:04:00,262 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f04f1067530> server_hostname='api.openai.com' timeout=None
2024-04-07 21:04:00,286 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f04f0d61e50>
2024-04-07 21:04:00,287 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-07 21:04:00,288 - DEBUG - send_request_headers.complete
2024-04-07 21:04:00,289 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-07 21:04:00,290 - DEBUG - send_request_body.complete
2024-04-07 21:04:00,291 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-07 21:04:00,549 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 07 Apr 2024 19:04:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'29'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999718'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'16ms'), (b'x-request-id', b'req_3c0b95823d9fa8264674d11cf062e28d'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'870c47e8ed2c15f4-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-07 21:04:00,550 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-07 21:04:00,550 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-07 21:04:00,553 - DEBUG - receive_response_body.complete
2024-04-07 21:04:00,554 - DEBUG - response_closed.started
2024-04-07 21:04:00,554 - DEBUG - response_closed.complete
2024-04-07 21:04:00,554 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-07 21:04:01,345 - DEBUG - Starting new HTTPS connection (2): api.smith.langchain.com:443
2024-04-07 21:04:02,633 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 21:04:03,014 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 21:04:03,033 - DEBUG - Closing Client.session
2024-04-07 21:04:03,103 - DEBUG - close.started
2024-04-07 21:04:03,103 - DEBUG - close.complete
2024-04-07 21:05:48,066 - INFO - Tests performed with ollama + llama2.
2024-04-07 21:05:48,068 - INFO - Model name: llama2
2024-04-07 21:05:48,068 - INFO - Using backend: ollama
2024-04-07 21:05:48,069 - INFO - fake_useragent not found, using default user agent.To get a realistic header for requests, `pip install fake_useragent`.
2024-04-07 21:05:48,157 - DEBUG - Starting new HTTPS connection (1): docs.smith.langchain.com:443
2024-04-07 21:05:48,275 - DEBUG - https://docs.smith.langchain.com:443 "GET /user_guide HTTP/1.1" 200 59674
2024-04-07 21:05:48,347 - DEBUG - Encoding detection: utf_8 is most likely the one.
2024-04-07 21:05:48,385 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-07 21:05:48,387 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-07 21:05:48,451 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-07 21:05:48,451 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-07 21:05:48,774 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7f784ae7a0c0>, 'json_data': {'input': [[27317, 42985, 2724, 13002, 765, 11410, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985], [36234, 311, 1925, 2262, 9468, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985, 61791, 27317, 19368, 13325, 61791, 27317, 19368, 12438, 14, 10155, 61791, 27317, 42985, 5446, 61791, 6014, 11087, 311, 1883, 25310, 5256, 1502, 13002, 47, 39906, 12363, 12, 86021, 1305, 4628, 83463, 46067, 51803, 612, 20319, 811, 55715, 27636, 16617, 59482, 2239, 1502, 13002, 1966, 420, 2199, 27317, 42985, 2724, 13002, 27317, 42985, 374, 264, 5452, 369, 445, 11237, 3851, 4500, 11, 16967, 11, 323, 7649, 13, 763, 420, 8641, 11, 584, 4805, 11415, 279, 58321, 315, 88568, 23272, 42985, 11815, 323, 1268, 814, 5052, 1139, 1855, 6566, 315, 279, 3851, 4500, 48608, 13, 1226, 3987, 420, 690, 6179, 3932, 1268, 311, 1888, 29166, 420, 8147, 5452, 477, 3041, 1124, 2555, 311, 2980, 422, 814, 3207, 1120, 6041, 872, 11879, 43925, 67247, 16067, 12705, 67247, 445, 11237, 8522, 3629, 18065, 4062, 66196, 1990, 52032, 11, 1646, 4595, 11, 57470, 8446, 323, 1023, 5137, 627, 791, 5845, 311, 19019, 3619, 1268, 279, 1646, 374, 16785, 2001, 323, 7542, 1405, 433, 374, 22109, 2001, 374, 17235, 3062, 369, 420, 10474, 20967, 3252, 16067, 4599, 11469, 502, 445, 11237, 8522, 11, 584, 4284, 3515, 23272, 42985, 46515, 9147, 555, 1670, 627, 46, 728, 92455, 11, 433, 4536, 1431, 5995, 311, 1427, 520, 1475, 3254, 11917, 13, 4452, 11, 994, 2574, 733, 5076, 320, 276, 16907, 842, 1121, 11, 24746, 8479, 6471, 11, 29493, 1109, 3685, 11572, 11, 5190, 1109, 3685, 4037, 10648, 705, 433, 753, 9193, 11190, 311, 7542, 555, 3411, 1555, 279, 3851, 35483, 13, 23272, 42985, 6835, 2867, 24035, 323, 28803, 2038, 520, 1855, 3094, 315, 459, 445, 11237, 8668, 11, 3339, 433, 1790, 8831, 311, 10765, 323, 3789, 12, 1593, 4819, 627, 1687, 3493, 10068, 21568, 315, 6369, 6743, 11, 5865, 11, 323, 17622, 9477, 34032, 3475, 2638, 16067, 8142, 1690, 13707, 2103, 8448, 459, 2926, 2373, 315, 872, 3851, 3196, 389, 1054, 85, 24459, 12621, 9520, 584, 4070, 3970, 459, 7859, 1396, 315, 15009, 7411, 1212, 311, 11142, 264, 810, 1296, 16625, 5603, 13, 23272, 42985, 6276, 13707, 311, 1893, 30525, 11, 902, 527, 15661, 315, 11374, 323, 5905, 16674, 11, 323, 1005, 1521, 311, 1629, 7177, 389, 872, 445, 11237, 8522, 627, 9673, 1296, 5157, 649, 387, 23700, 304, 20155, 11, 3549, 389, 279, 11722, 11, 477, 35990, 505, 3851, 35483, 13, 23272, 42985, 1101, 3727, 433, 4228, 311, 1629, 2587, 56181, 320, 21704, 445, 11237, 323, 67709, 3196, 8, 311, 5573, 1296, 3135, 3034, 36642, 2806, 16067, 4599, 1760, 67247, 2204, 11028, 315, 701, 8522, 323, 3339, 4442, 11, 433, 753, 3062, 311, 1518, 3508, 477, 539, 499, 4070, 1239, 14715, 449, 5201, 311, 701, 2926, 1296, 5157, 627, 46, 728, 92455, 11, 4442, 304, 279, 10137, 11, 57470, 8446, 11, 477, 1646, 5873, 649, 617, 6908, 25127, 304, 14847, 9124, 555, 701, 3851, 627, 644, 2015, 311, 636, 264, 5647, 369, 902, 11678, 374, 16785, 2731, 11, 433, 753, 5505, 311, 387, 3025, 311, 1684, 3135, 369, 2204, 33483, 389, 279, 1890, 62823, 14737, 3185, 14656, 25034, 13, 1226, 4070, 29091, 17345, 304, 264, 1217, 22658, 12593, 1684, 369, 1296, 8640, 311, 3839, 323, 58681, 70880, 919, 304, 1296, 12483, 4028, 5361, 54862, 315, 701, 3851, 25469, 1993, 16067, 27317, 42985, 5825, 264, 42715, 4676, 369, 11295, 20140, 323, 66196, 627, 2028, 6276, 499, 311, 6288, 1296, 704, 2204, 52032, 323, 4211, 13, 1472, 649, 1825, 279, 42715, 505, 904, 10137, 477, 1646, 1629, 304, 701, 11917, 13], [11769, 42715, 1629, 374, 14042, 304, 279, 1887, 323, 649, 387, 1511, 311, 1893, 1296, 5157, 477, 9616, 449, 1023, 8640, 1823, 1955, 27866, 16067, 65911, 7649, 6276, 13707, 311, 6667, 810, 828, 389, 1268, 872, 445, 11237, 8522, 527, 16785, 304, 1972, 31184, 26350, 13, 763, 420, 10474, 11, 433, 753, 3062, 311, 2274, 459, 8830, 369, 279, 4595, 315, 11374, 279, 917, 374, 16785, 1664, 477, 31555, 389, 323, 1268, 7041, 433, 753, 15061, 1523, 304, 1884, 5157, 13, 11995, 11302, 4526, 323, 1629, 21917, 527, 9200, 369, 420, 29388, 13, 1115, 690, 1520, 304, 272, 2060, 315, 1296, 5157, 430, 649, 1520, 3839, 70880, 919, 73124, 782, 12760, 323, 4500, 315, 17392, 56181, 732, 2756, 1711, 37957, 16067, 4599, 28818, 701, 3851, 311, 459, 2926, 743, 315, 3932, 11, 433, 753, 3062, 311, 9762, 3823, 11302, 389, 279, 14847, 433, 753, 17843, 13, 1115, 8779, 4128, 6666, 311, 279, 1455, 7185, 8640, 323, 11415, 6964, 5157, 430, 527, 14718, 36033, 14847, 13, 23272, 42985, 6276, 499, 311, 15866, 11302, 12483, 311, 14042, 35483, 320, 14450, 92455, 11, 420, 374, 43770, 709, 311, 264, 11302, 3215, 304, 701, 917, 705, 1243, 4141, 389, 35483, 430, 617, 264, 3230, 11302, 4877, 323, 5573, 13, 362, 4279, 29388, 374, 311, 4141, 389, 35483, 430, 5371, 264, 8009, 1217, 11302, 5573, 11, 1243, 31646, 1523, 1139, 36033, 3585, 1701, 279, 11944, 11917, 1684, 8794, 1962, 1113, 1183, 2492, 16067, 27317, 42985, 1101, 11815, 11889, 8640, 311, 21917, 49194, 11, 902, 2187, 37142, 3046, 311, 15499, 25052, 7185, 35483, 323, 89498, 1124, 449, 5201, 311, 2204, 13186, 13, 1556, 1962, 3046, 649, 387, 5975, 82, 11, 25175, 11, 477, 1524, 3917, 5030, 11909, 13, 1115, 6276, 3932, 311, 2339, 70880, 919, 4028, 3062, 16865, 13186, 1943, 287, 51090, 311, 264, 40283, 16067, 2170, 701, 3851, 68711, 1555, 279, 13746, 7649, 10474, 11, 433, 596, 7718, 311, 3136, 26984, 828, 311, 46464, 323, 7417, 1202, 5178, 13, 23272, 42985, 20682, 499, 311, 923, 8640, 439, 10507, 311, 30525, 320, 1527, 2225, 279, 2447, 2199, 323, 2949, 459, 21917, 7325, 705, 24050, 701, 1296, 10401, 389, 1972, 31184, 26350, 13, 1115, 374, 264, 1401, 8935, 304, 3515, 701, 8558, 1887, 323, 701, 16865, 29901, 1887, 304, 279, 1890, 5452, 1087, 17158, 16067, 34, 2353, 989, 25052, 287, 1401, 828, 3585, 11, 7982, 29531, 287, 30525, 11, 37142, 1113, 35483, 11, 323, 39662, 1523, 1139, 3062, 828, 304, 11917, 1684, 527, 88568, 499, 4805, 1101, 1390, 311, 656, 3131, 701, 917, 13280, 5788, 67103, 2099, 11, 5423, 520, 279, 5788, 6566, 11, 433, 753, 16996, 311, 636, 264, 1579, 11852, 24131, 315, 3851, 5178, 449, 5201, 311, 40370, 11, 2853, 11, 323, 11302, 12483, 13, 1115, 26420, 430, 433, 596, 24944, 35946, 3135, 520, 5569, 8231, 1074, 56181, 323, 5113, 811, 2187, 499, 311, 1920, 323, 5573, 5788, 35483, 304, 3221, 1972, 7394, 1943, 17868, 11, 14906, 3493, 264, 47970, 1648, 311, 1912, 35483, 505, 264, 3254, 10652, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 701, 3851, 4028, 5361, 10800, 1345, 31414, 287, 323, 362, 16675, 27866, 16067, 27317, 42985, 5825, 16967, 27223, 430, 2187, 499, 311, 3839, 1401, 17150, 927, 892, 13, 1472, 649, 9407, 311, 1684, 17150, 369, 264, 2728, 4261, 323, 31646, 1523, 1139, 264, 3230, 828, 1486, 311, 636, 264, 11917, 2007, 369, 430, 892, 4261, 2001, 420, 374, 5423, 26222, 369, 28803, 5788, 4819, 79016, 42985, 1101, 6276, 369, 4877, 323, 11408, 50284, 11, 902, 6276, 3932, 311, 1906, 2204, 11028, 315, 872, 8522, 449, 2204, 48316, 323, 1684, 1268, 814, 527, 16785, 3185, 14656, 25034, 2949, 1855, 9676, 13, 1115, 374, 11190, 369, 362, 16675, 7649, 4442, 304, 10137, 11, 1646, 11, 477, 57470, 8446, 885, 59724, 811, 16067, 42172, 811, 527, 264, 8147, 4668, 304, 23272, 42985, 430, 2187, 499, 311, 2804, 6299, 389, 35483, 304, 3221, 1972, 7394, 13, 1115, 649, 387, 1511, 311, 9651, 5573, 35483, 11, 3708, 1124, 311, 21917, 49194, 11, 477, 3708, 1124, 311, 30525, 3354, 7124, 459, 33762, 11, 5042, 3493, 264, 4141, 3044, 11, 264, 25936, 4478, 11, 323, 459, 1957, 311, 2804, 13, 20319, 811, 527, 8104, 11190, 369, 8863, 35483, 520, 5788, 5569, 5221, 31458, 16067, 8607, 445, 11237, 8522, 527, 7447, 65051, 11, 7438, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311], [57865, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 323, 89498, 701, 3851, 4028, 5361, 10800, 1196, 300, 420, 2199, 11190, 30, 21994, 25310, 5256, 5971, 47, 39906, 12705, 67247, 65911, 27866, 46067, 34868, 24374, 541, 25904, 76715, 64207, 6247, 27317, 42985, 27721, 31380, 12830, 14, 10155, 7816, 97552, 27798, 13857, 7388, 220, 2366, 19, 23272, 19368, 11, 4953, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-07 21:05:48,778 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-04-07 21:05:48,822 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f784aed1390>
2024-04-07 21:05:48,822 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f784afab5c0> server_hostname='api.openai.com' timeout=None
2024-04-07 21:05:48,838 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f784aed0990>
2024-04-07 21:05:48,839 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-07 21:05:48,839 - DEBUG - send_request_headers.complete
2024-04-07 21:05:48,839 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-07 21:05:48,840 - DEBUG - send_request_body.complete
2024-04-07 21:05:48,840 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-07 21:05:49,152 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 07 Apr 2024 19:05:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'66'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'998580'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'85ms'), (b'x-request-id', b'req_39387d8e56694f52a01a9499762c7f83'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=fBAdigk6vVFKr0M6gQon0ZAQLEG6YLQKWOUlQJjl3Os-1712516749-1.0.1.1-29XtYnBy_n.bq4IESr9KzWoWEXR5nrEfGLmZeJ4p2f8IhVHvusYbyRtBcOOJ88MzOS3uywsNRQ6B87Ee.AFqGg; path=/; expires=Sun, 07-Apr-24 19:35:49 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=X9JCFJyiYzFNXl.GXxWdjItu790nzX9p.1lTWeMowc4-1712516749001-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'870c4a8f5c1a8295-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-07 21:05:49,155 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-07 21:05:49,155 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-07 21:05:49,423 - DEBUG - receive_response_body.complete
2024-04-07 21:05:49,423 - DEBUG - response_closed.started
2024-04-07 21:05:49,423 - DEBUG - response_closed.complete
2024-04-07 21:05:49,424 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-07 21:05:49,460 - DEBUG - Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU
2024-04-07 21:05:49,461 - INFO - Loading faiss with AVX2 support.
2024-04-07 21:05:49,501 - INFO - Successfully loaded faiss with AVX2 support.
2024-04-07 21:05:49,514 - DEBUG - Starting new HTTPS connection (1): api.smith.langchain.com:443
2024-04-07 21:05:49,550 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-07 21:05:49,782 - DEBUG - https://api.smith.langchain.com:443 "GET /info HTTP/1.1" 200 209
2024-04-07 21:05:49,789 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-07 21:05:50,021 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 21:05:58,341 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7f786bf69620>, 'json_data': {'input': [[198, 40914, 0, 5810, 527, 1063, 4754, 2778, 20126, 430, 1436, 387, 1511, 311, 1505, 2038, 9959, 311, 279, 10652, 922, 23272, 42985, 10695, 1296, 445, 11237, 8522, 1473, 16, 13, 330, 27317, 42985, 445, 11237, 3851, 7649, 3600, 1, 482, 1115, 3319, 1436, 387, 1511, 311, 1505, 810, 2038, 922, 23272, 42985, 596, 7649, 3600, 369, 445, 11237, 8522, 11, 2737, 872, 1920, 323, 1148, 814, 3085, 627, 17, 13, 330, 4178, 44, 3851, 7649, 10631, 1, 482, 1115, 3319, 1436, 387, 1511, 311, 1505, 10631, 323, 9650, 389, 1268, 311, 10772, 369, 445, 11237, 3851, 7649, 11, 2737, 1148, 311, 1755, 2391, 279, 7649, 1920, 323, 1268, 311, 7417, 701, 17393, 315, 2450, 627, 18, 13, 330, 27317, 42985, 8544, 1, 482, 1115, 3319, 1436, 387, 1511, 311, 1505, 11302, 323, 8544, 505, 1023, 3932, 889, 617, 6575, 449, 23272, 42985, 389, 872, 445, 11237, 8522, 11, 902, 1436, 3493, 20616, 1139, 872, 4367, 323, 27375, 627, 19, 13, 330, 4178, 44, 3851, 7649, 5070, 1, 482, 1115, 3319, 1436, 387, 1511, 311, 1505, 264, 8205, 315, 5070, 5552, 311, 445, 11237, 3851, 7649, 11, 2737, 4007, 28292, 11, 6725, 7177, 11, 323, 810, 627, 20, 13, 330, 27317, 42985, 6296, 1023, 445, 11237, 3851, 7649, 3600, 1, 482, 1115, 3319, 1436, 387, 1511, 311, 9616, 23272, 42985, 596, 7649, 3600, 311, 1884, 315, 1023, 5220, 11, 2737, 872, 21913, 11, 4519, 11, 323, 17444, 627, 21, 13, 330, 4438, 311, 10772, 369, 445, 11237, 3851, 7649, 449, 23272, 42985, 1, 482, 1115, 3319, 1436, 387, 1511, 311, 1505, 2038, 389, 1268, 311, 10772, 369, 445, 11237, 3851, 7649, 449, 23272, 42985, 11, 2737, 1148, 13650, 311, 4007, 323, 1268, 311, 1005, 872, 5070, 13750, 627, 22, 13, 330, 27317, 42985, 596, 445, 11237, 3851, 7649, 1920, 1, 482, 1115, 3319, 1436, 387, 1511, 311, 4048, 810, 922, 23272, 42985, 596, 7649, 1920, 11, 2737, 1148, 311, 1755, 2391, 1855, 6566, 315, 279, 7649, 1920, 323, 1268, 1317, 433, 11383, 5097, 311, 5371, 3135, 627, 23, 13, 330, 4178, 44, 3851, 7649, 15174, 369, 2450, 449, 23272, 42985, 1, 482, 1115, 3319, 1436, 387, 1511, 311, 1505, 2038, 389, 15174, 369, 2450, 994, 1701, 23272, 42985, 596, 445, 11237, 3851, 7649, 3600, 11, 2737, 10631, 389, 1268, 311, 1304, 279, 1455, 315, 872, 5070, 323, 7417, 701, 17393, 315, 2450, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-07 21:05:58,342 - DEBUG - close.started
2024-04-07 21:05:58,343 - DEBUG - close.complete
2024-04-07 21:05:58,343 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-04-07 21:05:58,362 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f784aa69950>
2024-04-07 21:05:58,362 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f784afab5c0> server_hostname='api.openai.com' timeout=None
2024-04-07 21:05:58,378 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f784aed1510>
2024-04-07 21:05:58,378 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-07 21:05:58,379 - DEBUG - send_request_headers.complete
2024-04-07 21:05:58,379 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-07 21:05:58,379 - DEBUG - send_request_body.complete
2024-04-07 21:05:58,379 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-07 21:05:58,615 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 21:05:58,627 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 07 Apr 2024 19:05:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'27'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999606'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'23ms'), (b'x-request-id', b'req_e9d12400ca955e3b2000b1f199fbea16'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'870c4acafed89921-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-07 21:05:58,628 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-07 21:05:58,628 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-07 21:05:58,642 - DEBUG - receive_response_body.complete
2024-04-07 21:05:58,643 - DEBUG - response_closed.started
2024-04-07 21:05:58,643 - DEBUG - response_closed.complete
2024-04-07 21:05:58,643 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-07 21:05:58,892 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 21:05:58,897 - DEBUG - Closing Client.session
2024-04-07 21:05:58,968 - DEBUG - close.started
2024-04-07 21:05:58,969 - DEBUG - close.complete
2024-04-07 21:07:26,230 - INFO - Tests performed with ollama + llama2.
2024-04-07 21:07:26,231 - INFO - Model name: llama2
2024-04-07 21:07:26,231 - INFO - Using backend: ollama
2024-04-07 21:07:26,232 - INFO - fake_useragent not found, using default user agent.To get a realistic header for requests, `pip install fake_useragent`.
2024-04-07 21:07:26,316 - DEBUG - Starting new HTTPS connection (1): docs.smith.langchain.com:443
2024-04-07 21:07:26,473 - DEBUG - https://docs.smith.langchain.com:443 "GET /user_guide HTTP/1.1" 200 59674
2024-04-07 21:07:26,557 - DEBUG - Encoding detection: utf_8 is most likely the one.
2024-04-07 21:07:26,584 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-07 21:07:26,585 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-07 21:07:26,696 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-07 21:07:26,698 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-07 21:07:27,048 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7f75d095a0c0>, 'json_data': {'input': [[27317, 42985, 2724, 13002, 765, 11410, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985], [36234, 311, 1925, 2262, 9468, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985, 61791, 27317, 19368, 13325, 61791, 27317, 19368, 12438, 14, 10155, 61791, 27317, 42985, 5446, 61791, 6014, 11087, 311, 1883, 25310, 5256, 1502, 13002, 47, 39906, 12363, 12, 86021, 1305, 4628, 83463, 46067, 51803, 612, 20319, 811, 55715, 27636, 16617, 59482, 2239, 1502, 13002, 1966, 420, 2199, 27317, 42985, 2724, 13002, 27317, 42985, 374, 264, 5452, 369, 445, 11237, 3851, 4500, 11, 16967, 11, 323, 7649, 13, 763, 420, 8641, 11, 584, 4805, 11415, 279, 58321, 315, 88568, 23272, 42985, 11815, 323, 1268, 814, 5052, 1139, 1855, 6566, 315, 279, 3851, 4500, 48608, 13, 1226, 3987, 420, 690, 6179, 3932, 1268, 311, 1888, 29166, 420, 8147, 5452, 477, 3041, 1124, 2555, 311, 2980, 422, 814, 3207, 1120, 6041, 872, 11879, 43925, 67247, 16067, 12705, 67247, 445, 11237, 8522, 3629, 18065, 4062, 66196, 1990, 52032, 11, 1646, 4595, 11, 57470, 8446, 323, 1023, 5137, 627, 791, 5845, 311, 19019, 3619, 1268, 279, 1646, 374, 16785, 2001, 323, 7542, 1405, 433, 374, 22109, 2001, 374, 17235, 3062, 369, 420, 10474, 20967, 3252, 16067, 4599, 11469, 502, 445, 11237, 8522, 11, 584, 4284, 3515, 23272, 42985, 46515, 9147, 555, 1670, 627, 46, 728, 92455, 11, 433, 4536, 1431, 5995, 311, 1427, 520, 1475, 3254, 11917, 13, 4452, 11, 994, 2574, 733, 5076, 320, 276, 16907, 842, 1121, 11, 24746, 8479, 6471, 11, 29493, 1109, 3685, 11572, 11, 5190, 1109, 3685, 4037, 10648, 705, 433, 753, 9193, 11190, 311, 7542, 555, 3411, 1555, 279, 3851, 35483, 13, 23272, 42985, 6835, 2867, 24035, 323, 28803, 2038, 520, 1855, 3094, 315, 459, 445, 11237, 8668, 11, 3339, 433, 1790, 8831, 311, 10765, 323, 3789, 12, 1593, 4819, 627, 1687, 3493, 10068, 21568, 315, 6369, 6743, 11, 5865, 11, 323, 17622, 9477, 34032, 3475, 2638, 16067, 8142, 1690, 13707, 2103, 8448, 459, 2926, 2373, 315, 872, 3851, 3196, 389, 1054, 85, 24459, 12621, 9520, 584, 4070, 3970, 459, 7859, 1396, 315, 15009, 7411, 1212, 311, 11142, 264, 810, 1296, 16625, 5603, 13, 23272, 42985, 6276, 13707, 311, 1893, 30525, 11, 902, 527, 15661, 315, 11374, 323, 5905, 16674, 11, 323, 1005, 1521, 311, 1629, 7177, 389, 872, 445, 11237, 8522, 627, 9673, 1296, 5157, 649, 387, 23700, 304, 20155, 11, 3549, 389, 279, 11722, 11, 477, 35990, 505, 3851, 35483, 13, 23272, 42985, 1101, 3727, 433, 4228, 311, 1629, 2587, 56181, 320, 21704, 445, 11237, 323, 67709, 3196, 8, 311, 5573, 1296, 3135, 3034, 36642, 2806, 16067, 4599, 1760, 67247, 2204, 11028, 315, 701, 8522, 323, 3339, 4442, 11, 433, 753, 3062, 311, 1518, 3508, 477, 539, 499, 4070, 1239, 14715, 449, 5201, 311, 701, 2926, 1296, 5157, 627, 46, 728, 92455, 11, 4442, 304, 279, 10137, 11, 57470, 8446, 11, 477, 1646, 5873, 649, 617, 6908, 25127, 304, 14847, 9124, 555, 701, 3851, 627, 644, 2015, 311, 636, 264, 5647, 369, 902, 11678, 374, 16785, 2731, 11, 433, 753, 5505, 311, 387, 3025, 311, 1684, 3135, 369, 2204, 33483, 389, 279, 1890, 62823, 14737, 3185, 14656, 25034, 13, 1226, 4070, 29091, 17345, 304, 264, 1217, 22658, 12593, 1684, 369, 1296, 8640, 311, 3839, 323, 58681, 70880, 919, 304, 1296, 12483, 4028, 5361, 54862, 315, 701, 3851, 25469, 1993, 16067, 27317, 42985, 5825, 264, 42715, 4676, 369, 11295, 20140, 323, 66196, 627, 2028, 6276, 499, 311, 6288, 1296, 704, 2204, 52032, 323, 4211, 13, 1472, 649, 1825, 279, 42715, 505, 904, 10137, 477, 1646, 1629, 304, 701, 11917, 13], [11769, 42715, 1629, 374, 14042, 304, 279, 1887, 323, 649, 387, 1511, 311, 1893, 1296, 5157, 477, 9616, 449, 1023, 8640, 1823, 1955, 27866, 16067, 65911, 7649, 6276, 13707, 311, 6667, 810, 828, 389, 1268, 872, 445, 11237, 8522, 527, 16785, 304, 1972, 31184, 26350, 13, 763, 420, 10474, 11, 433, 753, 3062, 311, 2274, 459, 8830, 369, 279, 4595, 315, 11374, 279, 917, 374, 16785, 1664, 477, 31555, 389, 323, 1268, 7041, 433, 753, 15061, 1523, 304, 1884, 5157, 13, 11995, 11302, 4526, 323, 1629, 21917, 527, 9200, 369, 420, 29388, 13, 1115, 690, 1520, 304, 272, 2060, 315, 1296, 5157, 430, 649, 1520, 3839, 70880, 919, 73124, 782, 12760, 323, 4500, 315, 17392, 56181, 732, 2756, 1711, 37957, 16067, 4599, 28818, 701, 3851, 311, 459, 2926, 743, 315, 3932, 11, 433, 753, 3062, 311, 9762, 3823, 11302, 389, 279, 14847, 433, 753, 17843, 13, 1115, 8779, 4128, 6666, 311, 279, 1455, 7185, 8640, 323, 11415, 6964, 5157, 430, 527, 14718, 36033, 14847, 13, 23272, 42985, 6276, 499, 311, 15866, 11302, 12483, 311, 14042, 35483, 320, 14450, 92455, 11, 420, 374, 43770, 709, 311, 264, 11302, 3215, 304, 701, 917, 705, 1243, 4141, 389, 35483, 430, 617, 264, 3230, 11302, 4877, 323, 5573, 13, 362, 4279, 29388, 374, 311, 4141, 389, 35483, 430, 5371, 264, 8009, 1217, 11302, 5573, 11, 1243, 31646, 1523, 1139, 36033, 3585, 1701, 279, 11944, 11917, 1684, 8794, 1962, 1113, 1183, 2492, 16067, 27317, 42985, 1101, 11815, 11889, 8640, 311, 21917, 49194, 11, 902, 2187, 37142, 3046, 311, 15499, 25052, 7185, 35483, 323, 89498, 1124, 449, 5201, 311, 2204, 13186, 13, 1556, 1962, 3046, 649, 387, 5975, 82, 11, 25175, 11, 477, 1524, 3917, 5030, 11909, 13, 1115, 6276, 3932, 311, 2339, 70880, 919, 4028, 3062, 16865, 13186, 1943, 287, 51090, 311, 264, 40283, 16067, 2170, 701, 3851, 68711, 1555, 279, 13746, 7649, 10474, 11, 433, 596, 7718, 311, 3136, 26984, 828, 311, 46464, 323, 7417, 1202, 5178, 13, 23272, 42985, 20682, 499, 311, 923, 8640, 439, 10507, 311, 30525, 320, 1527, 2225, 279, 2447, 2199, 323, 2949, 459, 21917, 7325, 705, 24050, 701, 1296, 10401, 389, 1972, 31184, 26350, 13, 1115, 374, 264, 1401, 8935, 304, 3515, 701, 8558, 1887, 323, 701, 16865, 29901, 1887, 304, 279, 1890, 5452, 1087, 17158, 16067, 34, 2353, 989, 25052, 287, 1401, 828, 3585, 11, 7982, 29531, 287, 30525, 11, 37142, 1113, 35483, 11, 323, 39662, 1523, 1139, 3062, 828, 304, 11917, 1684, 527, 88568, 499, 4805, 1101, 1390, 311, 656, 3131, 701, 917, 13280, 5788, 67103, 2099, 11, 5423, 520, 279, 5788, 6566, 11, 433, 753, 16996, 311, 636, 264, 1579, 11852, 24131, 315, 3851, 5178, 449, 5201, 311, 40370, 11, 2853, 11, 323, 11302, 12483, 13, 1115, 26420, 430, 433, 596, 24944, 35946, 3135, 520, 5569, 8231, 1074, 56181, 323, 5113, 811, 2187, 499, 311, 1920, 323, 5573, 5788, 35483, 304, 3221, 1972, 7394, 1943, 17868, 11, 14906, 3493, 264, 47970, 1648, 311, 1912, 35483, 505, 264, 3254, 10652, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 701, 3851, 4028, 5361, 10800, 1345, 31414, 287, 323, 362, 16675, 27866, 16067, 27317, 42985, 5825, 16967, 27223, 430, 2187, 499, 311, 3839, 1401, 17150, 927, 892, 13, 1472, 649, 9407, 311, 1684, 17150, 369, 264, 2728, 4261, 323, 31646, 1523, 1139, 264, 3230, 828, 1486, 311, 636, 264, 11917, 2007, 369, 430, 892, 4261, 2001, 420, 374, 5423, 26222, 369, 28803, 5788, 4819, 79016, 42985, 1101, 6276, 369, 4877, 323, 11408, 50284, 11, 902, 6276, 3932, 311, 1906, 2204, 11028, 315, 872, 8522, 449, 2204, 48316, 323, 1684, 1268, 814, 527, 16785, 3185, 14656, 25034, 2949, 1855, 9676, 13, 1115, 374, 11190, 369, 362, 16675, 7649, 4442, 304, 10137, 11, 1646, 11, 477, 57470, 8446, 885, 59724, 811, 16067, 42172, 811, 527, 264, 8147, 4668, 304, 23272, 42985, 430, 2187, 499, 311, 2804, 6299, 389, 35483, 304, 3221, 1972, 7394, 13, 1115, 649, 387, 1511, 311, 9651, 5573, 35483, 11, 3708, 1124, 311, 21917, 49194, 11, 477, 3708, 1124, 311, 30525, 3354, 7124, 459, 33762, 11, 5042, 3493, 264, 4141, 3044, 11, 264, 25936, 4478, 11, 323, 459, 1957, 311, 2804, 13, 20319, 811, 527, 8104, 11190, 369, 8863, 35483, 520, 5788, 5569, 5221, 31458, 16067, 8607, 445, 11237, 8522, 527, 7447, 65051, 11, 7438, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311], [57865, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 323, 89498, 701, 3851, 4028, 5361, 10800, 1196, 300, 420, 2199, 11190, 30, 21994, 25310, 5256, 5971, 47, 39906, 12705, 67247, 65911, 27866, 46067, 34868, 24374, 541, 25904, 76715, 64207, 6247, 27317, 42985, 27721, 31380, 12830, 14, 10155, 7816, 97552, 27798, 13857, 7388, 220, 2366, 19, 23272, 19368, 11, 4953, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-07 21:07:27,052 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-04-07 21:07:27,104 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f75d07cdd90>
2024-04-07 21:07:27,104 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f75d0a8b5c0> server_hostname='api.openai.com' timeout=None
2024-04-07 21:07:27,120 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f75d07cdc50>
2024-04-07 21:07:27,120 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-07 21:07:27,121 - DEBUG - send_request_headers.complete
2024-04-07 21:07:27,122 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-07 21:07:27,122 - DEBUG - send_request_body.complete
2024-04-07 21:07:27,122 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-07 21:07:27,468 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 07 Apr 2024 19:07:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'45'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'998580'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'85ms'), (b'x-request-id', b'req_1ce9eb9a8559909a5c0d54e216f3ec9d'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=3Jlu6Dsq8.jndk17NJXb3ZZlTFQwA2pUuVAfG8QJVaM-1712516847-1.0.1.1-n7XdVoZCMbCAP9P.oBHN_LuqY3IBknfi9qTNeV48Auiswy.IbLDRZKLvF019AUEJNT4Rr6HmZc6KzcPSEJCg6g; path=/; expires=Sun, 07-Apr-24 19:37:27 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=9n37stFyvhIikavzdFj8GC0zddDftB.lwXlFPwxfkno-1712516847310-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'870c4cf5a89982b3-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-07 21:07:27,469 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-07 21:07:27,469 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-07 21:07:27,640 - DEBUG - receive_response_body.complete
2024-04-07 21:07:27,640 - DEBUG - response_closed.started
2024-04-07 21:07:27,640 - DEBUG - response_closed.complete
2024-04-07 21:07:27,640 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-07 21:07:27,662 - DEBUG - Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU
2024-04-07 21:07:27,662 - INFO - Loading faiss with AVX2 support.
2024-04-07 21:07:27,705 - INFO - Successfully loaded faiss with AVX2 support.
2024-04-07 21:07:27,726 - DEBUG - Starting new HTTPS connection (1): api.smith.langchain.com:443
2024-04-07 21:07:27,813 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-07 21:07:28,034 - DEBUG - https://api.smith.langchain.com:443 "GET /info HTTP/1.1" 200 209
2024-04-07 21:07:28,052 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-07 21:07:28,298 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 21:07:32,923 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7f75d06d9ee0>, 'json_data': {'input': [[198, 40914, 11, 358, 4265, 387, 6380, 311, 1520, 0, 5810, 527, 1063, 5627, 430, 23272, 42985, 649, 7945, 449, 7649, 445, 11237, 8522, 1473, 16, 13, 6247, 10506, 25, 23272, 42985, 649, 3477, 701, 445, 11237, 2082, 323, 3493, 11302, 389, 1888, 12659, 11, 6103, 11, 323, 5789, 369, 16048, 627, 17, 13, 27866, 24686, 25, 23272, 42985, 649, 3493, 264, 7649, 12914, 369, 701, 445, 11237, 8522, 11, 2737, 5089, 7177, 11, 18052, 7177, 11, 323, 26586, 7177, 627, 18, 13, 21304, 27866, 25, 23272, 42985, 649, 2804, 5178, 7649, 389, 701, 445, 11237, 8522, 311, 10765, 11176, 35291, 14895, 323, 30536, 5178, 627, 19, 13, 8398, 27866, 25, 23272, 42985, 649, 6929, 4868, 7649, 389, 701, 445, 11237, 8522, 311, 10765, 52227, 323, 6106, 814, 527, 9966, 627, 20, 13, 79095, 27866, 25, 23272, 42985, 649, 1296, 701, 445, 11237, 8522, 4028, 2204, 22484, 11, 15771, 11, 323, 7766, 311, 6106, 25780, 382, 1271, 4048, 810, 922, 1521, 3600, 323, 1268, 23272, 42985, 649, 1520, 449, 7649, 445, 11237, 8522, 11, 499, 649, 2778, 369, 330, 27317, 42985, 445, 11237, 7649, 1, 477, 5552, 21513, 389, 264, 2778, 4817, 13, 1115, 1288, 3493, 499, 449, 2038, 389, 279, 2883, 596, 33935, 11, 8544, 505, 20097, 6444, 11, 323, 1162, 7978, 315, 6992, 445, 11237, 3851, 7649, 7224, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-07 21:07:32,924 - DEBUG - close.started
2024-04-07 21:07:32,924 - DEBUG - close.complete
2024-04-07 21:07:32,924 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-04-07 21:07:32,942 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f75d0725650>
2024-04-07 21:07:32,942 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f75d0a8b5c0> server_hostname='api.openai.com' timeout=None
2024-04-07 21:07:32,954 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f75d09a0250>
2024-04-07 21:07:32,954 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-07 21:07:32,954 - DEBUG - send_request_headers.complete
2024-04-07 21:07:32,954 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-07 21:07:32,954 - DEBUG - send_request_body.complete
2024-04-07 21:07:32,954 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-07 21:07:33,150 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 21:07:33,212 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 07 Apr 2024 19:07:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'27'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999778'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'13ms'), (b'x-request-id', b'req_74e6dc54491e33da5c3e51fcfd97c872'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'870c4d1a1a255f09-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-07 21:07:33,212 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-07 21:07:33,213 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-07 21:07:33,264 - DEBUG - receive_response_body.complete
2024-04-07 21:07:33,264 - DEBUG - response_closed.started
2024-04-07 21:07:33,264 - DEBUG - response_closed.complete
2024-04-07 21:07:33,265 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-07 21:07:33,506 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-07 21:07:33,515 - DEBUG - Closing Client.session
2024-04-07 21:07:33,592 - DEBUG - close.started
2024-04-07 21:07:33,592 - DEBUG - close.complete
2024-04-08 07:41:59,392 - INFO - Tests performed with ollama + llama2.
2024-04-08 07:41:59,393 - INFO - Model name: llama2
2024-04-08 07:41:59,393 - INFO - Using backend: ollama
2024-04-08 07:45:11,236 - INFO - Tests performed with ollama + llama2.
2024-04-08 07:45:11,237 - INFO - Model name: llama2
2024-04-08 07:45:11,237 - INFO - Using backend: ollama
2024-04-08 07:45:11,238 - INFO - fake_useragent not found, using default user agent.To get a realistic header for requests, `pip install fake_useragent`.
2024-04-08 07:45:11,323 - DEBUG - Starting new HTTPS connection (1): docs.smith.langchain.com:443
2024-04-08 07:45:11,638 - DEBUG - https://docs.smith.langchain.com:443 "GET /user_guide HTTP/1.1" 200 59674
2024-04-08 07:45:11,740 - DEBUG - Encoding detection: utf_8 is most likely the one.
2024-04-08 07:45:11,753 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-08 07:45:11,754 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-08 07:45:11,805 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-08 07:45:11,806 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-08 07:45:12,127 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7efc917ce0c0>, 'json_data': {'input': [[27317, 42985, 2724, 13002, 765, 11410, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985], [36234, 311, 1925, 2262, 9468, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985, 61791, 27317, 19368, 13325, 61791, 27317, 19368, 12438, 14, 10155, 61791, 27317, 42985, 5446, 61791, 6014, 11087, 311, 1883, 25310, 5256, 1502, 13002, 47, 39906, 12363, 12, 86021, 1305, 4628, 83463, 46067, 51803, 612, 20319, 811, 55715, 27636, 16617, 59482, 2239, 1502, 13002, 1966, 420, 2199, 27317, 42985, 2724, 13002, 27317, 42985, 374, 264, 5452, 369, 445, 11237, 3851, 4500, 11, 16967, 11, 323, 7649, 13, 763, 420, 8641, 11, 584, 4805, 11415, 279, 58321, 315, 88568, 23272, 42985, 11815, 323, 1268, 814, 5052, 1139, 1855, 6566, 315, 279, 3851, 4500, 48608, 13, 1226, 3987, 420, 690, 6179, 3932, 1268, 311, 1888, 29166, 420, 8147, 5452, 477, 3041, 1124, 2555, 311, 2980, 422, 814, 3207, 1120, 6041, 872, 11879, 43925, 67247, 16067, 12705, 67247, 445, 11237, 8522, 3629, 18065, 4062, 66196, 1990, 52032, 11, 1646, 4595, 11, 57470, 8446, 323, 1023, 5137, 627, 791, 5845, 311, 19019, 3619, 1268, 279, 1646, 374, 16785, 2001, 323, 7542, 1405, 433, 374, 22109, 2001, 374, 17235, 3062, 369, 420, 10474, 20967, 3252, 16067, 4599, 11469, 502, 445, 11237, 8522, 11, 584, 4284, 3515, 23272, 42985, 46515, 9147, 555, 1670, 627, 46, 728, 92455, 11, 433, 4536, 1431, 5995, 311, 1427, 520, 1475, 3254, 11917, 13, 4452, 11, 994, 2574, 733, 5076, 320, 276, 16907, 842, 1121, 11, 24746, 8479, 6471, 11, 29493, 1109, 3685, 11572, 11, 5190, 1109, 3685, 4037, 10648, 705, 433, 753, 9193, 11190, 311, 7542, 555, 3411, 1555, 279, 3851, 35483, 13, 23272, 42985, 6835, 2867, 24035, 323, 28803, 2038, 520, 1855, 3094, 315, 459, 445, 11237, 8668, 11, 3339, 433, 1790, 8831, 311, 10765, 323, 3789, 12, 1593, 4819, 627, 1687, 3493, 10068, 21568, 315, 6369, 6743, 11, 5865, 11, 323, 17622, 9477, 34032, 3475, 2638, 16067, 8142, 1690, 13707, 2103, 8448, 459, 2926, 2373, 315, 872, 3851, 3196, 389, 1054, 85, 24459, 12621, 9520, 584, 4070, 3970, 459, 7859, 1396, 315, 15009, 7411, 1212, 311, 11142, 264, 810, 1296, 16625, 5603, 13, 23272, 42985, 6276, 13707, 311, 1893, 30525, 11, 902, 527, 15661, 315, 11374, 323, 5905, 16674, 11, 323, 1005, 1521, 311, 1629, 7177, 389, 872, 445, 11237, 8522, 627, 9673, 1296, 5157, 649, 387, 23700, 304, 20155, 11, 3549, 389, 279, 11722, 11, 477, 35990, 505, 3851, 35483, 13, 23272, 42985, 1101, 3727, 433, 4228, 311, 1629, 2587, 56181, 320, 21704, 445, 11237, 323, 67709, 3196, 8, 311, 5573, 1296, 3135, 3034, 36642, 2806, 16067, 4599, 1760, 67247, 2204, 11028, 315, 701, 8522, 323, 3339, 4442, 11, 433, 753, 3062, 311, 1518, 3508, 477, 539, 499, 4070, 1239, 14715, 449, 5201, 311, 701, 2926, 1296, 5157, 627, 46, 728, 92455, 11, 4442, 304, 279, 10137, 11, 57470, 8446, 11, 477, 1646, 5873, 649, 617, 6908, 25127, 304, 14847, 9124, 555, 701, 3851, 627, 644, 2015, 311, 636, 264, 5647, 369, 902, 11678, 374, 16785, 2731, 11, 433, 753, 5505, 311, 387, 3025, 311, 1684, 3135, 369, 2204, 33483, 389, 279, 1890, 62823, 14737, 3185, 14656, 25034, 13, 1226, 4070, 29091, 17345, 304, 264, 1217, 22658, 12593, 1684, 369, 1296, 8640, 311, 3839, 323, 58681, 70880, 919, 304, 1296, 12483, 4028, 5361, 54862, 315, 701, 3851, 25469, 1993, 16067, 27317, 42985, 5825, 264, 42715, 4676, 369, 11295, 20140, 323, 66196, 627, 2028, 6276, 499, 311, 6288, 1296, 704, 2204, 52032, 323, 4211, 13, 1472, 649, 1825, 279, 42715, 505, 904, 10137, 477, 1646, 1629, 304, 701, 11917, 13], [11769, 42715, 1629, 374, 14042, 304, 279, 1887, 323, 649, 387, 1511, 311, 1893, 1296, 5157, 477, 9616, 449, 1023, 8640, 1823, 1955, 27866, 16067, 65911, 7649, 6276, 13707, 311, 6667, 810, 828, 389, 1268, 872, 445, 11237, 8522, 527, 16785, 304, 1972, 31184, 26350, 13, 763, 420, 10474, 11, 433, 753, 3062, 311, 2274, 459, 8830, 369, 279, 4595, 315, 11374, 279, 917, 374, 16785, 1664, 477, 31555, 389, 323, 1268, 7041, 433, 753, 15061, 1523, 304, 1884, 5157, 13, 11995, 11302, 4526, 323, 1629, 21917, 527, 9200, 369, 420, 29388, 13, 1115, 690, 1520, 304, 272, 2060, 315, 1296, 5157, 430, 649, 1520, 3839, 70880, 919, 73124, 782, 12760, 323, 4500, 315, 17392, 56181, 732, 2756, 1711, 37957, 16067, 4599, 28818, 701, 3851, 311, 459, 2926, 743, 315, 3932, 11, 433, 753, 3062, 311, 9762, 3823, 11302, 389, 279, 14847, 433, 753, 17843, 13, 1115, 8779, 4128, 6666, 311, 279, 1455, 7185, 8640, 323, 11415, 6964, 5157, 430, 527, 14718, 36033, 14847, 13, 23272, 42985, 6276, 499, 311, 15866, 11302, 12483, 311, 14042, 35483, 320, 14450, 92455, 11, 420, 374, 43770, 709, 311, 264, 11302, 3215, 304, 701, 917, 705, 1243, 4141, 389, 35483, 430, 617, 264, 3230, 11302, 4877, 323, 5573, 13, 362, 4279, 29388, 374, 311, 4141, 389, 35483, 430, 5371, 264, 8009, 1217, 11302, 5573, 11, 1243, 31646, 1523, 1139, 36033, 3585, 1701, 279, 11944, 11917, 1684, 8794, 1962, 1113, 1183, 2492, 16067, 27317, 42985, 1101, 11815, 11889, 8640, 311, 21917, 49194, 11, 902, 2187, 37142, 3046, 311, 15499, 25052, 7185, 35483, 323, 89498, 1124, 449, 5201, 311, 2204, 13186, 13, 1556, 1962, 3046, 649, 387, 5975, 82, 11, 25175, 11, 477, 1524, 3917, 5030, 11909, 13, 1115, 6276, 3932, 311, 2339, 70880, 919, 4028, 3062, 16865, 13186, 1943, 287, 51090, 311, 264, 40283, 16067, 2170, 701, 3851, 68711, 1555, 279, 13746, 7649, 10474, 11, 433, 596, 7718, 311, 3136, 26984, 828, 311, 46464, 323, 7417, 1202, 5178, 13, 23272, 42985, 20682, 499, 311, 923, 8640, 439, 10507, 311, 30525, 320, 1527, 2225, 279, 2447, 2199, 323, 2949, 459, 21917, 7325, 705, 24050, 701, 1296, 10401, 389, 1972, 31184, 26350, 13, 1115, 374, 264, 1401, 8935, 304, 3515, 701, 8558, 1887, 323, 701, 16865, 29901, 1887, 304, 279, 1890, 5452, 1087, 17158, 16067, 34, 2353, 989, 25052, 287, 1401, 828, 3585, 11, 7982, 29531, 287, 30525, 11, 37142, 1113, 35483, 11, 323, 39662, 1523, 1139, 3062, 828, 304, 11917, 1684, 527, 88568, 499, 4805, 1101, 1390, 311, 656, 3131, 701, 917, 13280, 5788, 67103, 2099, 11, 5423, 520, 279, 5788, 6566, 11, 433, 753, 16996, 311, 636, 264, 1579, 11852, 24131, 315, 3851, 5178, 449, 5201, 311, 40370, 11, 2853, 11, 323, 11302, 12483, 13, 1115, 26420, 430, 433, 596, 24944, 35946, 3135, 520, 5569, 8231, 1074, 56181, 323, 5113, 811, 2187, 499, 311, 1920, 323, 5573, 5788, 35483, 304, 3221, 1972, 7394, 1943, 17868, 11, 14906, 3493, 264, 47970, 1648, 311, 1912, 35483, 505, 264, 3254, 10652, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 701, 3851, 4028, 5361, 10800, 1345, 31414, 287, 323, 362, 16675, 27866, 16067, 27317, 42985, 5825, 16967, 27223, 430, 2187, 499, 311, 3839, 1401, 17150, 927, 892, 13, 1472, 649, 9407, 311, 1684, 17150, 369, 264, 2728, 4261, 323, 31646, 1523, 1139, 264, 3230, 828, 1486, 311, 636, 264, 11917, 2007, 369, 430, 892, 4261, 2001, 420, 374, 5423, 26222, 369, 28803, 5788, 4819, 79016, 42985, 1101, 6276, 369, 4877, 323, 11408, 50284, 11, 902, 6276, 3932, 311, 1906, 2204, 11028, 315, 872, 8522, 449, 2204, 48316, 323, 1684, 1268, 814, 527, 16785, 3185, 14656, 25034, 2949, 1855, 9676, 13, 1115, 374, 11190, 369, 362, 16675, 7649, 4442, 304, 10137, 11, 1646, 11, 477, 57470, 8446, 885, 59724, 811, 16067, 42172, 811, 527, 264, 8147, 4668, 304, 23272, 42985, 430, 2187, 499, 311, 2804, 6299, 389, 35483, 304, 3221, 1972, 7394, 13, 1115, 649, 387, 1511, 311, 9651, 5573, 35483, 11, 3708, 1124, 311, 21917, 49194, 11, 477, 3708, 1124, 311, 30525, 3354, 7124, 459, 33762, 11, 5042, 3493, 264, 4141, 3044, 11, 264, 25936, 4478, 11, 323, 459, 1957, 311, 2804, 13, 20319, 811, 527, 8104, 11190, 369, 8863, 35483, 520, 5788, 5569, 5221, 31458, 16067, 8607, 445, 11237, 8522, 527, 7447, 65051, 11, 7438, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311], [57865, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 323, 89498, 701, 3851, 4028, 5361, 10800, 1196, 300, 420, 2199, 11190, 30, 21994, 25310, 5256, 5971, 47, 39906, 12705, 67247, 65911, 27866, 46067, 34868, 24374, 541, 25904, 76715, 64207, 6247, 27317, 42985, 27721, 31380, 12830, 14, 10155, 7816, 97552, 27798, 13857, 7388, 220, 2366, 19, 23272, 19368, 11, 4953, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-08 07:45:12,131 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-04-08 07:45:12,180 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7efc91647990>
2024-04-08 07:45:12,180 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7efc918ff650> server_hostname='api.openai.com' timeout=None
2024-04-08 07:45:12,195 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7efc916478d0>
2024-04-08 07:45:12,196 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-08 07:45:12,197 - DEBUG - send_request_headers.complete
2024-04-08 07:45:12,197 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-08 07:45:12,197 - DEBUG - send_request_body.complete
2024-04-08 07:45:12,198 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-08 07:45:12,425 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 08 Apr 2024 05:45:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'43'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'998580'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'85ms'), (b'x-request-id', b'req_950dbdb4f1cbe979783afdaff3cc9781'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=oa4U9n4G62FVUvKIdg73dmCyaba.11W_nttiAwhGicg-1712555111-1.0.1.1-.Cr4LvlObpZ08SzcFAMn04WCNOjBoCJFvIizDcoI_s3IiXf1XP_DqfjnSNN9chqMWP8e3Ni5jS4Xdhb5dTZ5Ng; path=/; expires=Mon, 08-Apr-24 06:15:11 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=yggaEIEPc3WTUpivGdXpRMRc7qkbs5F4cNl_5hJ_BhA-1712555111828-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'870ff3278b772d59-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-08 07:45:12,426 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-08 07:45:12,426 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-08 07:45:12,713 - DEBUG - receive_response_body.complete
2024-04-08 07:45:12,713 - DEBUG - response_closed.started
2024-04-08 07:45:12,713 - DEBUG - response_closed.complete
2024-04-08 07:45:12,714 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-08 07:45:12,750 - DEBUG - Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU
2024-04-08 07:45:12,750 - INFO - Loading faiss with AVX2 support.
2024-04-08 07:45:12,786 - INFO - Successfully loaded faiss with AVX2 support.
2024-04-08 07:45:12,804 - DEBUG - Starting new HTTPS connection (1): api.smith.langchain.com:443
2024-04-08 07:45:13,093 - DEBUG - https://api.smith.langchain.com:443 "GET /info HTTP/1.1" 200 209
2024-04-08 07:45:13,285 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-08 07:45:13,304 - DEBUG - Closing Client.session
2024-04-08 07:45:13,423 - DEBUG - close.started
2024-04-08 07:45:13,424 - DEBUG - close.complete
2024-04-08 09:15:49,147 - INFO - Tests performed with ollama + llama2.
2024-04-08 09:15:49,152 - INFO - Model name: llama2
2024-04-08 09:15:49,153 - INFO - Using backend: ollama
2024-04-08 09:15:49,154 - INFO - fake_useragent not found, using default user agent.To get a realistic header for requests, `pip install fake_useragent`.
2024-04-08 09:15:49,269 - DEBUG - Starting new HTTPS connection (1): docs.smith.langchain.com:443
2024-04-08 09:21:12,632 - INFO - Tests performed with ollama + llama2.
2024-04-08 09:21:12,633 - INFO - Model name: llama2
2024-04-08 09:21:12,633 - INFO - Using backend: ollama
2024-04-08 09:21:12,634 - INFO - fake_useragent not found, using default user agent.To get a realistic header for requests, `pip install fake_useragent`.
2024-04-08 09:21:12,719 - DEBUG - Starting new HTTPS connection (1): docs.smith.langchain.com:443
2024-04-08 09:21:12,931 - DEBUG - https://docs.smith.langchain.com:443 "GET /user_guide HTTP/1.1" 200 59674
2024-04-08 09:21:13,021 - DEBUG - Encoding detection: utf_8 is most likely the one.
2024-04-08 09:21:13,038 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-08 09:21:13,038 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-08 09:21:13,088 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-08 09:21:13,088 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-08 09:21:13,142 - DEBUG - Starting new HTTPS connection (1): openaipublic.blob.core.windows.net:443
2024-04-08 09:21:13,959 - DEBUG - https://openaipublic.blob.core.windows.net:443 "GET /encodings/cl100k_base.tiktoken HTTP/1.1" 200 1681126
2024-04-08 09:21:15,949 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7fa3439c60c0>, 'json_data': {'input': [[27317, 42985, 2724, 13002, 765, 11410, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985], [36234, 311, 1925, 2262, 9468, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985, 61791, 27317, 19368, 13325, 61791, 27317, 19368, 12438, 14, 10155, 61791, 27317, 42985, 5446, 61791, 6014, 11087, 311, 1883, 25310, 5256, 1502, 13002, 47, 39906, 12363, 12, 86021, 1305, 4628, 83463, 46067, 51803, 612, 20319, 811, 55715, 27636, 16617, 59482, 2239, 1502, 13002, 1966, 420, 2199, 27317, 42985, 2724, 13002, 27317, 42985, 374, 264, 5452, 369, 445, 11237, 3851, 4500, 11, 16967, 11, 323, 7649, 13, 763, 420, 8641, 11, 584, 4805, 11415, 279, 58321, 315, 88568, 23272, 42985, 11815, 323, 1268, 814, 5052, 1139, 1855, 6566, 315, 279, 3851, 4500, 48608, 13, 1226, 3987, 420, 690, 6179, 3932, 1268, 311, 1888, 29166, 420, 8147, 5452, 477, 3041, 1124, 2555, 311, 2980, 422, 814, 3207, 1120, 6041, 872, 11879, 43925, 67247, 16067, 12705, 67247, 445, 11237, 8522, 3629, 18065, 4062, 66196, 1990, 52032, 11, 1646, 4595, 11, 57470, 8446, 323, 1023, 5137, 627, 791, 5845, 311, 19019, 3619, 1268, 279, 1646, 374, 16785, 2001, 323, 7542, 1405, 433, 374, 22109, 2001, 374, 17235, 3062, 369, 420, 10474, 20967, 3252, 16067, 4599, 11469, 502, 445, 11237, 8522, 11, 584, 4284, 3515, 23272, 42985, 46515, 9147, 555, 1670, 627, 46, 728, 92455, 11, 433, 4536, 1431, 5995, 311, 1427, 520, 1475, 3254, 11917, 13, 4452, 11, 994, 2574, 733, 5076, 320, 276, 16907, 842, 1121, 11, 24746, 8479, 6471, 11, 29493, 1109, 3685, 11572, 11, 5190, 1109, 3685, 4037, 10648, 705, 433, 753, 9193, 11190, 311, 7542, 555, 3411, 1555, 279, 3851, 35483, 13, 23272, 42985, 6835, 2867, 24035, 323, 28803, 2038, 520, 1855, 3094, 315, 459, 445, 11237, 8668, 11, 3339, 433, 1790, 8831, 311, 10765, 323, 3789, 12, 1593, 4819, 627, 1687, 3493, 10068, 21568, 315, 6369, 6743, 11, 5865, 11, 323, 17622, 9477, 34032, 3475, 2638, 16067, 8142, 1690, 13707, 2103, 8448, 459, 2926, 2373, 315, 872, 3851, 3196, 389, 1054, 85, 24459, 12621, 9520, 584, 4070, 3970, 459, 7859, 1396, 315, 15009, 7411, 1212, 311, 11142, 264, 810, 1296, 16625, 5603, 13, 23272, 42985, 6276, 13707, 311, 1893, 30525, 11, 902, 527, 15661, 315, 11374, 323, 5905, 16674, 11, 323, 1005, 1521, 311, 1629, 7177, 389, 872, 445, 11237, 8522, 627, 9673, 1296, 5157, 649, 387, 23700, 304, 20155, 11, 3549, 389, 279, 11722, 11, 477, 35990, 505, 3851, 35483, 13, 23272, 42985, 1101, 3727, 433, 4228, 311, 1629, 2587, 56181, 320, 21704, 445, 11237, 323, 67709, 3196, 8, 311, 5573, 1296, 3135, 3034, 36642, 2806, 16067, 4599, 1760, 67247, 2204, 11028, 315, 701, 8522, 323, 3339, 4442, 11, 433, 753, 3062, 311, 1518, 3508, 477, 539, 499, 4070, 1239, 14715, 449, 5201, 311, 701, 2926, 1296, 5157, 627, 46, 728, 92455, 11, 4442, 304, 279, 10137, 11, 57470, 8446, 11, 477, 1646, 5873, 649, 617, 6908, 25127, 304, 14847, 9124, 555, 701, 3851, 627, 644, 2015, 311, 636, 264, 5647, 369, 902, 11678, 374, 16785, 2731, 11, 433, 753, 5505, 311, 387, 3025, 311, 1684, 3135, 369, 2204, 33483, 389, 279, 1890, 62823, 14737, 3185, 14656, 25034, 13, 1226, 4070, 29091, 17345, 304, 264, 1217, 22658, 12593, 1684, 369, 1296, 8640, 311, 3839, 323, 58681, 70880, 919, 304, 1296, 12483, 4028, 5361, 54862, 315, 701, 3851, 25469, 1993, 16067, 27317, 42985, 5825, 264, 42715, 4676, 369, 11295, 20140, 323, 66196, 627, 2028, 6276, 499, 311, 6288, 1296, 704, 2204, 52032, 323, 4211, 13, 1472, 649, 1825, 279, 42715, 505, 904, 10137, 477, 1646, 1629, 304, 701, 11917, 13], [11769, 42715, 1629, 374, 14042, 304, 279, 1887, 323, 649, 387, 1511, 311, 1893, 1296, 5157, 477, 9616, 449, 1023, 8640, 1823, 1955, 27866, 16067, 65911, 7649, 6276, 13707, 311, 6667, 810, 828, 389, 1268, 872, 445, 11237, 8522, 527, 16785, 304, 1972, 31184, 26350, 13, 763, 420, 10474, 11, 433, 753, 3062, 311, 2274, 459, 8830, 369, 279, 4595, 315, 11374, 279, 917, 374, 16785, 1664, 477, 31555, 389, 323, 1268, 7041, 433, 753, 15061, 1523, 304, 1884, 5157, 13, 11995, 11302, 4526, 323, 1629, 21917, 527, 9200, 369, 420, 29388, 13, 1115, 690, 1520, 304, 272, 2060, 315, 1296, 5157, 430, 649, 1520, 3839, 70880, 919, 73124, 782, 12760, 323, 4500, 315, 17392, 56181, 732, 2756, 1711, 37957, 16067, 4599, 28818, 701, 3851, 311, 459, 2926, 743, 315, 3932, 11, 433, 753, 3062, 311, 9762, 3823, 11302, 389, 279, 14847, 433, 753, 17843, 13, 1115, 8779, 4128, 6666, 311, 279, 1455, 7185, 8640, 323, 11415, 6964, 5157, 430, 527, 14718, 36033, 14847, 13, 23272, 42985, 6276, 499, 311, 15866, 11302, 12483, 311, 14042, 35483, 320, 14450, 92455, 11, 420, 374, 43770, 709, 311, 264, 11302, 3215, 304, 701, 917, 705, 1243, 4141, 389, 35483, 430, 617, 264, 3230, 11302, 4877, 323, 5573, 13, 362, 4279, 29388, 374, 311, 4141, 389, 35483, 430, 5371, 264, 8009, 1217, 11302, 5573, 11, 1243, 31646, 1523, 1139, 36033, 3585, 1701, 279, 11944, 11917, 1684, 8794, 1962, 1113, 1183, 2492, 16067, 27317, 42985, 1101, 11815, 11889, 8640, 311, 21917, 49194, 11, 902, 2187, 37142, 3046, 311, 15499, 25052, 7185, 35483, 323, 89498, 1124, 449, 5201, 311, 2204, 13186, 13, 1556, 1962, 3046, 649, 387, 5975, 82, 11, 25175, 11, 477, 1524, 3917, 5030, 11909, 13, 1115, 6276, 3932, 311, 2339, 70880, 919, 4028, 3062, 16865, 13186, 1943, 287, 51090, 311, 264, 40283, 16067, 2170, 701, 3851, 68711, 1555, 279, 13746, 7649, 10474, 11, 433, 596, 7718, 311, 3136, 26984, 828, 311, 46464, 323, 7417, 1202, 5178, 13, 23272, 42985, 20682, 499, 311, 923, 8640, 439, 10507, 311, 30525, 320, 1527, 2225, 279, 2447, 2199, 323, 2949, 459, 21917, 7325, 705, 24050, 701, 1296, 10401, 389, 1972, 31184, 26350, 13, 1115, 374, 264, 1401, 8935, 304, 3515, 701, 8558, 1887, 323, 701, 16865, 29901, 1887, 304, 279, 1890, 5452, 1087, 17158, 16067, 34, 2353, 989, 25052, 287, 1401, 828, 3585, 11, 7982, 29531, 287, 30525, 11, 37142, 1113, 35483, 11, 323, 39662, 1523, 1139, 3062, 828, 304, 11917, 1684, 527, 88568, 499, 4805, 1101, 1390, 311, 656, 3131, 701, 917, 13280, 5788, 67103, 2099, 11, 5423, 520, 279, 5788, 6566, 11, 433, 753, 16996, 311, 636, 264, 1579, 11852, 24131, 315, 3851, 5178, 449, 5201, 311, 40370, 11, 2853, 11, 323, 11302, 12483, 13, 1115, 26420, 430, 433, 596, 24944, 35946, 3135, 520, 5569, 8231, 1074, 56181, 323, 5113, 811, 2187, 499, 311, 1920, 323, 5573, 5788, 35483, 304, 3221, 1972, 7394, 1943, 17868, 11, 14906, 3493, 264, 47970, 1648, 311, 1912, 35483, 505, 264, 3254, 10652, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 701, 3851, 4028, 5361, 10800, 1345, 31414, 287, 323, 362, 16675, 27866, 16067, 27317, 42985, 5825, 16967, 27223, 430, 2187, 499, 311, 3839, 1401, 17150, 927, 892, 13, 1472, 649, 9407, 311, 1684, 17150, 369, 264, 2728, 4261, 323, 31646, 1523, 1139, 264, 3230, 828, 1486, 311, 636, 264, 11917, 2007, 369, 430, 892, 4261, 2001, 420, 374, 5423, 26222, 369, 28803, 5788, 4819, 79016, 42985, 1101, 6276, 369, 4877, 323, 11408, 50284, 11, 902, 6276, 3932, 311, 1906, 2204, 11028, 315, 872, 8522, 449, 2204, 48316, 323, 1684, 1268, 814, 527, 16785, 3185, 14656, 25034, 2949, 1855, 9676, 13, 1115, 374, 11190, 369, 362, 16675, 7649, 4442, 304, 10137, 11, 1646, 11, 477, 57470, 8446, 885, 59724, 811, 16067, 42172, 811, 527, 264, 8147, 4668, 304, 23272, 42985, 430, 2187, 499, 311, 2804, 6299, 389, 35483, 304, 3221, 1972, 7394, 13, 1115, 649, 387, 1511, 311, 9651, 5573, 35483, 11, 3708, 1124, 311, 21917, 49194, 11, 477, 3708, 1124, 311, 30525, 3354, 7124, 459, 33762, 11, 5042, 3493, 264, 4141, 3044, 11, 264, 25936, 4478, 11, 323, 459, 1957, 311, 2804, 13, 20319, 811, 527, 8104, 11190, 369, 8863, 35483, 520, 5788, 5569, 5221, 31458, 16067, 8607, 445, 11237, 8522, 527, 7447, 65051, 11, 7438, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311], [57865, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 323, 89498, 701, 3851, 4028, 5361, 10800, 1196, 300, 420, 2199, 11190, 30, 21994, 25310, 5256, 5971, 47, 39906, 12705, 67247, 65911, 27866, 46067, 34868, 24374, 541, 25904, 76715, 64207, 6247, 27317, 42985, 27721, 31380, 12830, 14, 10155, 7816, 97552, 27798, 13857, 7388, 220, 2366, 19, 23272, 19368, 11, 4953, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-08 09:21:15,954 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-04-08 09:21:16,058 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fa343a12e50>
2024-04-08 09:21:16,059 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7fa343af7650> server_hostname='api.openai.com' timeout=None
2024-04-08 09:21:16,091 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fa343a12f50>
2024-04-08 09:21:16,092 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-08 09:21:16,093 - DEBUG - send_request_headers.complete
2024-04-08 09:21:16,093 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-08 09:21:16,093 - DEBUG - send_request_body.complete
2024-04-08 09:21:16,094 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-08 09:21:16,379 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 08 Apr 2024 07:21:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'45'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'998580'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'85ms'), (b'x-request-id', b'req_49658368ed6e6720094102ba0b96aab3'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=VI0tZnVPfQLACzJzgORjqmTZLp64j7zVWQZwUHEIZ_M-1712560875-1.0.1.1-kUDgznBBOF6Av0P6cMllBe7FXa6OOt495EkHLKJCP1YHZlBiVIncQY3znBen3kHYhEAzQmzCbNVVc1FnADverQ; path=/; expires=Mon, 08-Apr-24 07:51:15 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=penEImMClR3wqkzSpW56vZI3M2s3lAe9vStaQByjVcw-1712560875340-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'87107fdd4dd40a24-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-08 09:21:16,382 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-08 09:21:16,382 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-08 09:21:16,507 - DEBUG - receive_response_body.complete
2024-04-08 09:21:16,507 - DEBUG - response_closed.started
2024-04-08 09:21:16,508 - DEBUG - response_closed.complete
2024-04-08 09:21:16,508 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-08 09:21:16,549 - DEBUG - Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU
2024-04-08 09:21:16,549 - INFO - Loading faiss with AVX2 support.
2024-04-08 09:21:16,651 - INFO - Successfully loaded faiss with AVX2 support.
2024-04-08 09:21:16,721 - DEBUG - Starting new HTTPS connection (1): api.smith.langchain.com:443
2024-04-08 09:21:17,068 - DEBUG - https://api.smith.langchain.com:443 "GET /info HTTP/1.1" 200 209
2024-04-08 09:21:17,304 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-08 09:21:17,309 - DEBUG - Closing Client.session
2024-04-08 09:21:17,427 - DEBUG - close.started
2024-04-08 09:21:17,427 - DEBUG - close.complete
2024-04-08 09:28:48,774 - INFO - Tests performed with ollama + llama2.
2024-04-08 09:28:48,776 - INFO - Model name: llama2
2024-04-08 09:28:48,776 - INFO - Using backend: ollama
2024-04-08 09:28:48,777 - INFO - fake_useragent not found, using default user agent.To get a realistic header for requests, `pip install fake_useragent`.
2024-04-08 09:28:48,862 - DEBUG - Starting new HTTPS connection (1): docs.smith.langchain.com:443
2024-04-08 09:28:49,031 - DEBUG - https://docs.smith.langchain.com:443 "GET /user_guide HTTP/1.1" 200 59674
2024-04-08 09:28:49,109 - DEBUG - Encoding detection: utf_8 is most likely the one.
2024-04-08 09:28:49,146 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-08 09:28:49,147 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-08 09:28:49,201 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-08 09:28:49,202 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-08 09:28:49,525 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7fbfee822160>, 'json_data': {'input': [[27317, 42985, 2724, 13002, 765, 11410, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985], [36234, 311, 1925, 2262, 9468, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985, 61791, 27317, 19368, 13325, 61791, 27317, 19368, 12438, 14, 10155, 61791, 27317, 42985, 5446, 61791, 6014, 11087, 311, 1883, 25310, 5256, 1502, 13002, 47, 39906, 12363, 12, 86021, 1305, 4628, 83463, 46067, 51803, 612, 20319, 811, 55715, 27636, 16617, 59482, 2239, 1502, 13002, 1966, 420, 2199, 27317, 42985, 2724, 13002, 27317, 42985, 374, 264, 5452, 369, 445, 11237, 3851, 4500, 11, 16967, 11, 323, 7649, 13, 763, 420, 8641, 11, 584, 4805, 11415, 279, 58321, 315, 88568, 23272, 42985, 11815, 323, 1268, 814, 5052, 1139, 1855, 6566, 315, 279, 3851, 4500, 48608, 13, 1226, 3987, 420, 690, 6179, 3932, 1268, 311, 1888, 29166, 420, 8147, 5452, 477, 3041, 1124, 2555, 311, 2980, 422, 814, 3207, 1120, 6041, 872, 11879, 43925, 67247, 16067, 12705, 67247, 445, 11237, 8522, 3629, 18065, 4062, 66196, 1990, 52032, 11, 1646, 4595, 11, 57470, 8446, 323, 1023, 5137, 627, 791, 5845, 311, 19019, 3619, 1268, 279, 1646, 374, 16785, 2001, 323, 7542, 1405, 433, 374, 22109, 2001, 374, 17235, 3062, 369, 420, 10474, 20967, 3252, 16067, 4599, 11469, 502, 445, 11237, 8522, 11, 584, 4284, 3515, 23272, 42985, 46515, 9147, 555, 1670, 627, 46, 728, 92455, 11, 433, 4536, 1431, 5995, 311, 1427, 520, 1475, 3254, 11917, 13, 4452, 11, 994, 2574, 733, 5076, 320, 276, 16907, 842, 1121, 11, 24746, 8479, 6471, 11, 29493, 1109, 3685, 11572, 11, 5190, 1109, 3685, 4037, 10648, 705, 433, 753, 9193, 11190, 311, 7542, 555, 3411, 1555, 279, 3851, 35483, 13, 23272, 42985, 6835, 2867, 24035, 323, 28803, 2038, 520, 1855, 3094, 315, 459, 445, 11237, 8668, 11, 3339, 433, 1790, 8831, 311, 10765, 323, 3789, 12, 1593, 4819, 627, 1687, 3493, 10068, 21568, 315, 6369, 6743, 11, 5865, 11, 323, 17622, 9477, 34032, 3475, 2638, 16067, 8142, 1690, 13707, 2103, 8448, 459, 2926, 2373, 315, 872, 3851, 3196, 389, 1054, 85, 24459, 12621, 9520, 584, 4070, 3970, 459, 7859, 1396, 315, 15009, 7411, 1212, 311, 11142, 264, 810, 1296, 16625, 5603, 13, 23272, 42985, 6276, 13707, 311, 1893, 30525, 11, 902, 527, 15661, 315, 11374, 323, 5905, 16674, 11, 323, 1005, 1521, 311, 1629, 7177, 389, 872, 445, 11237, 8522, 627, 9673, 1296, 5157, 649, 387, 23700, 304, 20155, 11, 3549, 389, 279, 11722, 11, 477, 35990, 505, 3851, 35483, 13, 23272, 42985, 1101, 3727, 433, 4228, 311, 1629, 2587, 56181, 320, 21704, 445, 11237, 323, 67709, 3196, 8, 311, 5573, 1296, 3135, 3034, 36642, 2806, 16067, 4599, 1760, 67247, 2204, 11028, 315, 701, 8522, 323, 3339, 4442, 11, 433, 753, 3062, 311, 1518, 3508, 477, 539, 499, 4070, 1239, 14715, 449, 5201, 311, 701, 2926, 1296, 5157, 627, 46, 728, 92455, 11, 4442, 304, 279, 10137, 11, 57470, 8446, 11, 477, 1646, 5873, 649, 617, 6908, 25127, 304, 14847, 9124, 555, 701, 3851, 627, 644, 2015, 311, 636, 264, 5647, 369, 902, 11678, 374, 16785, 2731, 11, 433, 753, 5505, 311, 387, 3025, 311, 1684, 3135, 369, 2204, 33483, 389, 279, 1890, 62823, 14737, 3185, 14656, 25034, 13, 1226, 4070, 29091, 17345, 304, 264, 1217, 22658, 12593, 1684, 369, 1296, 8640, 311, 3839, 323, 58681, 70880, 919, 304, 1296, 12483, 4028, 5361, 54862, 315, 701, 3851, 25469, 1993, 16067, 27317, 42985, 5825, 264, 42715, 4676, 369, 11295, 20140, 323, 66196, 627, 2028, 6276, 499, 311, 6288, 1296, 704, 2204, 52032, 323, 4211, 13, 1472, 649, 1825, 279, 42715, 505, 904, 10137, 477, 1646, 1629, 304, 701, 11917, 13], [11769, 42715, 1629, 374, 14042, 304, 279, 1887, 323, 649, 387, 1511, 311, 1893, 1296, 5157, 477, 9616, 449, 1023, 8640, 1823, 1955, 27866, 16067, 65911, 7649, 6276, 13707, 311, 6667, 810, 828, 389, 1268, 872, 445, 11237, 8522, 527, 16785, 304, 1972, 31184, 26350, 13, 763, 420, 10474, 11, 433, 753, 3062, 311, 2274, 459, 8830, 369, 279, 4595, 315, 11374, 279, 917, 374, 16785, 1664, 477, 31555, 389, 323, 1268, 7041, 433, 753, 15061, 1523, 304, 1884, 5157, 13, 11995, 11302, 4526, 323, 1629, 21917, 527, 9200, 369, 420, 29388, 13, 1115, 690, 1520, 304, 272, 2060, 315, 1296, 5157, 430, 649, 1520, 3839, 70880, 919, 73124, 782, 12760, 323, 4500, 315, 17392, 56181, 732, 2756, 1711, 37957, 16067, 4599, 28818, 701, 3851, 311, 459, 2926, 743, 315, 3932, 11, 433, 753, 3062, 311, 9762, 3823, 11302, 389, 279, 14847, 433, 753, 17843, 13, 1115, 8779, 4128, 6666, 311, 279, 1455, 7185, 8640, 323, 11415, 6964, 5157, 430, 527, 14718, 36033, 14847, 13, 23272, 42985, 6276, 499, 311, 15866, 11302, 12483, 311, 14042, 35483, 320, 14450, 92455, 11, 420, 374, 43770, 709, 311, 264, 11302, 3215, 304, 701, 917, 705, 1243, 4141, 389, 35483, 430, 617, 264, 3230, 11302, 4877, 323, 5573, 13, 362, 4279, 29388, 374, 311, 4141, 389, 35483, 430, 5371, 264, 8009, 1217, 11302, 5573, 11, 1243, 31646, 1523, 1139, 36033, 3585, 1701, 279, 11944, 11917, 1684, 8794, 1962, 1113, 1183, 2492, 16067, 27317, 42985, 1101, 11815, 11889, 8640, 311, 21917, 49194, 11, 902, 2187, 37142, 3046, 311, 15499, 25052, 7185, 35483, 323, 89498, 1124, 449, 5201, 311, 2204, 13186, 13, 1556, 1962, 3046, 649, 387, 5975, 82, 11, 25175, 11, 477, 1524, 3917, 5030, 11909, 13, 1115, 6276, 3932, 311, 2339, 70880, 919, 4028, 3062, 16865, 13186, 1943, 287, 51090, 311, 264, 40283, 16067, 2170, 701, 3851, 68711, 1555, 279, 13746, 7649, 10474, 11, 433, 596, 7718, 311, 3136, 26984, 828, 311, 46464, 323, 7417, 1202, 5178, 13, 23272, 42985, 20682, 499, 311, 923, 8640, 439, 10507, 311, 30525, 320, 1527, 2225, 279, 2447, 2199, 323, 2949, 459, 21917, 7325, 705, 24050, 701, 1296, 10401, 389, 1972, 31184, 26350, 13, 1115, 374, 264, 1401, 8935, 304, 3515, 701, 8558, 1887, 323, 701, 16865, 29901, 1887, 304, 279, 1890, 5452, 1087, 17158, 16067, 34, 2353, 989, 25052, 287, 1401, 828, 3585, 11, 7982, 29531, 287, 30525, 11, 37142, 1113, 35483, 11, 323, 39662, 1523, 1139, 3062, 828, 304, 11917, 1684, 527, 88568, 499, 4805, 1101, 1390, 311, 656, 3131, 701, 917, 13280, 5788, 67103, 2099, 11, 5423, 520, 279, 5788, 6566, 11, 433, 753, 16996, 311, 636, 264, 1579, 11852, 24131, 315, 3851, 5178, 449, 5201, 311, 40370, 11, 2853, 11, 323, 11302, 12483, 13, 1115, 26420, 430, 433, 596, 24944, 35946, 3135, 520, 5569, 8231, 1074, 56181, 323, 5113, 811, 2187, 499, 311, 1920, 323, 5573, 5788, 35483, 304, 3221, 1972, 7394, 1943, 17868, 11, 14906, 3493, 264, 47970, 1648, 311, 1912, 35483, 505, 264, 3254, 10652, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 701, 3851, 4028, 5361, 10800, 1345, 31414, 287, 323, 362, 16675, 27866, 16067, 27317, 42985, 5825, 16967, 27223, 430, 2187, 499, 311, 3839, 1401, 17150, 927, 892, 13, 1472, 649, 9407, 311, 1684, 17150, 369, 264, 2728, 4261, 323, 31646, 1523, 1139, 264, 3230, 828, 1486, 311, 636, 264, 11917, 2007, 369, 430, 892, 4261, 2001, 420, 374, 5423, 26222, 369, 28803, 5788, 4819, 79016, 42985, 1101, 6276, 369, 4877, 323, 11408, 50284, 11, 902, 6276, 3932, 311, 1906, 2204, 11028, 315, 872, 8522, 449, 2204, 48316, 323, 1684, 1268, 814, 527, 16785, 3185, 14656, 25034, 2949, 1855, 9676, 13, 1115, 374, 11190, 369, 362, 16675, 7649, 4442, 304, 10137, 11, 1646, 11, 477, 57470, 8446, 885, 59724, 811, 16067, 42172, 811, 527, 264, 8147, 4668, 304, 23272, 42985, 430, 2187, 499, 311, 2804, 6299, 389, 35483, 304, 3221, 1972, 7394, 13, 1115, 649, 387, 1511, 311, 9651, 5573, 35483, 11, 3708, 1124, 311, 21917, 49194, 11, 477, 3708, 1124, 311, 30525, 3354, 7124, 459, 33762, 11, 5042, 3493, 264, 4141, 3044, 11, 264, 25936, 4478, 11, 323, 459, 1957, 311, 2804, 13, 20319, 811, 527, 8104, 11190, 369, 8863, 35483, 520, 5788, 5569, 5221, 31458, 16067, 8607, 445, 11237, 8522, 527, 7447, 65051, 11, 7438, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311], [57865, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 323, 89498, 701, 3851, 4028, 5361, 10800, 1196, 300, 420, 2199, 11190, 30, 21994, 25310, 5256, 5971, 47, 39906, 12705, 67247, 65911, 27866, 46067, 34868, 24374, 541, 25904, 76715, 64207, 6247, 27317, 42985, 27721, 31380, 12830, 14, 10155, 7816, 97552, 27798, 13857, 7388, 220, 2366, 19, 23272, 19368, 11, 4953, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-08 09:28:49,529 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-04-08 09:28:49,618 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fbfee8692d0>
2024-04-08 09:28:49,619 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7fbfee9535c0> server_hostname='api.openai.com' timeout=None
2024-04-08 09:28:49,652 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fbfee869bd0>
2024-04-08 09:28:49,652 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-08 09:28:49,653 - DEBUG - send_request_headers.complete
2024-04-08 09:28:49,654 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-08 09:28:49,654 - DEBUG - send_request_body.complete
2024-04-08 09:28:49,654 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-08 09:28:49,911 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 08 Apr 2024 07:28:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'58'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'998580'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'85ms'), (b'x-request-id', b'req_e9f07f9eb5a9d57dfb153bf69a4e5d09'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=HrZOdeqm8yxs_HmvOEvDSJbYSxXkLN90EPHu1IOmgOw-1712561328-1.0.1.1-RbJ_cW_zqCqBaEuSx34qFfHC7m0e5XZUiQcAtHWzDiax782o13HAQ8ALSd4WR4cjBxM_hnulzpeEttyTddb0Gw; path=/; expires=Mon, 08-Apr-24 07:58:48 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=T0wDqRkZ4lW6vq6.ZegUK618t1WbJhgspZUk07fjSaY-1712561328879-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'87108af01cb91600-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-08 09:28:49,914 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-08 09:28:49,914 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-08 09:28:50,041 - DEBUG - receive_response_body.complete
2024-04-08 09:28:50,041 - DEBUG - response_closed.started
2024-04-08 09:28:50,041 - DEBUG - response_closed.complete
2024-04-08 09:28:50,042 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-08 09:28:50,061 - DEBUG - Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU
2024-04-08 09:28:50,061 - INFO - Loading faiss with AVX2 support.
2024-04-08 09:28:50,087 - INFO - Successfully loaded faiss with AVX2 support.
2024-04-08 09:28:50,098 - DEBUG - Starting new HTTPS connection (1): api.smith.langchain.com:443
2024-04-08 09:28:50,132 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-08 09:28:50,431 - DEBUG - https://api.smith.langchain.com:443 "GET /info HTTP/1.1" 200 209
2024-04-08 09:28:50,685 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-08 09:29:00,498 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-08 09:29:07,184 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7fc00f9096c0>, 'json_data': {'input': [[198, 23371, 11, 358, 4265, 387, 6380, 311, 1520, 0, 5810, 527, 1063, 5627, 430, 23272, 42985, 649, 7945, 449, 7649, 445, 11237, 8522, 1473, 16, 13, 3146, 55381, 11688, 29225, 320, 45, 12852, 33395, 25, 23272, 42985, 706, 11084, 452, 12852, 17357, 430, 649, 24564, 323, 3619, 279, 4221, 1511, 304, 445, 11237, 8522, 13, 1115, 649, 1520, 10765, 4754, 6103, 477, 92922, 304, 279, 3851, 11, 1778, 439, 32528, 477, 20047, 21294, 11, 323, 4284, 18637, 627, 17, 13, 3146, 68744, 811, 369, 16048, 96618, 20817, 389, 279, 6492, 315, 279, 445, 11237, 3851, 11, 23272, 42985, 649, 3493, 19075, 369, 18899, 279, 3851, 596, 32373, 11, 78925, 11, 323, 8244, 4367, 13, 1115, 649, 1520, 32177, 1304, 872, 8522, 810, 29722, 323, 7524, 627, 18, 13, 3146, 34587, 311, 4528, 8522, 96618, 23272, 42985, 649, 24564, 264, 7029, 2134, 315, 445, 11237, 8522, 323, 3493, 26793, 1139, 1148, 3727, 264, 3831, 3851, 13, 1115, 649, 1520, 32177, 3619, 1148, 814, 1205, 311, 11415, 304, 872, 1866, 3851, 311, 2559, 704, 323, 5376, 872, 17393, 315, 1694, 11928, 627, 19, 13, 3146, 42172, 660, 20413, 96618, 23272, 42985, 649, 1005, 1202, 452, 12852, 26249, 311, 9651, 5573, 445, 11237, 8522, 3196, 389, 5370, 13186, 11, 1778, 439, 32373, 11, 78925, 11, 323, 41961, 311, 279, 2068, 13, 1115, 649, 1520, 32177, 636, 459, 14247, 5647, 315, 1268, 814, 527, 3815, 304, 279, 3851, 1920, 382, 1271, 1505, 810, 2038, 922, 23272, 42985, 596, 17357, 11, 499, 649, 1456, 15389, 369, 21513, 1093, 330, 4178, 44, 3851, 6492, 1359, 330, 45, 12852, 6108, 3851, 3477, 1359, 477, 330, 15836, 32505, 3851, 20413, 1210, 1472, 1253, 1101, 1390, 311, 1817, 704, 23272, 42985, 596, 3997, 477, 5662, 704, 311, 872, 6130, 1862, 2128, 369, 810, 3649, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-08 09:29:07,185 - DEBUG - close.started
2024-04-08 09:29:07,186 - DEBUG - close.complete
2024-04-08 09:29:07,186 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-04-08 09:29:07,264 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fbfee59e790>
2024-04-08 09:29:07,264 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7fbfee9535c0> server_hostname='api.openai.com' timeout=None
2024-04-08 09:29:07,319 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fbfedf35f90>
2024-04-08 09:29:07,319 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-08 09:29:07,320 - DEBUG - send_request_headers.complete
2024-04-08 09:29:07,320 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-08 09:29:07,321 - DEBUG - send_request_body.complete
2024-04-08 09:29:07,321 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-08 09:29:07,448 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-08 09:29:07,609 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 08 Apr 2024 07:29:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'29'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999702'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'17ms'), (b'x-request-id', b'req_1fadc833bd77b9afbe2ce56717ef4167'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'87108b5e7be79920-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-08 09:29:07,611 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-08 09:29:07,611 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-08 09:29:07,616 - DEBUG - receive_response_body.complete
2024-04-08 09:29:07,616 - DEBUG - response_closed.started
2024-04-08 09:29:07,616 - DEBUG - response_closed.complete
2024-04-08 09:29:07,617 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-08 09:29:07,800 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-08 09:29:07,823 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-08 09:29:08,005 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-08 09:29:08,264 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-08 09:29:12,651 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7fbfee8218a0>, 'json_data': {'input': [[198, 40914, 11, 1618, 527, 1063, 2778, 20126, 430, 499, 1436, 1005, 311, 1505, 2038, 9959, 311, 701, 10652, 449, 23272, 42985, 1473, 16, 13, 330, 4178, 44, 3851, 7649, 3600, 1, 482, 1115, 3319, 690, 1520, 499, 1505, 5220, 477, 5070, 430, 3085, 7649, 3600, 369, 445, 11237, 8522, 627, 17, 13, 330, 27317, 42985, 3477, 1, 482, 1115, 3319, 690, 1520, 499, 1505, 8544, 323, 18594, 315, 23272, 42985, 596, 3600, 11, 902, 649, 3041, 499, 459, 4623, 315, 872, 17444, 323, 4367, 627, 18, 13, 330, 4178, 44, 3851, 53673, 1, 482, 1115, 3319, 690, 1520, 499, 1505, 264, 1160, 315, 2574, 311, 2980, 994, 7649, 701, 445, 11237, 8522, 11, 902, 649, 387, 5505, 369, 23391, 430, 499, 617, 9960, 682, 279, 5995, 13878, 627, 19, 13, 330, 27317, 42985, 21913, 1, 482, 1115, 3319, 690, 1520, 499, 1505, 2038, 389, 23272, 42985, 596, 21913, 369, 872, 3600, 11, 902, 649, 1520, 499, 8417, 422, 872, 3600, 527, 2949, 701, 8199, 627, 20, 13, 330, 4178, 44, 3851, 7649, 10631, 1, 482, 1115, 3319, 690, 1520, 499, 1505, 10631, 323, 9650, 389, 1268, 311, 10772, 701, 445, 11237, 8522, 369, 7649, 11, 902, 649, 5376, 701, 17393, 315, 2450, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-08 09:29:12,652 - DEBUG - close.started
2024-04-08 09:29:12,652 - DEBUG - close.complete
2024-04-08 09:29:12,652 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-04-08 09:29:12,719 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fbfee5aae90>
2024-04-08 09:29:12,720 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7fbfee9535c0> server_hostname='api.openai.com' timeout=None
2024-04-08 09:29:12,754 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fbfee67ec50>
2024-04-08 09:29:12,754 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-08 09:29:12,754 - DEBUG - send_request_headers.complete
2024-04-08 09:29:12,754 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-08 09:29:12,754 - DEBUG - send_request_body.complete
2024-04-08 09:29:12,755 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-08 09:29:12,887 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-08 09:29:13,006 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 08 Apr 2024 07:29:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'25'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999796'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'12ms'), (b'x-request-id', b'req_a5977194520b83b09688fbdcfca70b20'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'87108b8079df829a-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-08 09:29:13,007 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-08 09:29:13,007 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-08 09:29:13,008 - DEBUG - receive_response_body.complete
2024-04-08 09:29:13,009 - DEBUG - response_closed.started
2024-04-08 09:29:13,009 - DEBUG - response_closed.complete
2024-04-08 09:29:13,009 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-08 09:29:13,095 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-08 09:29:13,467 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-08 09:29:15,461 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-08 09:29:26,515 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-08 09:29:26,516 - DEBUG - Closing Client.session
2024-04-08 09:29:26,556 - DEBUG - close.started
2024-04-08 09:29:26,556 - DEBUG - close.complete
2024-04-08 09:31:20,699 - INFO - Tests performed with ollama + llama2.
2024-04-08 09:31:20,700 - INFO - Model name: llama2
2024-04-08 09:31:20,700 - INFO - Using backend: ollama
2024-04-08 09:31:20,701 - INFO - fake_useragent not found, using default user agent.To get a realistic header for requests, `pip install fake_useragent`.
2024-04-08 09:31:20,789 - DEBUG - Starting new HTTPS connection (1): docs.smith.langchain.com:443
2024-04-08 09:31:20,997 - DEBUG - https://docs.smith.langchain.com:443 "GET /user_guide HTTP/1.1" 200 59674
2024-04-08 09:31:21,090 - DEBUG - Encoding detection: utf_8 is most likely the one.
2024-04-08 09:31:21,109 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-08 09:31:21,110 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-08 09:31:21,170 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-08 09:31:21,171 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-08 09:31:21,489 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7fe42e92e160>, 'json_data': {'input': [[27317, 42985, 2724, 13002, 765, 11410, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985], [36234, 311, 1925, 2262, 9468, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985, 61791, 27317, 19368, 13325, 61791, 27317, 19368, 12438, 14, 10155, 61791, 27317, 42985, 5446, 61791, 6014, 11087, 311, 1883, 25310, 5256, 1502, 13002, 47, 39906, 12363, 12, 86021, 1305, 4628, 83463, 46067, 51803, 612, 20319, 811, 55715, 27636, 16617, 59482, 2239, 1502, 13002, 1966, 420, 2199, 27317, 42985, 2724, 13002, 27317, 42985, 374, 264, 5452, 369, 445, 11237, 3851, 4500, 11, 16967, 11, 323, 7649, 13, 763, 420, 8641, 11, 584, 4805, 11415, 279, 58321, 315, 88568, 23272, 42985, 11815, 323, 1268, 814, 5052, 1139, 1855, 6566, 315, 279, 3851, 4500, 48608, 13, 1226, 3987, 420, 690, 6179, 3932, 1268, 311, 1888, 29166, 420, 8147, 5452, 477, 3041, 1124, 2555, 311, 2980, 422, 814, 3207, 1120, 6041, 872, 11879, 43925, 67247, 16067, 12705, 67247, 445, 11237, 8522, 3629, 18065, 4062, 66196, 1990, 52032, 11, 1646, 4595, 11, 57470, 8446, 323, 1023, 5137, 627, 791, 5845, 311, 19019, 3619, 1268, 279, 1646, 374, 16785, 2001, 323, 7542, 1405, 433, 374, 22109, 2001, 374, 17235, 3062, 369, 420, 10474, 20967, 3252, 16067, 4599, 11469, 502, 445, 11237, 8522, 11, 584, 4284, 3515, 23272, 42985, 46515, 9147, 555, 1670, 627, 46, 728, 92455, 11, 433, 4536, 1431, 5995, 311, 1427, 520, 1475, 3254, 11917, 13, 4452, 11, 994, 2574, 733, 5076, 320, 276, 16907, 842, 1121, 11, 24746, 8479, 6471, 11, 29493, 1109, 3685, 11572, 11, 5190, 1109, 3685, 4037, 10648, 705, 433, 753, 9193, 11190, 311, 7542, 555, 3411, 1555, 279, 3851, 35483, 13, 23272, 42985, 6835, 2867, 24035, 323, 28803, 2038, 520, 1855, 3094, 315, 459, 445, 11237, 8668, 11, 3339, 433, 1790, 8831, 311, 10765, 323, 3789, 12, 1593, 4819, 627, 1687, 3493, 10068, 21568, 315, 6369, 6743, 11, 5865, 11, 323, 17622, 9477, 34032, 3475, 2638, 16067, 8142, 1690, 13707, 2103, 8448, 459, 2926, 2373, 315, 872, 3851, 3196, 389, 1054, 85, 24459, 12621, 9520, 584, 4070, 3970, 459, 7859, 1396, 315, 15009, 7411, 1212, 311, 11142, 264, 810, 1296, 16625, 5603, 13, 23272, 42985, 6276, 13707, 311, 1893, 30525, 11, 902, 527, 15661, 315, 11374, 323, 5905, 16674, 11, 323, 1005, 1521, 311, 1629, 7177, 389, 872, 445, 11237, 8522, 627, 9673, 1296, 5157, 649, 387, 23700, 304, 20155, 11, 3549, 389, 279, 11722, 11, 477, 35990, 505, 3851, 35483, 13, 23272, 42985, 1101, 3727, 433, 4228, 311, 1629, 2587, 56181, 320, 21704, 445, 11237, 323, 67709, 3196, 8, 311, 5573, 1296, 3135, 3034, 36642, 2806, 16067, 4599, 1760, 67247, 2204, 11028, 315, 701, 8522, 323, 3339, 4442, 11, 433, 753, 3062, 311, 1518, 3508, 477, 539, 499, 4070, 1239, 14715, 449, 5201, 311, 701, 2926, 1296, 5157, 627, 46, 728, 92455, 11, 4442, 304, 279, 10137, 11, 57470, 8446, 11, 477, 1646, 5873, 649, 617, 6908, 25127, 304, 14847, 9124, 555, 701, 3851, 627, 644, 2015, 311, 636, 264, 5647, 369, 902, 11678, 374, 16785, 2731, 11, 433, 753, 5505, 311, 387, 3025, 311, 1684, 3135, 369, 2204, 33483, 389, 279, 1890, 62823, 14737, 3185, 14656, 25034, 13, 1226, 4070, 29091, 17345, 304, 264, 1217, 22658, 12593, 1684, 369, 1296, 8640, 311, 3839, 323, 58681, 70880, 919, 304, 1296, 12483, 4028, 5361, 54862, 315, 701, 3851, 25469, 1993, 16067, 27317, 42985, 5825, 264, 42715, 4676, 369, 11295, 20140, 323, 66196, 627, 2028, 6276, 499, 311, 6288, 1296, 704, 2204, 52032, 323, 4211, 13, 1472, 649, 1825, 279, 42715, 505, 904, 10137, 477, 1646, 1629, 304, 701, 11917, 13], [11769, 42715, 1629, 374, 14042, 304, 279, 1887, 323, 649, 387, 1511, 311, 1893, 1296, 5157, 477, 9616, 449, 1023, 8640, 1823, 1955, 27866, 16067, 65911, 7649, 6276, 13707, 311, 6667, 810, 828, 389, 1268, 872, 445, 11237, 8522, 527, 16785, 304, 1972, 31184, 26350, 13, 763, 420, 10474, 11, 433, 753, 3062, 311, 2274, 459, 8830, 369, 279, 4595, 315, 11374, 279, 917, 374, 16785, 1664, 477, 31555, 389, 323, 1268, 7041, 433, 753, 15061, 1523, 304, 1884, 5157, 13, 11995, 11302, 4526, 323, 1629, 21917, 527, 9200, 369, 420, 29388, 13, 1115, 690, 1520, 304, 272, 2060, 315, 1296, 5157, 430, 649, 1520, 3839, 70880, 919, 73124, 782, 12760, 323, 4500, 315, 17392, 56181, 732, 2756, 1711, 37957, 16067, 4599, 28818, 701, 3851, 311, 459, 2926, 743, 315, 3932, 11, 433, 753, 3062, 311, 9762, 3823, 11302, 389, 279, 14847, 433, 753, 17843, 13, 1115, 8779, 4128, 6666, 311, 279, 1455, 7185, 8640, 323, 11415, 6964, 5157, 430, 527, 14718, 36033, 14847, 13, 23272, 42985, 6276, 499, 311, 15866, 11302, 12483, 311, 14042, 35483, 320, 14450, 92455, 11, 420, 374, 43770, 709, 311, 264, 11302, 3215, 304, 701, 917, 705, 1243, 4141, 389, 35483, 430, 617, 264, 3230, 11302, 4877, 323, 5573, 13, 362, 4279, 29388, 374, 311, 4141, 389, 35483, 430, 5371, 264, 8009, 1217, 11302, 5573, 11, 1243, 31646, 1523, 1139, 36033, 3585, 1701, 279, 11944, 11917, 1684, 8794, 1962, 1113, 1183, 2492, 16067, 27317, 42985, 1101, 11815, 11889, 8640, 311, 21917, 49194, 11, 902, 2187, 37142, 3046, 311, 15499, 25052, 7185, 35483, 323, 89498, 1124, 449, 5201, 311, 2204, 13186, 13, 1556, 1962, 3046, 649, 387, 5975, 82, 11, 25175, 11, 477, 1524, 3917, 5030, 11909, 13, 1115, 6276, 3932, 311, 2339, 70880, 919, 4028, 3062, 16865, 13186, 1943, 287, 51090, 311, 264, 40283, 16067, 2170, 701, 3851, 68711, 1555, 279, 13746, 7649, 10474, 11, 433, 596, 7718, 311, 3136, 26984, 828, 311, 46464, 323, 7417, 1202, 5178, 13, 23272, 42985, 20682, 499, 311, 923, 8640, 439, 10507, 311, 30525, 320, 1527, 2225, 279, 2447, 2199, 323, 2949, 459, 21917, 7325, 705, 24050, 701, 1296, 10401, 389, 1972, 31184, 26350, 13, 1115, 374, 264, 1401, 8935, 304, 3515, 701, 8558, 1887, 323, 701, 16865, 29901, 1887, 304, 279, 1890, 5452, 1087, 17158, 16067, 34, 2353, 989, 25052, 287, 1401, 828, 3585, 11, 7982, 29531, 287, 30525, 11, 37142, 1113, 35483, 11, 323, 39662, 1523, 1139, 3062, 828, 304, 11917, 1684, 527, 88568, 499, 4805, 1101, 1390, 311, 656, 3131, 701, 917, 13280, 5788, 67103, 2099, 11, 5423, 520, 279, 5788, 6566, 11, 433, 753, 16996, 311, 636, 264, 1579, 11852, 24131, 315, 3851, 5178, 449, 5201, 311, 40370, 11, 2853, 11, 323, 11302, 12483, 13, 1115, 26420, 430, 433, 596, 24944, 35946, 3135, 520, 5569, 8231, 1074, 56181, 323, 5113, 811, 2187, 499, 311, 1920, 323, 5573, 5788, 35483, 304, 3221, 1972, 7394, 1943, 17868, 11, 14906, 3493, 264, 47970, 1648, 311, 1912, 35483, 505, 264, 3254, 10652, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 701, 3851, 4028, 5361, 10800, 1345, 31414, 287, 323, 362, 16675, 27866, 16067, 27317, 42985, 5825, 16967, 27223, 430, 2187, 499, 311, 3839, 1401, 17150, 927, 892, 13, 1472, 649, 9407, 311, 1684, 17150, 369, 264, 2728, 4261, 323, 31646, 1523, 1139, 264, 3230, 828, 1486, 311, 636, 264, 11917, 2007, 369, 430, 892, 4261, 2001, 420, 374, 5423, 26222, 369, 28803, 5788, 4819, 79016, 42985, 1101, 6276, 369, 4877, 323, 11408, 50284, 11, 902, 6276, 3932, 311, 1906, 2204, 11028, 315, 872, 8522, 449, 2204, 48316, 323, 1684, 1268, 814, 527, 16785, 3185, 14656, 25034, 2949, 1855, 9676, 13, 1115, 374, 11190, 369, 362, 16675, 7649, 4442, 304, 10137, 11, 1646, 11, 477, 57470, 8446, 885, 59724, 811, 16067, 42172, 811, 527, 264, 8147, 4668, 304, 23272, 42985, 430, 2187, 499, 311, 2804, 6299, 389, 35483, 304, 3221, 1972, 7394, 13, 1115, 649, 387, 1511, 311, 9651, 5573, 35483, 11, 3708, 1124, 311, 21917, 49194, 11, 477, 3708, 1124, 311, 30525, 3354, 7124, 459, 33762, 11, 5042, 3493, 264, 4141, 3044, 11, 264, 25936, 4478, 11, 323, 459, 1957, 311, 2804, 13, 20319, 811, 527, 8104, 11190, 369, 8863, 35483, 520, 5788, 5569, 5221, 31458, 16067, 8607, 445, 11237, 8522, 527, 7447, 65051, 11, 7438, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311], [57865, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 323, 89498, 701, 3851, 4028, 5361, 10800, 1196, 300, 420, 2199, 11190, 30, 21994, 25310, 5256, 5971, 47, 39906, 12705, 67247, 65911, 27866, 46067, 34868, 24374, 541, 25904, 76715, 64207, 6247, 27317, 42985, 27721, 31380, 12830, 14, 10155, 7816, 97552, 27798, 13857, 7388, 220, 2366, 19, 23272, 19368, 11, 4953, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-08 09:31:21,493 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-04-08 09:31:21,568 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fe42e976010>
2024-04-08 09:31:21,568 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7fe42ea635c0> server_hostname='api.openai.com' timeout=None
2024-04-08 09:31:21,602 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fe42e976390>
2024-04-08 09:31:21,603 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-08 09:31:21,604 - DEBUG - send_request_headers.complete
2024-04-08 09:31:21,604 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-08 09:31:21,605 - DEBUG - send_request_body.complete
2024-04-08 09:31:21,605 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-08 09:31:21,923 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 08 Apr 2024 07:31:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'40'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'998580'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'85ms'), (b'x-request-id', b'req_d7d7a8861d0b6a09fe241cf3175e9fb4'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=QGK8yvjM.9wg1NL48TKNLJy0JNveir1ESgcfdHfpkCg-1712561480-1.0.1.1-rHEQOWw_ANTTCcU12adwVqBLqzYNPYueB0IzRE45gCyTsg7RcjT3wHaYRCoZd2zzWgFi3SuNsWhRwOvk6bZyeA; path=/; expires=Mon, 08-Apr-24 08:01:20 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=NSl_RG1qav5L8Z.tlPTrfvlM9B8oXFziOPBd6oU8FpQ-1712561480893-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'87108ea5cda80a24-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-08 09:31:21,924 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-08 09:31:21,924 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-08 09:31:22,065 - DEBUG - receive_response_body.complete
2024-04-08 09:31:22,066 - DEBUG - response_closed.started
2024-04-08 09:31:22,066 - DEBUG - response_closed.complete
2024-04-08 09:31:22,066 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-08 09:31:22,103 - DEBUG - Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU
2024-04-08 09:31:22,104 - INFO - Loading faiss with AVX2 support.
2024-04-08 09:31:22,162 - INFO - Successfully loaded faiss with AVX2 support.
2024-04-08 09:31:22,179 - DEBUG - Starting new HTTPS connection (1): api.smith.langchain.com:443
2024-04-08 09:31:22,220 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-08 09:31:22,494 - DEBUG - https://api.smith.langchain.com:443 "GET /info HTTP/1.1" 200 209
2024-04-08 09:31:22,674 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-08 09:31:22,745 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-08 09:31:31,564 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7fe42e799f80>, 'json_data': {'input': [[198, 29815, 389, 279, 10652, 3984, 11, 1618, 527, 1063, 4754, 2778, 20126, 430, 1436, 3493, 9959, 2038, 1473, 16, 13, 330, 4178, 44, 3851, 7649, 3600, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 5220, 477, 5070, 430, 3085, 7649, 3600, 369, 445, 11237, 8522, 627, 17, 13, 330, 27317, 42985, 445, 11237, 3851, 7649, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 810, 2038, 922, 23272, 42985, 596, 445, 11237, 3851, 7649, 3600, 323, 1268, 814, 649, 7945, 499, 304, 279, 7649, 1920, 627, 18, 13, 330, 4178, 44, 3851, 16865, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 5070, 430, 3493, 2038, 389, 38663, 445, 11237, 8522, 11, 2737, 10631, 323, 1888, 12659, 369, 279, 7649, 1920, 627, 19, 13, 330, 11180, 445, 11237, 3851, 7649, 7526, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 1949, 477, 3428, 41238, 7649, 7526, 430, 649, 7945, 499, 304, 279, 7649, 1920, 627, 20, 13, 330, 4178, 44, 3851, 6205, 4860, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 6205, 4860, 430, 527, 17037, 4691, 2391, 445, 11237, 8522, 11, 902, 649, 3041, 499, 459, 4623, 315, 1148, 311, 1755, 2391, 279, 7649, 1920, 627, 21, 13, 330, 4178, 44, 3851, 18459, 14307, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 14307, 477, 5070, 430, 3493, 19351, 389, 1268, 311, 10772, 369, 445, 11237, 8522, 11, 2737, 1296, 80671, 15174, 323, 2262, 3477, 627, 22, 13, 330, 39166, 2978, 48911, 7649, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 2038, 389, 279, 7649, 1920, 369, 2383, 2978, 48911, 11, 902, 1253, 2997, 445, 11237, 8522, 627, 23, 13, 330, 20171, 445, 11237, 3851, 7649, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 5070, 430, 3493, 2038, 389, 1268, 311, 1935, 445, 11237, 8522, 2930, 11, 2737, 904, 5016, 11774, 477, 38864, 430, 1253, 31889, 304, 279, 7649, 1920, 627, 24, 13, 330, 4178, 44, 3851, 58982, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 2038, 389, 58982, 369, 445, 11237, 8522, 11, 902, 649, 1520, 499, 3197, 323, 10772, 369, 279, 7649, 1920, 627, 605, 13, 330, 4178, 44, 3851, 10631, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 5070, 430, 3493, 10631, 323, 15174, 369, 1645, 287, 445, 11237, 8522, 11, 2737, 1296, 80671, 15174, 323, 2262, 3477, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-08 09:31:31,565 - DEBUG - close.started
2024-04-08 09:31:31,565 - DEBUG - close.complete
2024-04-08 09:31:31,565 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-04-08 09:31:31,689 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fe42e770d50>
2024-04-08 09:31:31,690 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7fe42ea635c0> server_hostname='api.openai.com' timeout=None
2024-04-08 09:31:31,762 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fe42eb75bd0>
2024-04-08 09:31:31,763 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-08 09:31:31,763 - DEBUG - send_request_headers.complete
2024-04-08 09:31:31,764 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-08 09:31:31,764 - DEBUG - send_request_body.complete
2024-04-08 09:31:31,765 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-08 09:31:31,897 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-08 09:31:32,033 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 08 Apr 2024 07:31:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'26'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999619'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'22ms'), (b'x-request-id', b'req_1fa406d7d325d6b715b0369f247b8540'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'87108ee53c5c2d77-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-08 09:31:32,034 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-08 09:31:32,034 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-08 09:31:32,035 - DEBUG - receive_response_body.complete
2024-04-08 09:31:32,035 - DEBUG - response_closed.started
2024-04-08 09:31:32,035 - DEBUG - response_closed.complete
2024-04-08 09:31:32,035 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-08 09:31:32,101 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-08 09:31:32,158 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-08 09:31:32,513 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-08 09:31:37,332 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7fe42e79bd80>, 'json_data': {'input': [[198, 20817, 389, 279, 10652, 3984, 11, 1618, 527, 1063, 4754, 2778, 20126, 430, 1436, 387, 1511, 311, 1505, 2038, 9959, 311, 279, 8712, 1473, 16, 13, 330, 4178, 44, 3851, 7649, 3600, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 5220, 477, 11351, 430, 3085, 7649, 3600, 369, 445, 11237, 8522, 627, 17, 13, 330, 4178, 44, 26360, 8670, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 2038, 389, 279, 8670, 369, 26360, 311, 445, 11237, 7620, 11, 902, 1253, 387, 5505, 304, 38663, 701, 1866, 8522, 627, 18, 13, 330, 4178, 44, 3851, 3477, 1920, 1, 482, 1115, 3319, 649, 3493, 26793, 1139, 279, 1920, 1511, 555, 48911, 42547, 311, 15806, 445, 11237, 8522, 11, 902, 649, 1520, 499, 3619, 1268, 701, 3851, 374, 1694, 26126, 627, 19, 13, 330, 4178, 44, 7274, 18459, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 5070, 323, 10631, 389, 1268, 311, 10772, 369, 459, 445, 11237, 7274, 11, 902, 1253, 387, 5505, 422, 499, 527, 19486, 311, 459, 445, 11237, 2068, 430, 7612, 459, 7274, 439, 961, 315, 279, 26360, 1920, 627, 20, 13, 330, 4178, 44, 55855, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 2038, 389, 55855, 323, 6020, 12576, 2671, 2561, 369, 445, 11237, 4236, 11, 902, 1253, 387, 9959, 422, 499, 527, 13126, 19486, 311, 459, 445, 11237, 2068, 719, 527, 11920, 922, 279, 2853, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-08 09:31:37,333 - DEBUG - close.started
2024-04-08 09:31:37,334 - DEBUG - close.complete
2024-04-08 09:31:37,334 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-04-08 09:31:37,400 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fe42e269fd0>
2024-04-08 09:31:37,400 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7fe42ea635c0> server_hostname='api.openai.com' timeout=None
2024-04-08 09:31:37,432 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fe42e26b7d0>
2024-04-08 09:31:37,433 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-08 09:31:37,434 - DEBUG - send_request_headers.complete
2024-04-08 09:31:37,434 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-08 09:31:37,434 - DEBUG - send_request_body.complete
2024-04-08 09:31:37,435 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-08 09:31:37,580 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-08 09:31:37,654 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 08 Apr 2024 07:31:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'23'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999771'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'13ms'), (b'x-request-id', b'req_dd280c1191f98986a87f6c0debe141c1'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'87108f08bab2168d-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-08 09:31:37,655 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-08 09:31:37,655 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-08 09:31:37,657 - DEBUG - receive_response_body.complete
2024-04-08 09:31:37,657 - DEBUG - response_closed.started
2024-04-08 09:31:37,657 - DEBUG - response_closed.complete
2024-04-08 09:31:37,657 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-08 09:31:37,758 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-08 09:31:38,178 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-08 09:31:40,165 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-08 09:31:54,318 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-08 09:31:54,322 - DEBUG - Closing Client.session
2024-04-08 09:31:54,394 - DEBUG - close.started
2024-04-08 09:31:54,395 - DEBUG - close.complete
2024-04-08 09:32:55,738 - INFO - Tests performed with ollama + llama2.
2024-04-08 09:32:55,740 - INFO - Model name: llama2
2024-04-08 09:32:55,740 - INFO - Using backend: ollama
2024-04-08 09:32:55,741 - INFO - fake_useragent not found, using default user agent.To get a realistic header for requests, `pip install fake_useragent`.
2024-04-08 09:32:55,840 - DEBUG - Starting new HTTPS connection (1): docs.smith.langchain.com:443
2024-04-08 09:32:56,036 - DEBUG - https://docs.smith.langchain.com:443 "GET /user_guide HTTP/1.1" 200 59674
2024-04-08 09:32:56,124 - DEBUG - Encoding detection: utf_8 is most likely the one.
2024-04-08 09:32:56,151 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-08 09:32:56,152 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-08 09:32:56,221 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-04-08 09:32:56,222 - DEBUG - load_verify_locations cafile='/home/gilbe/ai_assistant/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2024-04-08 09:32:56,545 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7fb9cc2ca0c0>, 'json_data': {'input': [[27317, 42985, 2724, 13002, 765, 11410, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985], [36234, 311, 1925, 2262, 9468, 99, 250, 31643, 9468, 249, 254, 31643, 23272, 42985, 61791, 27317, 19368, 13325, 61791, 27317, 19368, 12438, 14, 10155, 61791, 27317, 42985, 5446, 61791, 6014, 11087, 311, 1883, 25310, 5256, 1502, 13002, 47, 39906, 12363, 12, 86021, 1305, 4628, 83463, 46067, 51803, 612, 20319, 811, 55715, 27636, 16617, 59482, 2239, 1502, 13002, 1966, 420, 2199, 27317, 42985, 2724, 13002, 27317, 42985, 374, 264, 5452, 369, 445, 11237, 3851, 4500, 11, 16967, 11, 323, 7649, 13, 763, 420, 8641, 11, 584, 4805, 11415, 279, 58321, 315, 88568, 23272, 42985, 11815, 323, 1268, 814, 5052, 1139, 1855, 6566, 315, 279, 3851, 4500, 48608, 13, 1226, 3987, 420, 690, 6179, 3932, 1268, 311, 1888, 29166, 420, 8147, 5452, 477, 3041, 1124, 2555, 311, 2980, 422, 814, 3207, 1120, 6041, 872, 11879, 43925, 67247, 16067, 12705, 67247, 445, 11237, 8522, 3629, 18065, 4062, 66196, 1990, 52032, 11, 1646, 4595, 11, 57470, 8446, 323, 1023, 5137, 627, 791, 5845, 311, 19019, 3619, 1268, 279, 1646, 374, 16785, 2001, 323, 7542, 1405, 433, 374, 22109, 2001, 374, 17235, 3062, 369, 420, 10474, 20967, 3252, 16067, 4599, 11469, 502, 445, 11237, 8522, 11, 584, 4284, 3515, 23272, 42985, 46515, 9147, 555, 1670, 627, 46, 728, 92455, 11, 433, 4536, 1431, 5995, 311, 1427, 520, 1475, 3254, 11917, 13, 4452, 11, 994, 2574, 733, 5076, 320, 276, 16907, 842, 1121, 11, 24746, 8479, 6471, 11, 29493, 1109, 3685, 11572, 11, 5190, 1109, 3685, 4037, 10648, 705, 433, 753, 9193, 11190, 311, 7542, 555, 3411, 1555, 279, 3851, 35483, 13, 23272, 42985, 6835, 2867, 24035, 323, 28803, 2038, 520, 1855, 3094, 315, 459, 445, 11237, 8668, 11, 3339, 433, 1790, 8831, 311, 10765, 323, 3789, 12, 1593, 4819, 627, 1687, 3493, 10068, 21568, 315, 6369, 6743, 11, 5865, 11, 323, 17622, 9477, 34032, 3475, 2638, 16067, 8142, 1690, 13707, 2103, 8448, 459, 2926, 2373, 315, 872, 3851, 3196, 389, 1054, 85, 24459, 12621, 9520, 584, 4070, 3970, 459, 7859, 1396, 315, 15009, 7411, 1212, 311, 11142, 264, 810, 1296, 16625, 5603, 13, 23272, 42985, 6276, 13707, 311, 1893, 30525, 11, 902, 527, 15661, 315, 11374, 323, 5905, 16674, 11, 323, 1005, 1521, 311, 1629, 7177, 389, 872, 445, 11237, 8522, 627, 9673, 1296, 5157, 649, 387, 23700, 304, 20155, 11, 3549, 389, 279, 11722, 11, 477, 35990, 505, 3851, 35483, 13, 23272, 42985, 1101, 3727, 433, 4228, 311, 1629, 2587, 56181, 320, 21704, 445, 11237, 323, 67709, 3196, 8, 311, 5573, 1296, 3135, 3034, 36642, 2806, 16067, 4599, 1760, 67247, 2204, 11028, 315, 701, 8522, 323, 3339, 4442, 11, 433, 753, 3062, 311, 1518, 3508, 477, 539, 499, 4070, 1239, 14715, 449, 5201, 311, 701, 2926, 1296, 5157, 627, 46, 728, 92455, 11, 4442, 304, 279, 10137, 11, 57470, 8446, 11, 477, 1646, 5873, 649, 617, 6908, 25127, 304, 14847, 9124, 555, 701, 3851, 627, 644, 2015, 311, 636, 264, 5647, 369, 902, 11678, 374, 16785, 2731, 11, 433, 753, 5505, 311, 387, 3025, 311, 1684, 3135, 369, 2204, 33483, 389, 279, 1890, 62823, 14737, 3185, 14656, 25034, 13, 1226, 4070, 29091, 17345, 304, 264, 1217, 22658, 12593, 1684, 369, 1296, 8640, 311, 3839, 323, 58681, 70880, 919, 304, 1296, 12483, 4028, 5361, 54862, 315, 701, 3851, 25469, 1993, 16067, 27317, 42985, 5825, 264, 42715, 4676, 369, 11295, 20140, 323, 66196, 627, 2028, 6276, 499, 311, 6288, 1296, 704, 2204, 52032, 323, 4211, 13, 1472, 649, 1825, 279, 42715, 505, 904, 10137, 477, 1646, 1629, 304, 701, 11917, 13], [11769, 42715, 1629, 374, 14042, 304, 279, 1887, 323, 649, 387, 1511, 311, 1893, 1296, 5157, 477, 9616, 449, 1023, 8640, 1823, 1955, 27866, 16067, 65911, 7649, 6276, 13707, 311, 6667, 810, 828, 389, 1268, 872, 445, 11237, 8522, 527, 16785, 304, 1972, 31184, 26350, 13, 763, 420, 10474, 11, 433, 753, 3062, 311, 2274, 459, 8830, 369, 279, 4595, 315, 11374, 279, 917, 374, 16785, 1664, 477, 31555, 389, 323, 1268, 7041, 433, 753, 15061, 1523, 304, 1884, 5157, 13, 11995, 11302, 4526, 323, 1629, 21917, 527, 9200, 369, 420, 29388, 13, 1115, 690, 1520, 304, 272, 2060, 315, 1296, 5157, 430, 649, 1520, 3839, 70880, 919, 73124, 782, 12760, 323, 4500, 315, 17392, 56181, 732, 2756, 1711, 37957, 16067, 4599, 28818, 701, 3851, 311, 459, 2926, 743, 315, 3932, 11, 433, 753, 3062, 311, 9762, 3823, 11302, 389, 279, 14847, 433, 753, 17843, 13, 1115, 8779, 4128, 6666, 311, 279, 1455, 7185, 8640, 323, 11415, 6964, 5157, 430, 527, 14718, 36033, 14847, 13, 23272, 42985, 6276, 499, 311, 15866, 11302, 12483, 311, 14042, 35483, 320, 14450, 92455, 11, 420, 374, 43770, 709, 311, 264, 11302, 3215, 304, 701, 917, 705, 1243, 4141, 389, 35483, 430, 617, 264, 3230, 11302, 4877, 323, 5573, 13, 362, 4279, 29388, 374, 311, 4141, 389, 35483, 430, 5371, 264, 8009, 1217, 11302, 5573, 11, 1243, 31646, 1523, 1139, 36033, 3585, 1701, 279, 11944, 11917, 1684, 8794, 1962, 1113, 1183, 2492, 16067, 27317, 42985, 1101, 11815, 11889, 8640, 311, 21917, 49194, 11, 902, 2187, 37142, 3046, 311, 15499, 25052, 7185, 35483, 323, 89498, 1124, 449, 5201, 311, 2204, 13186, 13, 1556, 1962, 3046, 649, 387, 5975, 82, 11, 25175, 11, 477, 1524, 3917, 5030, 11909, 13, 1115, 6276, 3932, 311, 2339, 70880, 919, 4028, 3062, 16865, 13186, 1943, 287, 51090, 311, 264, 40283, 16067, 2170, 701, 3851, 68711, 1555, 279, 13746, 7649, 10474, 11, 433, 596, 7718, 311, 3136, 26984, 828, 311, 46464, 323, 7417, 1202, 5178, 13, 23272, 42985, 20682, 499, 311, 923, 8640, 439, 10507, 311, 30525, 320, 1527, 2225, 279, 2447, 2199, 323, 2949, 459, 21917, 7325, 705, 24050, 701, 1296, 10401, 389, 1972, 31184, 26350, 13, 1115, 374, 264, 1401, 8935, 304, 3515, 701, 8558, 1887, 323, 701, 16865, 29901, 1887, 304, 279, 1890, 5452, 1087, 17158, 16067, 34, 2353, 989, 25052, 287, 1401, 828, 3585, 11, 7982, 29531, 287, 30525, 11, 37142, 1113, 35483, 11, 323, 39662, 1523, 1139, 3062, 828, 304, 11917, 1684, 527, 88568, 499, 4805, 1101, 1390, 311, 656, 3131, 701, 917, 13280, 5788, 67103, 2099, 11, 5423, 520, 279, 5788, 6566, 11, 433, 753, 16996, 311, 636, 264, 1579, 11852, 24131, 315, 3851, 5178, 449, 5201, 311, 40370, 11, 2853, 11, 323, 11302, 12483, 13, 1115, 26420, 430, 433, 596, 24944, 35946, 3135, 520, 5569, 8231, 1074, 56181, 323, 5113, 811, 2187, 499, 311, 1920, 323, 5573, 5788, 35483, 304, 3221, 1972, 7394, 1943, 17868, 11, 14906, 3493, 264, 47970, 1648, 311, 1912, 35483, 505, 264, 3254, 10652, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 701, 3851, 4028, 5361, 10800, 1345, 31414, 287, 323, 362, 16675, 27866, 16067, 27317, 42985, 5825, 16967, 27223, 430, 2187, 499, 311, 3839, 1401, 17150, 927, 892, 13, 1472, 649, 9407, 311, 1684, 17150, 369, 264, 2728, 4261, 323, 31646, 1523, 1139, 264, 3230, 828, 1486, 311, 636, 264, 11917, 2007, 369, 430, 892, 4261, 2001, 420, 374, 5423, 26222, 369, 28803, 5788, 4819, 79016, 42985, 1101, 6276, 369, 4877, 323, 11408, 50284, 11, 902, 6276, 3932, 311, 1906, 2204, 11028, 315, 872, 8522, 449, 2204, 48316, 323, 1684, 1268, 814, 527, 16785, 3185, 14656, 25034, 2949, 1855, 9676, 13, 1115, 374, 11190, 369, 362, 16675, 7649, 4442, 304, 10137, 11, 1646, 11, 477, 57470, 8446, 885, 59724, 811, 16067, 42172, 811, 527, 264, 8147, 4668, 304, 23272, 42985, 430, 2187, 499, 311, 2804, 6299, 389, 35483, 304, 3221, 1972, 7394, 13, 1115, 649, 387, 1511, 311, 9651, 5573, 35483, 11, 3708, 1124, 311, 21917, 49194, 11, 477, 3708, 1124, 311, 30525, 3354, 7124, 459, 33762, 11, 5042, 3493, 264, 4141, 3044, 11, 264, 25936, 4478, 11, 323, 459, 1957, 311, 2804, 13, 20319, 811, 527, 8104, 11190, 369, 8863, 35483, 520, 5788, 5569, 5221, 31458, 16067, 8607, 445, 11237, 8522, 527, 7447, 65051, 11, 7438, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311], [57865, 430, 814, 21736, 264, 4101, 315, 22639, 1990, 279, 1217, 323, 279, 3851, 13, 23272, 42985, 5825, 264, 14906, 1684, 430, 5315, 35483, 505, 264, 3254, 10652, 3871, 11, 3339, 433, 8831, 311, 3839, 279, 5178, 315, 323, 89498, 701, 3851, 4028, 5361, 10800, 1196, 300, 420, 2199, 11190, 30, 21994, 25310, 5256, 5971, 47, 39906, 12705, 67247, 65911, 27866, 46067, 34868, 24374, 541, 25904, 76715, 64207, 6247, 27317, 42985, 27721, 31380, 12830, 14, 10155, 7816, 97552, 27798, 13857, 7388, 220, 2366, 19, 23272, 19368, 11, 4953, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-08 09:32:56,550 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-04-08 09:32:56,629 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fb9cc311b10>
2024-04-08 09:32:56,629 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7fb9cc3fb5c0> server_hostname='api.openai.com' timeout=None
2024-04-08 09:32:56,662 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fb9eb614d10>
2024-04-08 09:32:56,662 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-08 09:32:56,663 - DEBUG - send_request_headers.complete
2024-04-08 09:32:56,664 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-08 09:32:56,664 - DEBUG - send_request_body.complete
2024-04-08 09:32:56,665 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-08 09:32:56,962 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 08 Apr 2024 07:32:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'45'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'998580'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'85ms'), (b'x-request-id', b'req_ae3633be7f6ba617dbd7bc2afa487d92'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=3uhlKRVgjU.kFKoHYBbBCplq8SOVU.awPe6oJfMrlFQ-1712561575-1.0.1.1-GUmLfTj4NiuX9hUlYoCwdSk2MhUmst1DYbLBNnwn7HQ.CUqi3vJZZexm_6hCWb2MHaaXc6nVQM3m_kCTgFo7HA; path=/; expires=Mon, 08-Apr-24 08:02:55 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=lPR6hwRDdMkoK5Mgmx_L9LlHRVvNXu8srNgqUC1MdHw-1712561575932-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'871090f7ef369902-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-08 09:32:56,964 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-08 09:32:56,965 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-08 09:32:57,108 - DEBUG - receive_response_body.complete
2024-04-08 09:32:57,108 - DEBUG - response_closed.started
2024-04-08 09:32:57,108 - DEBUG - response_closed.complete
2024-04-08 09:32:57,109 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-08 09:32:57,147 - DEBUG - Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU
2024-04-08 09:32:57,147 - INFO - Loading faiss with AVX2 support.
2024-04-08 09:32:57,197 - INFO - Successfully loaded faiss with AVX2 support.
2024-04-08 09:32:57,216 - DEBUG - Starting new HTTPS connection (1): api.smith.langchain.com:443
2024-04-08 09:32:57,264 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-08 09:32:57,548 - DEBUG - https://api.smith.langchain.com:443 "GET /info HTTP/1.1" 200 209
2024-04-08 09:32:57,646 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-08 09:32:57,791 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-08 09:33:04,818 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7fb9cc041ee0>, 'json_data': {'input': [[198, 40914, 11, 358, 4265, 387, 6380, 311, 1520, 0, 5810, 527, 1063, 5627, 23272, 42985, 649, 7945, 449, 7649, 445, 11237, 8522, 1473, 16, 13, 18955, 11688, 29225, 320, 45, 12852, 1680, 23272, 42985, 706, 1027, 16572, 389, 5370, 452, 12852, 9256, 11, 2737, 4221, 34579, 11, 1495, 24790, 11, 323, 27065, 6492, 13, 1102, 649, 1520, 15806, 279, 5178, 315, 459, 445, 11237, 304, 1521, 9256, 555, 24038, 1495, 10688, 430, 1296, 1202, 5845, 311, 1920, 323, 3619, 5933, 4221, 627, 17, 13, 2991, 24367, 25, 23272, 42985, 649, 7068, 1495, 10688, 430, 527, 4528, 311, 1884, 1511, 304, 279, 4967, 828, 315, 459, 445, 11237, 13, 1115, 649, 1520, 8720, 279, 445, 11237, 596, 5845, 311, 7068, 56887, 323, 26569, 1495, 11, 439, 1664, 439, 1202, 8824, 311, 93640, 311, 502, 13650, 477, 9404, 627, 18, 13, 16225, 22559, 287, 25, 23272, 42985, 706, 1027, 16572, 389, 264, 7029, 2134, 315, 4860, 505, 5370, 31576, 11, 2737, 8198, 11, 3925, 11, 17649, 11, 323, 810, 13, 1102, 649, 1520, 15806, 279, 445, 11237, 596, 5845, 311, 4320, 6485, 4860, 323, 3493, 13687, 14847, 555, 24038, 4860, 323, 38663, 279, 445, 11237, 596, 5178, 627, 19, 13, 70589, 24367, 25, 23272, 42985, 649, 16988, 304, 10652, 449, 459, 445, 11237, 555, 24038, 1495, 11374, 430, 1296, 1202, 5845, 311, 6013, 36001, 311, 2204, 52032, 477, 13650, 13, 1115, 649, 1520, 15806, 279, 445, 11237, 596, 5845, 311, 7068, 56887, 323, 2317, 1870, 9959, 14847, 304, 264, 7669, 1697, 6376, 382, 1271, 1505, 810, 2038, 389, 1268, 23272, 42985, 649, 7945, 449, 7649, 445, 11237, 8522, 11, 499, 1253, 1390, 311, 2778, 369, 2930, 5070, 477, 14584, 16064, 430, 4358, 279, 1005, 315, 4221, 4211, 369, 16865, 323, 7649, 13, 4427, 9959, 21513, 311, 2778, 369, 2997, 330, 11789, 1646, 16865, 1359, 330, 4178, 44, 7649, 1359, 330, 45, 12852, 15813, 1359, 323, 330, 53980, 4221, 8830, 1210]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-08 09:33:04,819 - DEBUG - close.started
2024-04-08 09:33:04,819 - DEBUG - close.complete
2024-04-08 09:33:04,819 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-04-08 09:33:04,890 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fb9cc087f10>
2024-04-08 09:33:04,890 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7fb9cc3fb5c0> server_hostname='api.openai.com' timeout=None
2024-04-08 09:33:04,927 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fb9cc4bcd10>
2024-04-08 09:33:04,928 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-08 09:33:04,929 - DEBUG - send_request_headers.complete
2024-04-08 09:33:04,929 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-08 09:33:04,930 - DEBUG - send_request_body.complete
2024-04-08 09:33:04,930 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-08 09:33:05,072 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-08 09:33:05,162 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 08 Apr 2024 07:33:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'28'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999681'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'19ms'), (b'x-request-id', b'req_32422bab826446b726df64f5229d82db'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8710912b8e09991e-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-08 09:33:05,163 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-08 09:33:05,163 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-08 09:33:05,164 - DEBUG - receive_response_body.complete
2024-04-08 09:33:05,165 - DEBUG - response_closed.started
2024-04-08 09:33:05,165 - DEBUG - response_closed.complete
2024-04-08 09:33:05,165 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-08 09:33:05,246 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-08 09:33:05,268 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-08 09:33:05,540 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-08 09:33:14,608 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7fb9cc041a80>, 'json_data': {'input': [[198, 40914, 11, 1618, 527, 1063, 3284, 2778, 20126, 5552, 311, 279, 10652, 1473, 16, 13, 330, 4178, 44, 3851, 7649, 3600, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 5220, 477, 5070, 430, 3085, 7649, 3600, 369, 445, 11237, 8522, 627, 17, 13, 330, 27317, 42985, 445, 11237, 3851, 3477, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 810, 2038, 922, 23272, 42985, 596, 445, 11237, 3851, 3477, 2532, 323, 1148, 433, 71204, 627, 18, 13, 330, 4178, 44, 3851, 53673, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 264, 1160, 315, 3673, 311, 2997, 304, 701, 445, 11237, 3851, 11, 902, 649, 387, 5505, 369, 659, 35915, 24280, 477, 12593, 449, 1023, 8522, 627, 19, 13, 330, 4178, 44, 26360, 8670, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 2038, 922, 279, 48911, 8670, 369, 445, 11237, 7620, 520, 2204, 23978, 323, 14673, 627, 20, 13, 330, 27317, 42985, 445, 11237, 2068, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 810, 2038, 922, 23272, 42985, 596, 445, 11237, 2068, 11, 2737, 1202, 30676, 11, 3388, 33935, 11, 323, 3851, 1920, 627, 21, 13, 330, 4178, 44, 3851, 10631, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 9650, 323, 15174, 369, 27666, 459, 445, 11237, 3851, 7946, 627, 22, 13, 330, 27317, 42985, 8544, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 11302, 323, 8544, 505, 3347, 4236, 477, 32177, 315, 23272, 42985, 596, 445, 11237, 2068, 11, 902, 649, 387, 5505, 304, 38663, 279, 4367, 315, 279, 2068, 627, 23, 13, 330, 4178, 44, 55855, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 2038, 922, 55855, 323, 6020, 12576, 2671, 369, 445, 11237, 7620, 11, 902, 649, 1520, 4445, 279, 2853, 315, 39038, 323, 5496, 18512, 627, 24, 13, 330, 27317, 42985, 26360, 13443, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 828, 389, 279, 26586, 7969, 323, 1023, 13443, 369, 23272, 42985, 596, 445, 11237, 2068, 11, 902, 649, 3041, 499, 459, 4623, 315, 279, 10937, 323, 701, 17393, 315, 1694, 11928, 627, 605, 13, 330, 4178, 44, 2930, 14307, 1, 482, 1115, 3319, 649, 1520, 499, 1505, 2038, 922, 2930, 445, 11237, 7620, 477, 14307, 9076, 555, 23978, 477, 14673, 11, 902, 649, 387, 264, 17125, 3072, 369, 1884, 889, 4250, 9604, 6989, 389, 15679, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-04-08 09:33:14,609 - DEBUG - close.started
2024-04-08 09:33:14,609 - DEBUG - close.complete
2024-04-08 09:33:14,609 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-04-08 09:33:14,685 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fb9cc073050>
2024-04-08 09:33:14,685 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7fb9cc3fb5c0> server_hostname='api.openai.com' timeout=None
2024-04-08 09:33:14,728 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fb9cc0d50d0>
2024-04-08 09:33:14,728 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-04-08 09:33:14,728 - DEBUG - send_request_headers.complete
2024-04-08 09:33:14,728 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-04-08 09:33:14,728 - DEBUG - send_request_body.complete
2024-04-08 09:33:14,728 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-04-08 09:33:14,878 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-08 09:33:14,992 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 08 Apr 2024 07:33:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-yuxywwcibjk6hhjc3p4qgfby'), (b'openai-processing-ms', b'25'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999619'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'22ms'), (b'x-request-id', b'req_f1855d6fb0f15508e6b64292f07be39a'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'87109168ccd982c1-ARN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-04-08 09:33:14,992 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-04-08 09:33:14,992 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-04-08 09:33:14,993 - DEBUG - receive_response_body.complete
2024-04-08 09:33:14,993 - DEBUG - response_closed.started
2024-04-08 09:33:14,993 - DEBUG - response_closed.complete
2024-04-08 09:33:14,993 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-04-08 09:33:15,044 - DEBUG - Starting new HTTP connection (1): localhost:11434
2024-04-08 09:33:15,414 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-08 09:33:17,486 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2024-04-08 09:33:30,149 - DEBUG - https://api.smith.langchain.com:443 "POST /runs/batch HTTP/1.1" 202 33
2024-04-08 09:33:30,153 - DEBUG - Closing Client.session
2024-04-08 09:33:30,236 - DEBUG - close.started
2024-04-08 09:33:30,236 - DEBUG - close.complete
